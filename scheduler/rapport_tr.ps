%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: rapport_tr.dvi
%%CreationDate: Thu Apr  2 10:55:33 2020
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: SFRM1728 SFRM1200 SFBX1440 NimbusSanL-Regu CMMI10 CMR7
%%+ SFRM1000 SFIT1000 SFTT1000
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips rapport_tr.dvi -f
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2020.04.02:1255
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: SFTT1000
%!FontType1-1.0: SFTT1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ectt1000, tctt1000, latt1000, lbtt1000, lctt1000, rxtt1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFTT1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-208 -360 1374 838}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1ED6A435B5950D131BC48179F5BE3191944DD
8626DE76AAFD8EC4DC8241F2ED33E10698DC7741D6E45CF5A02FC6D2068AA205
EF3C4FDCDE803F4D1D4FF03A079CD4FC4BAB3C558A8FDDF53D34AABB7D89E4E0
CF76F77ECE57575C27718A8074CE275DDE4AD245220A8236400BE47BC76DE13A
9EDA4BD5744C71DB407BCA39DBC9D857122A1DA969E6D0915FDC1622AB8BB88A
93D2EE72E9A2FA73193D6CDF254252980674DB644EEB36A2036E04DB649F816E
E70C4C43E88609C8E8B8B84A920CA933FA00F41F2FC3C867825E2AC658FA0F7F
331323E22BD193A0A8009B3F0EE6D55281CF1076F1631FE509E79941FF08D0B7
ACFEE566C76FBC09F3B4AA57959D4EFC34413ADB46292ED99CC8EC4436DE2CAB
86B8B48847353E826F5346762CD5D353727DBB502E08B934DAE4E99894706BCA
DC35AA52C8610137C7E336009D564831E1E7936600CC3891D3A58A539523329A
45DD54B8D76F43582CE621F74FE7F8FB06E32612FB06B66CBB3096C0DD63D097
08C206A620CCC9ECB49CDC17295CD0B3C9D2DFCAACE46137490589D72A6A57BD
FE97C0CCB9087CF31EAA7860444C0D2A1B230F1879B1CD80CED3863680AE37F7
39A117963BCA696B1EFA8EA500DF5B1C5F6F42EA16D46CC0687DC684B2AE28CA
8511448362E82092B10FE5EC94ED5667ECBC015A6817A57769EC9EEAD9DB20D2
171DB059E96BD97ACD9D5EF4AAD6612EB7D1A0ED6DE0C7A5BB6A1796DDD98278
F2222F94C2D9FABB1DAD4E9D5260EE9B7A881D2F26EB1EC11D1665CC06FB71F8
026DC8EE4278EC008A25E4F5C4D5D5090888E2A1732B36220758A2DE86A7E5A8
6B8B6249A125B0BEFC25A4A5795647E45B3BE2C9DA00E7EA72C25CF8C7E10810
995360EA2FAB43254E2F2B858DBC35ADD9A094154193D0526C198FC570C89C3E
209513E8D5268B987C05C0B9114B3F340503E3B35852776303A1FA1AE15E98B2
DFFD072B9A0B00EF0A7082AE4B7898B953E96400983B2A476965445B33C16B92
8D96469645E90DC393ECFD1F0D1FF1A494D7774DE8818BBBB81149773D0DF63D
5E2BDD7F55340CCAA2C29EECB5A9AF76FE1B7195F7A89A4DF974AB2D341C70A2
A97C9184CB81320DF07DEA87EFC6AAE69F735565B9A279C94711D7350422FAC8
2C374D5DA2920460CBB67DCFDB5A885DDDE88C9BAC3F458A51932D7AA774B281
2D6090FD4B1D4EDCC43816AD379AFFDB32CBB7DD7BBE902840B0E696B909C937
323EB4D4D854478CD058DDCA8F6F19DB4EDEF832CE2A982CDDFEEE1C519D6230
37D39EDBF54B68FFB571615C0EAA8BE59F75A9AF83248D170CDDA5C1CE6E9161
790F05A8FAEE3A845A1C9040D6F16668DAEAC582E46E13447122B95093F816F8
94ADD420E1B5749C3EB71C4EF774A5D79874B743292E0E0B6EDC2A19EB425740
49DCA5FF3091840199E01D25E908E4505E84517C80983C0D44BC29B509DE4C9A
4020E0C99E0D74BAB0E1025C33C1A6A17F95859DC19929F34995728F4B225616
FC555CD94593804226B0191860A062EA1FF4047A2705D72210735BCEA5735DF3
16A683E49F9334D7F1339D898038B50C0E552040F86001CA4EA354E74DBBE94C
AC3E80E5F5127AAFB961C0BF1CF18DF16ACA8D20DC033451BD6A6A518777CF2E
2BFA2AA697F27FC4CDD600A8B30CC8AD97D85580D34B6D844A30A5CD9A2B92B0
0BCC6B4C6F1E4B622AFFE3B187395EF316196C9D4FB2F587BE58063E5CE124B6
A09DF443DB066FEE28F67CFBEB2EE4AF7AAD78A37E8A29152315F5CE6E364D5D
18B9C5796A7BDA946D33464E7EFF3CFCE4A3440770BCEDF28AC65210C3652D58
9681C058059DC2EFC61EEFC10FD101B48FA7CFA74B5C88F53908837FA899E3FB
8440F2588CA7826435CFB937E6CA5478991E3259C878F260DF0DFBD65171980C
9059C488192AF1FCEA7C2E384AD62F4436EC6E9E515AF333A7E2C594F568B0C2
59DFEFFAF7CA831A87E00B4D60B2CE8882889AB4FF6866C81C444AC83D31838C
15C70405D9C2C0886337D8AAA2B6937BE5560D808C9D96D0D7D51FE92D52DE09
8194D4C2A9E505542ED950A6D66AE823D871F2E83D7D3E1F216F33D02958474A
A95A68C4F2B71336FE2CD78F24CC1B72CF4BE7BAA7B108793BA95659C2679B05
EBAB7F318DA3C65B7B737669EC0272C7BE8C807525631A459365B7FD44E96228
E2CB7B463B77FFB0D7A5AABDBA6E65A7C94A8FE239D01F59EF9D1F2A12D10CA0
6A9190F656724239EA5AE88B7C73FAF13FF8D90CC02040AD4102EC84DEDEECFC
D5E0AEB7E228F211E5786CF498EB271C57922952B5B7576890D0823E35D3600C
FE96CF3CE7F41DA9ADECFA259D1ECE055384331171DE95D29FBB84407FBEA91A
5C1849A85ADE38E1160368778A557ED09C2D3375EF314567EF7B00886ED9D52A
210969C8E350CA0CDA66B5FAEA03843BB4FDB905112EB251E08434CD1FB81B89
61F03E096889DC9024509183C63092B883926A3CB77DDBFE0100C486AD8B8E00
270682BAEB6C8A987D61514F6DF3B26B7144D84CD719A38F17FDD7BCCDD5EAC1
7A0786773F9120B365BC6033066A1F98CF444DAA16F66285778C3E2CD4BB631D
9C72C599B1D2CE99909C468AC98EE0E7270BA9A20E60B8E13F999A8DC745DF4D
00713E149B33B185AF2472E5C865FAADFA4BFA5AA1B6CB8CFFDCE0332FFC2A13
7FC9C9A850A7C60B8B4A6F4504FA9F8BCF9EB99084E8462D20F60E926E8A89D6
B76291894C0FE6433CD52E6731324FDA332655A716F859CA887CBD806310E1AA
F04B2FFFCA909E51811AB88EA5B505B5F326E0FB05FFC0DC492F4D7E318426FD
7CDDA75A3B768BEB3F2A33A63F5AA84626BFEE93BEB58046B83D590B463BCE00
9A580D00CA8E697ACEFF707C5CAF286F4322314DD5C21065327393CDA41BCECA
4E783D502D1FA1E0C5A1493F36FEC0709D6C33F0D17D9CADCC9D128B77574C00
6312B2570F43B154DB14220C315FEAF1B7B910D78CF9A22790A020865CCB496A
756436E98DA00E305CC7017EF7A7C42886C1EBBD183C0573B0CB9C97209ABFE7
D49F806F12DC7717560F9DAF72D09F8A5DEBB9CD4753C97BBA78C35D75E934DC
24A3D079F74410EF877C07E8A77B371B2E51404282845D720CD9A15C53B2A644
FA3DCFBAA6C5342A93321ECC688DC91D6A1A26CF64F60AED726D4253B1FAE43C
4BCAE40A8FF65CDAC34AC084B6AE0200252AE48BD87582EB6C88467D8244237B
CEB7CC260BF3D314DE03E8E6F42E7E490993A234B2DF61C2740A8EAE4450B763
5C939383F822C9842C5D0C6D95098E23536CEE02E71ED78C3F33FEB612111842
8CE6A1F159DBFF07ED4DEE51ADCA94A329EDE034A926A37B440D0A65A6C56CC5
D185F48FF161952FC9B7BBA1E0C9995F56030748279871E0171FF389EB30C3CB
CD6EA6948863F98AF49114133CC430BE71C9771CB880E51D42E4773BC9FCE759
46AD1EF858DC7CBDCB8F06BA14CB71FDB322ACD2143B36A5A0F80B0E1C5EF252
AD1B1D89E5835B0DD4B8AD25EB1EB36DA1A87A2B87A6A577651BF998F965C694
BC0C532891D2007CDC6DD09BAE86195EEF7264E6122A16D517E8C75200E44A40
AD5E73AFBE8CEE260B85C98BEFD29BC5C9085AAF00D000ACF7891ABB0F75E169
6B9FFFE0D1F7217AA400E50BBCA640F35896FBCE2E543520C013A368FCDB3450
4F017FDBB5322656862DDD7C3552C0B76FC6532659CF4EF37B0349DBFE5F743F
FDA8A8C167223A82E9239921FE58CC0B13B522B9F96977DFC55219895CC982DF
737EBFAA0D75CCF76C27A2D8AD61CB386C420D073AE8A72E5EB496665AEB27D6
DD3839DCF6BD5546C277FE4EE6E04C23EA07681C391F7CE0BB3FB9B0943A23EC
7F45612CC46E07875B27F853CB24E335E4F903E2BEC959F88C7FB945614482BE
E6C96DA9D0287E9C2421C1BF1EFA8C970B99310912F82C15F455167DED9D3777
0EFAF4DB59560F078DE4CF1E923CD41AA80955F86226CF381C72291EBB15610F
02C9986116DD0BFC419F724349DB4BCF0DFC91C23B8FE6B993CDE3133136F8BE
ECCEFCD41E7BA921D367B0F308A0BA859BE590A4D7A19F27444F05DC7CEC6D1B
B14993FEED7FAD9B7D6034EC2EB5E8B293C2B02EEFBEA5E17788F8D3C4CD4D1A
67BCB8C799089916303832B169786F2D749F10479516B3AC98E3C7F55081E4D5
F5DA3AFE742168EB971DA5FA37D5FA489977374C6F891A45A5C491B030C40E1C
727911FEBE1F165416FA9DF533BE64F594DD09F82CEEAFFFFDC70F4612AE90A5
3B0DBB1E882AE82292FF237556F04E0FFF033637639E26F1AC1603E753135452
46CECAF3EE1260CF3AF1721FDF376285B1BCC769425271A5E5B2F43DE4E302C4
4D08884689FFFBC3A0F74BA87F716315D0372E051156392E5295F207726537E5
84D7D9A2E145D1D0961BE703278B2023F9CC59C7D77E8CC2C54BFB8F5BC45BA8
1B0A8A00AD7FA9FA045C41D5986EB0A40B5CD95503478383863D4B218E597A37
B05787E100FD3C54002FDD1DE1AB5EDDC5A75360379AD865341C849E24353EBD
8A0B47FE17C0EFF2B0525CA523E6133B2B7CC7BC55ED73AA86828C9D45CBC37E
59B1DA90C247898549D3F36F6578808AE6489B9FF8C8C495C812E1BBB4E3B69D
DF28B55563D721660682F826C4E399F7B9BEB0B0192EA36BECCB4FAAEE690057
725918DBC5EAA17E79A2B3872A369DA7C5EA4653F83CCE1C184163D096D44981
1B8522B71513DE5D75116BBDA4B92CDD78FD3ABF42F521ACD3E8F45B56587CF8
25E7A60319C24281580105AC3D461EF59E7A6619D1CBEF62F82D0B50B7D79630
EB1BBB88603823EE8094625D5F7DF0EE61C185EB5D6C1CCBFEE4EAC0A5DE4ACC
F88DDBDDAE335E5073B23BEA0EBCF391BE9C945E7C3C9F9A46B04078D23572F8
3B2966D435FBEE582D0048908980BB7419C397B0B4FA4637B63C47C0AC7CE269
02FB565176F6C03190B02AB80069F7DBCCED8901F90F6CF2952F1238F1703528
1FF5EDEC9711F4EB08F9ED7D287D34A1CF9A6197941B12553F6462E95474D786
C8653BDE44F361E78967BB388E6BCFD1970E0DD4CB2B87834E45898C89330BC3
3E551987556417071CADB861D08C2F4DABBFB9BDCAA486B13F1E17BB4725B467
535AC80C18F244ABE9F2A95589EBF6B45D088CABA8D7F062204B651E83B1CECF
7227BB9109CEEFD2232849FAB1495E0C5EFA06069181AEB9DBC6F45C8A2EB583
47F31E3357071F763654680C500A09579E63EB6087560581E095228F59C50C5F
7E3119B289F072A9B114AEC1CA30A07C4C11B816639107AF64E711723807BB0C
9B27AD6231DB5A6CB507C48E6A998DC7088171FD000B792F983538F5B8BC1F74
F77C197D9B33CA1B37462510339BAB89732FC9388D006F21AE316570CDDD3AC2
32CDCE87348DEEF720324FC29CB9739D86DB5EC1D5A7A983D5E47621F1C2A3EB
22E3422EBB218A2B4006EF59FC53249905D4C102DFC6537DF35421D00B090A9C
6DC9A7FA5FAE294AD7CE56602C0A9E73FD678734863351A9627A8810558FBEEB
7226ADFBBC1DFC0471FE4DF170718BDFCF0D19ECA73FB423A2AE31C78F8F2EED
99D23A99B7C4EF582139383F1F3508EE29C347FE66A9C759B61B21E7CDD4B14D
60BA085C852E8A76A43B9F9759D05409940D603107915DDFE571495B3AD11C08
55C1C53A0CEFB9EC018200D5EBD32BFC296EB7F150BB34640A4A9B10A1D5DE29
9565BC46825B83A4BB0236824DB68165D899C0C3F02F8B36BEFE7B4199C9BAE9
582F0927DAABC018617131BE9BFF3959F92E3A2EAB15E8A3EF162684C6F579D0
4DABAC6A8F13ED4CC1745DD5B41005419BEE0A87E9CB8DC02D6AA7F8E6E7FF71
A4A0FF645C72818406F962A973477B2043F6C605BFBC0125C3CF1D6E61512E50
5E3C95CCA984D99277C33F08F563F95D5C1FED40BE32D14AD45CCBAAB8BA4A23
745F1A186B257078A4435C982A8B488C1C6641CAD95A2B7A44BFA04E42E7D82B
72DD8725B9138695EED5944063758D3530A04B9254DFD4723A21A1B35104C8B9
E2E6686C75473131F54E6002A48055951DA722DC4C2E53BFDE5A28210BA74F79
3FAD7FA9FA045C41D5986EB0A40B5F68237FCA575EC3FAEAA3E920C592414DE0
4F8D64E05FA5F998CB9EA795E6FD08B08B7FD11824B2FD210D635E848D318073
17CD3357DE4F944B29EDC8B303E1D51D57925EF70E952B5B1E3268A58C27BFCF
1D5B4E0D467873EFE74BD32E7F3E47FA5B0ABA0F4E236EDEB175E2A08152E666
1195C76A6AD46B2230383519BD10232D61690B31E8F6E32EE606A4359464A718
2A1222965E2FA5AB9E4AE9FA0FE557779402C184A4941811ED3C6E5C8A2E2209
6CC51A9098113FDEB968188BDDE58052870778C74E8933083F0AFB0A56CEECCE
954971E0F80A500E410A707B6F95FDE8F78B5782616386454D40FD1177AF59E7
BAE2E4A0D38B2DEE891EF3A2A64CE3628E8EAC4845F31650C2CAF200E1F895BC
449D7C0C2C6126A1A526ED120263120447F949C8BF48398C2BD3295A425583E6
67DAECA8518E434B9C6ED706ADDAAF0877959BACDA01FE55175AC439F1C0056B
A48000B75B5C22E4F97F0E7745B6E7E377278A34B363B4F1871B50ED6BEA4604
3DD8A1EFB2241F8FFB894BD68AD0BB35BF36A9CBBBDCA3161E222983B1C6280D
69DD7A6C6B173AFD56637EA68A9FF992607FF78C6F639F50B3F0EC02A1E755F1
60F4E8DCB8DF16CC67668B0CFF61165D2CB140D249765296D30E078A88DE0B5E
89DC62CB398B021CFF57975CA5C89BCEDBEE593C678C3D2EFF80D460128BC467
60DEA07559CA60EA821CC5FE7C1B346256259A858F706B6AA311D5E9443DCAD1
1AAA407F3E0678C703BA5F08E67DACAC002A4F33065C68458D28C670CBFF1BC0
570B65F5BA5230097AC8E07B5E8140DC0451529518B7D2509F710753C9AC13F6
12CD31C02C77A3774555B110537A3607969ED4E2EF1AAFBEA5F5208F539AFDF9
361520D394A6E245DC7EDCA9DA2A7E2B98CDC99028253CEFC15BAE3BC88EBCD9
0CF3D97EC8E454F9D6E70A6296F807558EC45930779B7BEBA7EC14C45C290B88
B6CF62192A347B6199C5DE31E4E520360DCB5829CB45EB3EC9C6D28DED24E434
D98573336D5F16497CF12B88A3B4450D2E18FF31B9CE2A7DAAA94DDC648036E5
BE7DAC98C4E946942F887B099BD30DCA47FCBBAE51192E4A5DBD396F2F4A2720
292FB0C0BC1288C5C455A6398D785524D48916E6A19FB998F518A075AC7F0CCA
6E2AD23A8B9F06254740F4B18AFBCBAD00600DFA7106A73FCBFD977DD8311164
3CD7DF17986D962099921DB40F7880873FE4151F77A1CB63CCDACC8FCA97B5E0
C1A476715D0954E529BBBE22782929A466C6A317016AFC652EDC347D936C96D1
F5BEB2A17E88AD187F7C3699464592574758249035E3EFEBFCFED7C21CE3CB4A
BE0686F6574C8F6E030357EF9F5845AB48A84A757BEDCD023A8380FB6D901187
A6BEF1599A38B3E3962F146AA02C587E820CCE0AB8BC8E30EC6D67884CDE4FB3
E430C46A54D7D90B037A78A57A063CFB0EB3C6FF697509736BCACAA7FBDE901B
80DBB525C3467D21EFD5D365D0D5891F3D44A1BA2AA9D22313A772ABD2F009E8
27566854C6F8A68F80EA54B605DA297FD5FF195A597ED1A516061F918A31C577
E9F9F60445268DB63E948E317A4C2D8A8775BDBE4A742936CE9DD5E2593C8E6A
44DA27B7DE007AF380D2632DF5DDFDE71208AFCF2CCA8773758D8D9C2872A401
DB454BCC9E4F77679D65AD7D1555E9C78C7DCAB3F647B7196C57B881D5D0462B
0EE7B1431E12CFC3C678F4A97DC34E5E3FFA5EB82DFB0A559092747656E6C1E5
6AA366FDB635B6D8125E2943C052C94FFB34C9AB10A28CD219850795F9F4863D
ECB744676914A674BE9A549AAD4A8D20B3AF0FEB4C4C59CA01612597D054282A
55B106FCA0EA4DA15F0FE86D24C70422227FAD9C4C37FE51549B2FE9F73DB581
B5BEE30ADB2D54A26F1750A2379F134BE521FA2B2AE66D02C9F77ABE35B2D236
0530F0BC284C2495FEE0CF62D091D522647BFBBEF712E604BBFB2A1C147FB5FC
176D0DB84445E85E8D8315D0A0E3E26DB60A6125A0C909C48DC1D96BF078100D
FE9727E717BA7F5D54BB399F7AD87556AC4B2DFE5E8D391D877CD8F2DB849E06
FC42AD1B3AF6D1665A9E916225861275A7E33DA0671E12E16BD967AFC5489A13
6238E27654D2EF38348B6A4F413A566B7424AA836C2B4F5F473922C32FC7933C
927E2168A4B89535FDAB27A457D101D3704CB68AC68B84EB9051CB9CEAC9622B
0972CA4B56C33A81947FACD4E6B7BB128280C049B07B07032333B21CB76E7B9A
17117BB508A85E34AB0C0FB1B0DFC1F03145D0EBF96AD373B546D16B2968752D
112B787CF3E145F8E4C41FCF68538E07258F434CFB044DF60E68B023385A6B99
415C2913BDBC1A3E21DE66D0B05A9F13D86AC6F8F9BDD8DD0E3BD3C58A1A9B25
50BA733181F01B8CBDEF15EE526112B78E714224D49598FCC751B525E31B3424
D4B8BB7781C0170356357B3542790EBDF134B4BC790959990DB0106744B80FB1
086D98C3C8628430B5DBFB183DCC97477F8C211E88384D2C37E9A6126C4F0E48
5E973BAE126A8D7C0B8E2742E42C132FA6E083BDDB9F2EEDECA0C520A7470026
C7CEC560B2C88D1CAA484CEC36CCCB1F4AAD18BAEBFCC471F5B2B99B06AD03B1
CB79DC3DE6C212FBDB2B91A65DC30E01C8B94804AA8F3DD3F0BAE7F1DA0335B5
D81A35BF5A9A5115F7BFDB6FB41232AA66B914EA64F3698FAC50F412402DE5DC
8C40FCBB2BB86ACA3D96BE9DF240915CE364A6B74ED53BCB8CE43C221BB72F08
8673885A643CF7BB832217C2CAECE49A409BF76BA43D376354802EC4684B0A43
C80CAB461FDF22DD7FE3FC1B514C17ABB4CEF77382C6017FD23DD38A340A0397
F731CEC0889E9CC2DECDC4B5D32AA948AE738F34F66C9774347D34704B77FA49
2CDE638F6C4C2B82EC04033CA63A88159F644CC8DA764AE9F90C07D5F2749B65
5E4177466C17E840B5EEDDA79F01013F4216C93E9B1184646E6E2141C7148476
7D47560F3B3905C62213C2DC924DA4AD92096160F3B8F2684C8488DAE97E0817
9532AE10702A48C722ECD69DE0AB49CB67CD43A0683927443CE0E47E06EA4D4E
2BF509062926B55E7F75E7F8A1D94109073210DB92D6168DE1D9C331320F4740
9199DFF5EF7D8D7D998C3ED886220AD6DC2F24AF327E4998BDB3FB2C085ECBFD
4C3F9E163335F9B3729CCBD175F000EEA95812C9338E62DDEC1E1E54A9DEF9CE
73129DB358231F2BD6408ACAE74BE7E3358A60DBE5BA317D8968E00B628E30A9
CA12F2DB427B50EC4EE878DCDFC47FCB83408D718C3FE2C201587140D41E82E2
1694223DF5E7CCFE583BB52FECA268F0CAB7F5B7AD1D3C6501D488296CE28432
B97C5F79B80DA0D9F9E73C4A53C193A3E1729921C7901778B5BE5A77701782CA
E4559008927B936A151EAA1BAA7FFFAEDEE7979DF757694CB3AF41A732598CB5
FBB897E4316A7ED11DBA8F2D252D585BD15E9AFD13422D16E9493A2ED8B46C0B
8140A92B6C9D37E4268D2ABD63B419723D5092244E49336B0C7009C3933F197C
D2A32254E20A8B3A9C08FCFEF55C2E2717756AD8F129D952A853399867841797
563BB5F542C08B8BE51CA65422CA6E434E5BAB844FD3416099D5142C53B1064B
CE19468761059544990F98520CB64FF37AE7FBFD7AA696FDA58A03B0C9ADE6A9
5B05E9285F1AA6C0FF0B351AA04074FBFC45E14F1F3F10958EA8848EFDBAD1E0
155CDC51FEFC6EF52B2CD6B149B7B1C569B6D3A3EAAEDAF9C72D216222F85239
32E1FACA71BD775819254A1667DDF49535E8EBC069C46B465FF1D1640593C852
1C2217BCCFDE3C61BAA412677CF8FE7488F9FFBF71C893C92249FF5AC6A5FB67
502C05B884A151C05113E4D9346D127EFF6640D9EF57B99CA83BC9B3F6F49D18
96E78B61B266F833FAFC446056510589F3D4B18FBB5C9370D9363899F97A92E0
9E445A56FB5838C01C595EE7FE0A326C949CBBA22B2600E4BE8584E61BCC2DA3
573269534AD3432832B66CE1A4FE3F10AA435473CF909A20045A27C28AEE8B8F
BB54F263B7283FAE9E4BF828F0C2E9EA10B3EB5B14F96D8E4A98E83F7320A359
A0CF417AED1C83276550F479CF9E56A1430EAC3860AB914F760A5F757937A08C
217375B95EC14D2B5EBC736903D5EF0735F2E290F4391448A527C8E5694CFA9D
42CE9ED2AE83991540485C031741DEEEE8ACE1BDBE056026C8C3548A6D253D75
9F30E37534743210743F07A44E53D34BA8D3323B847A40981D306CE372B48BD0
9F7CD15FCF9C28228E74B02B2BF2D29233C4903317D173CDCC9750DBB35D3BA1
F3E1A2EE1F6FCC07D3ABA2CF401E5B24367A4FFB8C5473CE07CC433307E5B685
110D305D49ABCB74DADB328332654022633C65193115E722B95F322DB5BFDE96
5C74494F7C4D82D938E554137254638555229FFBCF45AAE209705D150B04389E
3A3A607D606582EE7B1EE4628DFC6EE853DE286F4DF29CCECB0E5F5BB872D7AC
278FB9B8E128381FEDF0117ED3946C67C49A0CC83FB6A2A168C402F737EC89B3
61A9FD262DF82DD0F902F1EB12E99D79E01811154265A22CD5D8C477B069B1D2
20E16524FC2F4C014C10DC2D2C9D07B749B9FA63B75E6B1B69E4E4A0D59F6039
27269E7A3919DD57C23D90AE48153EE03A61F051AFA2C2C79BE670E36B24757E
C59946B08EF4B8212A30C907A4B300D63E52C35B2B7F739A7E062BF9C1F7C018
3C1B5F223E9C743FEA0C3B0F9995EC0DF84E017DEEA2E49527BFACBD40CFD211
A94D73B0C9A481C36B95D9C6F4D42CF6A8DFF36527D3CAD458EDD9D2C645D895
9C5D6CF6F0F16DFAFDB92A1B45361A68C4191BB96AB19147065CBDBF42C977C0
EE614B5D147F8C44F7F6CE6249A6C34B3D0140393D2D7D3D1E8CF8969D8D37F0
6C0A3BA5D6D7BF1BA999C25408BED02EB7D6B01CB47BCDC898EB4807BE9511D8
F2D78AE5FDEE28D416CF93000E5A53B6D6CD139F54C22FAF542E1FE7CE86EF54
F229CC2B09453753A46D5F146DCC6B8A9B7B9F1F284A8B6E1F5151D161A8123A
22892B52146CC322DD3AAE8D190932235330FF76850CCC432D15F5D60F21F491
055B1DE93C4CDE2E12D22B08D256D7C3442C427DC7C43DFEA873FA4F3241FE1E
2DFD0B3EE28DDD9B321D244386844FA4FC1DF1ACF4A1D162512FD1604BF062EC
5F4D1148E492AFD20270E12D1DEEDAE0D53E9367D2C9BA57D81C9F625DF20CE9
88491CA30BE8B534C21A1B3426AF9C77C744CB7FBC6E976BB486871FDADAF480
995D35324DEB1BB0C583C84EE7D36ADB450E1AD2E1C899B3A6A7EE7409F108E4
C3DF5733BE741E394CBA328AD2924D97B97858FB3508D01F3C20CDC39622FCDB
B945543ED13027D165D7EB69DD573C2E855A0E6047AF629AB8085B3E6B69040E
50862D7AC1F1000681912B15DFC777E3B1649361EA82132FE1FFDDCADFD7538A
6E0B1223100DD2FC2945DCBA64EA57094F3BD194CDC5D8E7D0D7F73BDC406BC0
CD8D00B3DC62E6AC2F06BAEF03EE07C49C2CF365412B509BB5746F7D44706674
D0053FD2E2CF588003BC33A7696722D1D5639B0E35758B3B9AF230B1C2226397
F98EE6476EBD61C58CA8DEE16608A930E6B542D831D8C098A943F8C330CC36EF
B4E69ECA90C7E183E15133C5B60CB0EBB4BEA87D0B1F6416F5B8C7C9C2CE1A0B
B156FA0A9EC09C40BFA29B3D1612CCAE572B540B3D0A896522DDD0DAA90A78BE
B3B6C103F633F3FC8D829042B6C7CB8959E01C55455FDD227E64A0BA920E8DB0
E6B55EB3362970F7C8A643E1F5220B1B569D60627641CADA9751CA523E263D3B
0B5645FD12419224B691FB11A7725C07011FA7E06D460B3C819388782A29BDC7
EE2A946B6FEE986FA6BDB446243B74611C8C1B8256CE65253EAA542CC2D5F3EF
8E01FCDE1906F858790FD0A427D2A4536777F752B6AFD4CD716A4C5F5EE0F40D
261EB48522EA30D1DD0EE6B51A1675D2B472AD0D37E2C38243F162F02E5DA17A
71E849D3EC943DBAA71F511865C30171769340728137071365F2863F24F3F69A
1D69BD45526EAACDA5466367A223B751CB40832014D119947EACDA4980F86FC2
DED5B483A4DB3B365ADB962AD9A6CE80D1507A361BF7F77455430BCCC39718B2
04B48310D8D9A6BD6654997A136C5B7C3FB0B096CDED882DB34E1588B8AC9BE9
F18AC8D6E777689D316D3D3018F0775C70B21CDB37C62BD779D9E64F1D0EE6E8
10586CDFEF3BA63BEC6582059C05CFAC5A906093B5D96C9080EA874898A185F2
2B197003EE8F207F548C92DCC4D49B139BC0A0C54E1F59886AC35C27648206F8
9553B86D3332CB2B0A6DD53F16CE6BD0EE3382B0193FCD802747EEE3C87B92F8
CBA53840B98EB1ADEBF0BBC7254E31EF8E5A18B4467CF7122BA061AA1EE7B721
1985D09A3A85ECAC41A03021D7695791168252F57DC20EFFC9E66BCEE5B55D32
2CAE91F48B7FC1F22E05A2FEB46984BC19BF6E34E5623D6D842FB790D7F12A35
575FCE49A6382402358AA1B3236F3D88E079699973F30339A97FD7F41D071CCA
458B71EF1E9B698729A632BD05181FC39871EC8653EFB4B9C8B9A0EA266D4F5F
31B45AB4B5D0A179C0582A7F2D3E871C21741B1A8BD06D0C5C8291E76A3A069A
EC1C7C4854B6FFA2B300E5498AFBFE10166556231FD83B4E1DC5471674E5EB3C
A1E06873A387D27D42EB30F9644C28F3F1D3FC01216EDBCA97DE0561B376D486
1E84A19DDD4BD9828C28C5F16969A59D638F4641200EF96C8E56A8631EF5E293
5768B1849413C368D758D62626129A81E7ECBAC9BD9E8D8281D942B390692F6D
DC36E4FF07A16C7A758FB998DA57E01D3827028465C03808D7BAB44E9EFDF217
856B33E3B857A5EF927B2AB90AAA07D76C91648652BEEC39168154231E80DE83
CBD658004E3C2722BB2BC68C4C7193A2A3A75F986B999760A7B34897827EF1C6
A5DFCA240A5C9C5B7E4386A38B789F5E843630284BD7B49674111A60352C780E
B6059D18BE0369B0A13ED2AE02B3F3FC7351CEA2E0DC1F575D71FBEB6E8DAFA6
205B06563992449CCF21EEA5B45583AFDA265C90D1B145B38493CF67C524702A
88BEE43E39854B8696DC04C8997BBFB6AB9F35594C14E287157394056CCFE698
1CB8B0B5A014A095F6D9E0822C5F3B371BF3603259746153EBD412A0056B836A
358EC93A761BB5E0A78E0234EB24527A306A3E2B5F6EA770B5E0663DE8B2ED83
FB4ED153858C2EB5CC7FC2DF37883FC2BFD3C6E338390625B60AD78E8645C18A
C3865F18C152697C6F53B24127DBEB77436A590EE5A7D1DABF7A40E8F9BC743C
0CBAA1241D3DAC963DE59B38C587748BEA738AF00BBFB0E47F5012D530BBBCC9
C385E66162755D196B775C4AB7D341B69AD4C51F95603B8D35E9C9F21A4CD81F
350BB4978464253F8E0135F0C73C49CFB57F4ABA4B327844F4A7A2F82A8A628D
B43F96E322C8384A25F2DDC1B19AC7CB867C55C01122D18B276BA8E8B4B8D446
0962DCF41C2B2344D2D031E97F899CAA8CCD66D9BBE7AFF3000A002ACE02FFAB
67E3CF8E4481467C96A1A6056D66E1F57750DE134A881482FC221BE3093C13D6
E2C86A1A0346DEB53BAE45F76EC3E7DD3EA4104156A84E04E1D5270C6CF74ABE
5E77F61EC499EBFBD7C6B554666EB618477431E8919B9F5A5D30CA97D3F5E34A
E3763445066B2139F4B140B7E2283FA61818266342C514D418E4ACDC49BF0C3C
B2E2AF19A6EC7D2CCA6C0BE14E322A5E9DB0897FE2CA7E60B9827E6EC39DAFC7
0F1CB9BC178F130B3D7BD0EC942B859C91EADB78CDE4A9F6A40DA6E47D33982F
31146C5A181C0C4119D17C560CD0AED00F3E21BB22E6B2271613DF7982E97287
94B911AE5DB0761E36DE6A5D622D0A07E8845724D73471C771FB388DEBCE8AAE
26FC93AE5843D2FCF133CE2EB99D4FF676F11A4F97038095C2EB2CAB65884F3B
9866031EEF0F22042A5983E44B77F361AF2B18BE63F52C68BFB683965CE94D62
578825B774B16C5FB1D2CFC66EDADA30D5A17A5954B974F83595A3FF24410BD6
0A8D4189D2DA0BB5BA01A7880E21B530C3A13D9F59A6DD573EF9461E22981EB7
4341E013E9681A6D7C5F703860B9A769DEF6CA9FDA0B21620DB180137A7EC02C
B3CB4C20C883AF025004585BA5BD5E6845F1BED0EEA915C8E476DA4B7C3AD050
BF077E6799589EDDB5BE6BABA56EB05C487B50EC4EE878DCDFC47FCB83408D77
A6A8A7EB39F33ED89C01DB68EFD891834837242290E6F139F88B264A896C90BB
3CE0ABC351B2F570EC34BBA052170AB42F95FE279BA7053D232E0B8E27323E31
4557860C7F0827BA1006A4EDB1D2CDA9A6055C1756E156CDE1AA1646FA00A2A1
ACA0475A655F1A69FBBF2A6D2BBF92A3B82F98C02657D25EDCCCED9E14B908A5
D6053506C391705D6446A1D7F1EFD169E73D7D1894E8900D7AC18C9D57907830
E60C817A460AA7F620A3194E8BB7EF455C242812451BA9E1F3857707FB7274C6
725DE06E8716B41E835231B450AEDBAAD309619A2CA7C68BF7AE91239F1863A4
2E771F67736310628BD00C08A27B0C590C861EDBD4873680891A23677CF06C13
74AA5549F5A4264BD84D7FBEB1868539CBF42360A328545303C71BF48EEB999F
CA24B93EDFF918FF0F7AB7C22E5610EE5F4DEC41BA8B670F63D3E047F8EDBDA2
6B381BCA27C06BDEFD5725E05379DA8AF33E9B56C3B11E04A32D687A3DE4528C
9E61C9F6B211A65B6E3999324EBD8D12BF6194A28C811F604C2C38CDFB929537
3D918275E17D944CDD39092DE2BE0B7B3AB3337B2359B096300E7585CB981167
42535556A06F2F0A1168677F2463F7D6050CE676F06EE0CD971361843E81025E
3415FF7F9745A93A475EB911C40B12F2B693749B2E2E2136221AC3478D27E026
BCE753BE1105F4CEF6A8D68263A2C18006FC8F9CA9609A2718001316F0FBAD75
9AAB9A7271767465AFE981394C851D9049EC2A2345535D6E1D1359221410C174
DFE233DC55F2FD1305141AF04B49F1D874D6D1E6C965746F064B8E6FE1879C37
A1E08471C4E8F3C79819648E59DAC0EA3CACA99C1C792823471BF6DB8222E287
9F3C8452D4FEBBA9EC0FDB41D0A2BB7384B96D8463CF652F6878263A74ED1561
1FE6765657E34CCF4D4424D5D2050F696756036A7143F2048FB7001CC77E4A04
9F7172499519BB1160AF2DDE6BC1131EC7C1162573F54297D94F6DFFC6B4B1BA
4525028A5BB417EEEE63523D6ABD8035302ACE9F88A1DAFF1C0953C70F5BDA2F
10A9DA25260CE492C02A138CC7CA617C235562BB148FBF9B4B19E81AB5B064F1
0C0DEC146055FE4C5815E0FFF7BA8742C98E6A5F5184ABF5C298060E47C0F420
986CDCA14DBBE4A677BE0AF1B361E2A9AB3003678EEF852D7940E850451C550E
E27670399F29A063E1FBFA88BB7AC68A266439875129ADDB0CB28BCA4E8B6809
C79D5C0B6C87548099AAAFDA263AAEF21B9D499AD044DD8FF6AEC6A3CE18C6B3
C79BAAEFD69E4D3B952CAC3869365C275DCEAE9B929950A54CBD289078EE33EA
5C2F0BA28FB2F350D10BF43207DE7DE70802B98B9C81A168954F1C6259400D08
E20A7891130E312ED3B22B9A09C979A56B8E2A92BD4D7006A266D4659AC790FB
9EEFC002FB61AA0478A60976EF3E57F30CE1B9E4400F08AF01513D83BD65FFC9
BAA376A98B1EEE9EDBE9205C39FC29EE015D58031376B3D20F06829558B3DE77
6B545BD3DB8C49A1FDC842E89EB774295414E185744A69985AE6EB4DC19B2081
E630DDDF51F8C07B6436B7F94363EE9662C255AC63E22669025DB695DD6E94F1
A578B33EA2B5C7189C9C1B6FCA7003A22251C1F382467ECE18A054078391772A
98DBF49392C0C784BD5B47926C685D6301301AF688FE6A1CAA7FA8790AB4BF30
9B6067D287487FEEDC41DEF73CE3D7B529D57F922B7F2F64D0C1547DA09F3E79
9B1324CFE6F8EA741903D6C34344AD33EA627787C3A0F7EDD5250371CA3BE72B
042DF848E1FDE8190F91218AF915E2D53E923D1A7B9D373539E8A81EDE904A41
95CDC50A72CDCC2465A9480151BB00EDA0C710CC1F3CE8FA652354994A9D4097
6C7180525DD889C4BB064779C7881CD23F4F3D0AFFF21114721A2BFFD0BB023F
8955FE06C88BDD881581D85A2B273D435A8BDE70920B952D1CBC5E40D2852E8C
DDEC5AF8C20A78B8E5333D1FCEBB85B1388CC4EECF13B53758A3BE19B922D16A
67574F257C9DDA5A95C556F72F4036E9CBCA5A911E69DD55C5D7526784BB4992
45514FB4813270EAE7E80C423A01506063D2D2200711E0C5C9D4C85F77BE4DC0
BAC4BF214AEE030365F042CDE0FB79221DCFF97A6B18CD1450EF007F73A55F7A
99286DD127CEA81A0825BFEC470DAD523D09FE0F2088B67BBE95A0302E1BE401
32BB3AD6E600A47E7C02D08EFE5397266D27BAAB09FE62DDCE224ADE33410C82
A2921943FED17A1E3AB5F5AB08101EBF46B81CB362B87BB87E9552402C3045D2
F452E9EC8609F3A9544000074F8ACBCDB46A52D70C2D3B9446E6DCBC1491ACFB
1FA8EADEC08AD8B61695CBBE6677BEE12E6AE7B62DDBEFBEEFCC6D6706337662
B94C911BD3967DD4DD109985EC7179FFAD206CB5041977C4F4FC48D900347A68
54C768BB679DFE6227CE5386FDFADFBA8AA5ABC54273F905FA8308A8F56A6331
825F1372C739AAAC17D25B0B556571DD7361327EFA5AA33DBBC3E975BC30158E
9328710523E45437557F74C4AB27AA731536312DAA72F7FDE402F21E7EAA38BA
B09936077093D785F43AEA30B240DB14FD88FFAE2C7509B3DEE24B4649ABD09B
BB634E8FD30A6B82E5855BB6B2260C7166F11062985E2AFBCB6A6B137A8B2A53
8CB8B7CE69E2FFAFC93110751B5B4CD2DD0DE22C313CE16B372ED2FE4D0EEBED
4E909C135200D249CA0472980E67CA31148F28E164F720509CBABF8C4F0D045A
09D1B90DB9FF24EA3CDDE47642CB96345F32D97E77A5862B34481FB2BE7A5394
92EE4409D3DB80CC0D5BA5C1AA9B63C354E801794B62CA14BC0A2183BD9BA444
3C8B942BE4ADA0F86B718348A9E8270E78DEF6B3A251517B91862AD5F968D8E8
13A9E6623030771682BEB70033CEA463C3C9EBFE0934A0B9F4911ED750C05EFD
2E4F579623A5F31F086631281A4858FAA6894D92925BB0C43821F040000EC807
571C66CBCFAA97BB1570AD58E141DEDDD88F70564DCD8D03F8905BAA1B6ECED3
32EE0771A4FD82326AE185C477A9D67EF059D8F91531FCE23245071CF2D0CABB
15CBA3701B0430450F96B2F7BD5AEFFA0DF81D5BA3F60F28DA7DE21F45221695
665FE6E5801CDA2C70E9E5D3EEC2776D4DDE217681ED77E88D2CF94C3C25F6F4
11320059869D30DA6008CFCAFCE32B7C0B2501E3EB32FBA22743FD30822B66FD
58535F8DF45AB72B0FA21D59E8456073945B10B7644563ABD0BEC01611741EA6
EF546FE87094992601D8CF4DF4BED62AE20551845A3706D05A7EAE30A3284154
65705C6AB0224772F8134A1171DC10B456FC5E8E14E22689D398BE528EF180F7
D92EF581C3FF620FD9DDBF7B9FFF94B11C9F8EAAEB1C01FA9C2B9E0A6F875D61
28DA858D558BC52779A8EF9AFDC4F435E270D51977C31A5F9BB7A43566311456
335FD6703BBC2F3C588C42CC8FC0A8371135F06C87398381ABF73F1DE408C2B7
E429C89F6931A3F8B9B245FA6724E959D8FB6D42D38F0A6A260CB0C2BE3D5CC7
46A42C096F40D6B935E1CC0F1D31D3D04EB580E03ECBEB163C653EE79C2F1579
4CB9F4EDD2750C770DA4E413A9E5A69C89209BC71928599D680590BF576A5A9F
BEDAE7C12F2BCA7CA923A10606056DEC25449E2FBF58CF0E7DE7CE3840FFAEDE
E7979DF757694CB3AB0FE5D55496B8CB907220ED014A091DC95440A8F19BC54E
E197A6D96505DBB304B08B049FAD19948F0086E62D23D91867BD212DD2406457
A56AB135635519F76EE1819C6DD6DD687E16835141BA351F1CA9E4C9DEC44B7A
059417A39666022592025E51E44425EBA726EE5B5B450E365530763213CD781C
770311FD26DF2F60EDFD2DBB20744511E74CD98477454B3C680F90A7486D974A
71CFDC3832D368C2080CA8069C6B0CDE19AC96426BC68601287BA8DF67B346CA
026F44D247DBD94AE84C1CAE3739D925B0DD4480944BDF463C682991802075C8
AE72E7FB4BF6D4E4B4D8FF55167F6F2601E9462DF4721B24B7A1D1B0A4D75934
F8443E9AE3BA1776C8BE0477ACC0269874464E57BE1B7BFB12910908BDCB7CBD
C9C0FC006E8C4C3F2D110111A032735D2A6805ACF5F4FB0387D88B3601F72A8F
0DC40BAF3950CDE241F0C257CABEAEBA242F0E55AD5C5266CBE3728B6A647FE6
F8DACDFD1305141AF04B49F1D876BFA36818E92EFC5EBEA9C27006073134EF0E
432B63C971607E59B77B033A1752FF008CF1AB9D21481B060EE70F2A3A1E688B
83F735081D70AD9D1D26D298EC84EC4C9C12DE5B45FBB1B6FF6E6A4F0A8161B9
A03DDAE11C99F3B57AB66439E998EEDB763C72F8851F78252EEF3230B46365ED
E4E8EFA4112A0C107C70EAF3F18B51BDBF4464D82C2AD48388DA0976FC112094
7F5B35FFEFA980189D6BD2AC5D6F77AD5026B084780EBECD76D599D17920056C
56795EDCE10321CFA3B2FD7A9825CC6C6389300DC9562CCC201440929A170AE8
D85B5063166D31B11B2B14E277BBCF3AB60147B9C6F202369C03C964E7E3BDA9
871185CDAA9FF79DB9A792961906DB71D4F9AE6441427E41D12D948114EEAF51
E12789B00B4F7AC6380FE2890634946C321B32DBE09824E2A2C906F7063F2452
265F5BD322D134A37B2888678AFF7388B580034B9814AC154AB3F532F116A69C
E127663F41FD48AAE8A9A027FEA9DFD7E08913A015E6512B31FEF4DDDC1EE383
7941C0D958B9F804813E7FAA4D0A0711CFC3E1A07E4F5BB182DFDDCB836157C0
662966BAA5D3D51B04D364B668DF5F6E1B445F9C0A123D16F287A23C6D04241E
C830E1FBAEC50F70CE5B65B362CF629CE4DEA3482DA2E54F4220972838B23221
13622880DF4A64763FDFBA5FC94ED02387A9E7A2B9C45C642F23915307E05390
B11A92EB66C3B7E95C4C14180A99D458B51BB9BD731F1B12E6C99E7B22C61BC0
732539B1E156FDE9E4787A337728D1F9AFB9318546BDD02D36CD00AD9EB38012
D08CB2989FBFA8758E494BB5B7F436B4534EADA7BCAD5CEE84994EC8F307C058
B82B26912E86A65ACC7E68357FE359398F2D272FB6A4EC3E9EC559972ECC4BA2
E2FADFCB463F89E498AF825C4C957631C96C1FC62364FCC3F00D0A83B8D907FE
37F887447AB5ABCF9C827B2E61628FA5D0C8174C9ED2CA50CF9208305A12DB80
692251C3F417E286DAA6BC0B88E8B8C192B5DFA9C1A7B05F0DBE8260970D8808
DF04E86B1797B6F81CB076D4861E8619036169CA0B89C5600C1D91F877DFBA42
4DF6FD70DCBD7775B9C9582F444AACED9FB04F4CB1673DEFB98EA986DD4B7B40
879944DA0FB8D4BFA01665C8A8C8E55824E00E0D4C104962BDEAD9FFCF0440A3
E17F9BF18C445E711280F1BCEFA5FD18955533F764ED045DE8E6BB192177A4DC
69BB60715B43FD74F3C8BC274174AFA088BBB6F211F5666EE9AE00C0FE90434B
97E9CAF9A950984B6BB390F12FBC2F294B6B8620090549142FE8D130087196CD
EFD4DA7117B713FCD71B2B06D74DDFD0E84E052EDA61CCEA24C675AA7545CEFD
A4F539AB49126F98082F0B8255F7C5991BDF75AF840018E727D9886336B100F5
6540CEA49D7381D27B392892B3D7FAA44A88A21FC8EFD84BBCF7857081D2B571
F11969614442E29B1468389BBF90BB149C68A548DC7972F21F90B8B6DF84EFC5
830D796F873001F5A6A4A7C4DA9E01893CBA27577BAC8B7373EC2EE9514B4B38
93779BBEFEEAC619E316E532FEFB75664A80CF4DDBB549CC4AF0778FB8611A22
7ED15174F96DB394B5642815B238D27975BD858B4EE58C36E01EF5AD37DF0CBD
61A8D5F5BFFCA8CAD6BD2C78E835E306BA11634B947AAF21CBD08A280D448B16
93AA322D3DDB5D5871C53A42F40E3BE960587EB55865BDCB54F6CB19C6F26174
B9DBB520BAC2D22FFB18A1691F6A922C081D85B56048466F94C69E4728E8FE70
557A12735A03C62CC3347B3BFE57D69E41D14F4187EDD858EF5C6E7F5368BFCA
054ABB290E476F1D4B21F10330BC55BF50587A0A12423EEFC2806DD54545D972
8470C766167A6765FDEEF6F90F1166E1F634F3FF61916E35CCB6AFFEFDCE8C18
E42E05C376C23A90FE956FBDAD570B744A461B5F14AF7DD4F95CEB4E07689DC6
19AD0B6904B356A0E76AEC887132B3C8729E7690D9613AA33239AA2373229DF4
B2915A3E5CD67D7EF5DAF458685F77FB80D8D1D2DA5E10523A774873BD63E239
573410AEED674CE660B7C6BD8D10891C7C3A8912AA9B0AA847164F7DF718E0E6
63BA40CB6DF8B5944E6FB5431406F444E757EDE306DAF4BC15D9E821BC0348FC
8DA1BA12372978ACD97AE98B6812D77FF65AA7EE9C9248A860BEB112C9B4DEEF
04DA099187724B030022C1190CB6CDC0F70BBE951E4A202ABD4D3080A0A35F97
881B63AC4E78DAEAFCFB37CD011205BD13EBBFF48BA94F44330D48334EE7A504
DCE39ED1072EEC047CC23B8903C4AE3A5456E364D2117D60BA66CB7B47302577
0274B0A545833BD6986DDF098E4E286537B240645710137B98BC05B37305E1A8
62CA46431262FDAEEE236F281460A76D655CBD6DEB67CE14832AE3CD667AB094
E9BEC614332A43D753F408AFD44C3BAFE9D2566E618E38A2AD8E0D41949EF47B
DD5AE1485CE00F0FA08D582F444AACED905DB52C2A462B7A381450C93079CEDD
447DB6CF16EA5FB3CF94C29374C6ED59BE2527E50E264250ABD13866E9658C1D
31A113B3086381EE664A33D718B34A12550E1A9A7CF029DD64C0F7BBE3407BAE
ADEE68BDD8E85E5D15B52661A4EA33999BA08C6047C9F5EFE75804C70BA98889
B49B42DEAD1EE79093803F4081B1B095E930F4A61CB063239ACA0ADDD0BAA7F4
1397E47BFE7D3751B1380CA75C55356EAFED386BED5C7A82FC82FD8BAF3B741F
A0A417E91959C5DE980B8B74A39B3C32BDF8A354C9CEC1281F967A9BFFBA4D2F
9316E81D20C1D356EF78C81F50C46DE549895B89900DAB29F3C7D61F3CA1870F
2F356DCA3E1A1D88D99EA8B47F0D4925A2ED8164362ACDAC5DD9692B89075CD9
2E07269B8992B8B0437D272DB7C1C5FB3443A02ACCC27DDE4077DDA82F018B95
92DE681FDCF79C65D5CB5ACD20C3C1B53852A9B8E3D416F2BBCB15D8B9B1FED2
3A954B1C2CFE5E7B9845BB0DE14E1429142CD2A39585134F5602F5AC43300F30
BF572FF872DA0582EABF80388BD3F177CB73C7BDB045BEA137DECA568AF4BCF7
3D4B0DA08E766D8122546F69762DFE0037B3D21F925DC56A524B375058956102
3F9B710A3631840FC03EDE7DED81983551EAAE8E3467BD684FCB1F7A4969BA7C
0AF419EFDA2644B9B22E0B576F5B7893A10363D102A96BF01EC16734B024B277
8747322FA5AC2EB8DFA076D412A4C16A6896ECCCE03C9BDA3387A344BAAC095E
F93562FEA98DF05B5C44439F53F727ABA4802F01B2A2A1DB1F0F58116E052A76
6636F542479A168DA885B4D81909C380E5F11E54305CA3780875252E8CED1A08
52A271019D39D218E2444AB7E803DADCAD52CD53D1039FBD510B86A64A755E76
A26A6B8C3D8E98491DFDCC658440ED8BC71261DD51262612405981D136C083AE
DBB7A8239BCD8F3A6D6CBDF36E508EC8691FB9552138325BADA91DA1D968DC05
C403C9971CFA7E45249203329FB9B404861D2C36B3F149249081482694D17BC8
E0F54CF9584C05A2BBB9729800BDF8C5B2945B72BDC9C2A192AF0380E17953AA
C7FDDB7E6AF0117AA9AA5D1BC2461DB7839361ABEF52E611DB5F6B5762438C34
16D0DF551C7167D72405CBCDD84837AE6D76AECC974C748B3AA4491A40CD1658
95D92AC4A43F1A7A5BCAE2627E75424C83D66C2124FD16510E4768E54C69BDAB
E0688B15CF4D65DB2CCCCD2FA67A1EE5FB8913E7FA06BBD6CF77A632F18076FF
3CE3617A44FAF0563A268517BD830778AD2BF151A8AF269ED67B09A10B9DC18F
8C75A6593C521D27E364F9986982C6F1153D9875BF3B103A76077C2F2C6466AE
53E2524F347BC1D76D13A4ECA2771CBFF35ECAFE7451524CA387F496C79D2B7E
C53D26B94A778967A2C65CEF614812566AA979C22FA968FB6DEA0DF3259F7803
5093E12A718126C6D28845850181CD42EF2EC8A6ADB2CE74E6313BEACC70C7D7
8B3998FDCCBD156B9FEC013516E4AD91799B6A93858BD624320FBFAC0AC42362
0F40AE06FF50AEB33E6AB843661D726290D201501A8E798B1C363A6CE01F971C
D59EA169D1A82B9243832887996C8D5B8B0B3683591FE504A26A838C5E52252A
446634E8EAA563C249F33548C9CB2A9A15EA0D9853F770366AD98D543D36BCE1
56D8D2541264E5B2B6C25A3BE5927745225C133E8DB1A5376D833DDA18A23304
F2C5F0647A3C41FD3601DE33C7179240530CD2EC2CCDE5AC4D9CE0E1D655831B
6B240F0D15E3038CE6A2B26BD72F4CA7938EE02AD4E2541BD7BBE87614A9035E
707BC5C780D29D367BC0001A588683E6BFF2DF7F1A375B79D9DA069D7452CA1A
C27F784D1F0E13D0273D8372A76D5C87BB3DFF4E6111CEE2E064D4B5516BABF0
28FD245487D6DD22BD00CDEB7A4D11D23479A35812A6781BB6A3EBA3B57A96E4
13AADF797F69016E65FBADF2F6FF1CA8B8DE5934CE2EF8FD0099E74E57588621
F28DDDDC6B39335299E1E4273BFF14BB6E61BAFB497EAAA7709B62BCD7F72F21
1D7D5B81311845FB6A5A5A196DD326D189A26C175209AE2D7E5087EF01F72D47
AA4B572BC5972F05E6532BB40E9E260D4F98EDD247CC272837B09EDB5BE53D0F
D72A980DAFF4C0DBFF80489814607B974C027EB4402F1FF1B43CAF4351425940
641D38080508CB8D3824E9D864BE3DD784CB84AF4C1BC05E0F9E3A365DBFBE95
73380E28C991DCAADDC6D3F39635CD0EC25BFD5C589D886BC9919E2872F14615
5E3446FAF3CFF9B1C705C18D993A8701DEC925440644D6510EBF2F3DDED822A6
54C068E4BDF7BD5B81B419E7C202124E96BBF9424283F62A3F0E5BB43EAE6F38
DF66B982B1E797B03F3FD01B9530C7333F9B903268006A93DBDB0B4241270814
C693126EE873EC04689CF74D3701D37CC7FC9FB2B5A9D0AC89C458D7E54D5A0F
333C895DBC4F8AFB2E27D71243A7E895B3373B203DBF0F28DCD1F647E0E6F4E0
44B99184AFFFCC6501139B9FF3BD0656F584CECE76A17151913D719017F99043
7978DE17270715E6DAC8C7CF06995C15BE73F5BE65225C38E0B9D9C7A39A5F4A
91382870E6B1645B32A29F37A080268899CB4C84910CC5A4D9F7A738766E704C
50EEA87AD11067174E47BD24C184339C62522BCA922747C4600D0073A3CA86D6
01D729F72114919A7D7DC4ECE3A5055D73EB6605ACD21F5E7C9A2AEEF447CA03
D0B02439ED08F963C4ABEF37B13FB76DE242EF684A993BCEDFDEF574F03B3BD9
00955B8B634A2B233EA2F55881B9BC5D6D237F60A92B2505B9577572CFE7238B
DE664FB397555C452610015B9AF8A110A06C6823CC6C545ACF5102874C446CAD
65DDE0C0DC64C68B319D25C1885DE9717E289BAA7B511FD84DA1CE262C7253F8
98C0915BB7C7816076E639F272B80F589980D2293B26F502D221E4F0B70DA9B4
E3E4C9F3FB3FA41A8A87E0C77FD55D817EEFCF2CE0549384739D06EF945208BF
2C2387D370DD60692277E80A1CA43F459558992D94E3E01067B30EC10B5626A4
49BCF9CE8E95EAB216693972C770298A65B349B695304F083AC6179540520E68
52D810B785B161A9A36DC6D2A3F56DC4A85B7D1097BB1BB95D3A5D180673D509
FA575278475713BC9C8F5865B057F7560E4000B12ABB49BB7DBF993780D05CD8
44B89300BED3EBD63A816E0733C37AE910EDE3BD81B2C6E12622A1F516DA6A0E
010560DBCE90E429DF2D2900C23C7B1E59084B501883CB846D4BF9232CCE06A7
6141D7A01021F376321E23740B60B6D6B1F7ED83D15B426C0E028369FD738C95
F677BBA38E57485D39796E447F8E3A192BAB648D74B078E5FEF24978D8AFDF1B
50D23DED0A8ACAC6E06BE0F30D7F4F35D7019C0DFB0D8E059A95D859C0E33781
8EAEB7D662C94468128D6BDED15C712EC8933F327DAD6D778320D080A748D595
79120E119021D3E4077CC0C491A1022F9540D210D7D581906975B78218F9C028
6C2B7EBCD0F0F2B3AAD35F95636ECA2C258DD94982C089A670C8FE17D296ECD2
8575B0699250AD3E136F1FDEAA3482339EBE219941C1B1A2E9F0C252818F856F
FD8DD33D83A31AF8D3FA8D9E62BC7B0BE561451E2782126B82CB98FB5B5B4F9F
B61730F6A5B67D726F790B08CD5152CA73E7E64F98BD02BE3EE2839BD6C353D6
91D7708D2955C0E7D8256318B7A46BBD6A3825E3AFFD4468DDB8884734EEA836
994660494CB379A72ABC2CF012603AF1E5D0ECDFC7861A52D64C7797786696B2
8C7AB131983DDB5982C460B41916EB922725600CABB792FC2F6EB2D290A75F01
5150434EF2981EF1FD0FB0D6499B4019858D63262675835D3A5351845FDD88FC
783CE120CBD1E6B63C21631A71B1D56E3F3C36FDD9F34D5E0309ED4D8F828089
9AC819595F88AD24878C94E32E2818087A03485AF5AE654BD6E43EDBC88B9CA3
558B105DD2EE7616669DD6B25637771D42268EDF00C8484D32D0D9153E5D14AE
8F78F039F76F11F6AC99820761FCEB58A66CAD72D02D5140F72BE615EEEF48EA
117644DA36BF7F2DB559C222FBF9C92536EBAE996404D020E796B95AC00C6D0C
D6B70DB0CD6052A4B15EB6E1CD670DB229DFF372FAF9A7C0D65E1C4668265EFE
6485FD08F19BEFC42568276E2F73CFE77C69854AC7AA285667707177C3FF6266
63380089CB35126E7C401116CFBE26F2871B3CD1B8AAF5344C69DFC0AA6D07D1
BA23B4C55EFBE08BCB858B856268028FFB84F3AAD3ABA2497F53419F03BD0CE1
BCD1E4DCBEECFE4CE25420BC4D2E8F8C8A2F9038A3EC521002923D42920062E8
C72A4F44DABA883ED601923F55FF93EA67CF701332E9A76EB90F7600EDB58EE4
2A76F11607C84F944D3FE51262E8CE5B1F6DF2AC047ACB40DFE1004711F7F3DE
D83EDFFE52C2816022CC1FCAAFB47F44975DC122B06E555EFD1B5BF8E9EC27C5
7E2C109C7A2A808449F44D04C8F05A2A19B22402A445008B38619E6B853487B4
4A5D1F7701BD1D55A00B7CBF4E119E30EB55212F6C51C4B1D0848F771EA2AF85
3D34719C87D763477901B12E72513190113137D4F9BE0071B12426216ED4A10B
CF93012334DB179F8472F1049544EB87040E5ACC0A3F8F2E48AC87E54D214588
8A08D411812885076AFE11342A45791D418FCA1F44EC185D3369D34FB723C1B4
359F2B3F7356ABE20056B3DD423BE92411279F525241381F8DFF1913DB07C218
62F9CFE79A2E452CA72A11D47061C1EE74FF036C1EFF03A6BBAA3941B1056B6A
3EFA631A9F42AEB67A615AF599DBAEA605CBF2016245672910CA995A1A5D31C8
8AC04A170C35D1CB9985CC4293911297AB79551320EF4FE96FEA42C1934076BE
21725523DED048FE298BF634708C0AAF6FD06C73BE8E8B83CAFBB65DD5BEB590
6051A962B02B4234C1E026AFD9B5D8016DC00106AF046AC092DF0686F0383670
A99D2E544E33771BFE51CF8D0385081E4E95C8D8307743ADAB7840A16A35C4D9
B26D70995169483C36A4E49CAC93EFF63A93F7EDE373D0E545CA0420FCDBDF40
85690E0EBBB96D672132CD296EC1211E820628D55BE970033F40ED7204BECC6B
23E4EF1CF32B158FB833A41FCA23C931513F6F6E252435A2F4A39F7853956681
36F46C7ABCEB51E7B22833F54B876DD8797D2B8829EF4D3CD66CB775F3BEDED2
39416C87997CB53BE9CDDF5724254073992FD63781D6B92E3A410C570F8402F9
71C275EF00278C49398E86BFF7A131602175732D52AAB614956891804A4E61F5
BC2918441A86FAD317D469F4432ECCB7C64693620C756F7A35435C2C2AE0B055
3BC11D763346F28C51D076A0C811390F9527816B199D1BD512A070197B92A583
F92792CB51231E5B65FAEEE38858C26485FC184E9FB08D6CBA512884B03BA3C0
E60A55961A4760673D3BC73D817742F8FA900282294488D85FA7B12AF2DAF2F6
22870F01048F55CC3673EB68CF2B38EEF6C6D3C3C00DE376AAB9B3BC34A065E8
3FFFC3BF466FDA6CD461E0FFDD170AF8E88274F39E52CF7F95247CE44E585F4C
895245F990F905E330D0124D5D1691D8C1ADE6E9C4709B5610E99EE29707EBE5
12A28BF6C39D596BF013FFC7ECB706F5F7963748164DA2C88041C40D27F44926
D8104B0B4913D7636AAEB0D7146BE410C00CD6C4D210DE7B57D143E7955FA74A
DEABE6ACA9EAD96CF2C11B51CE70236CD2DAA893E9C79476E8A489C3155C56F2
7D40362F7AA829A4CA5C9B07077BC18F608EF9AB68B7413B676C717E25102703
F477320D3F82933B7BB83FD9F48F7008C85264A5B099D2148379CA35CE04B2CA
47EAFA203ACF908A12B19D6933E8D59133310184304ED277398150231C03EEA5
31847CEAA6EA1FB37AA157C349A9E8577B253DD28E68A5AA693B55069B9A8756
BB4973C6F6ABF544A84838EE9A0A6AA71CFF89296C41EDF8BCDA576DE358244C
2FE0F8EF29DFEF14636A8E2B766E0F89C9EDC2FC49D3BA05571FAE4F83E73747
978F0BDBD472A12316C038E161D71EB3A10AF985261414339B4FA35B8EE066E9
B38AB13C1E1A165DB383213AD907F2D9292210E53F01029A9B2BB1CF829B07DF
A77E597DC8355A010405CD72DA9C60BFEF24E11ECBAF10682F0EE1A0A1130290
BC9CEDA4BF69AD7F8906566AD76F219F2CED2A998EB6DE1D1388CCC86A82188C
E782CAA5B79A95A6EE8A365B5EAC92855EDE27C68869558ACE30C854EABA04F1
B3DB2D3B91A0ABCD0C6CD41365900E7934F4B6615D5C324301CC34FA1CF85506
3D865B93F325AD24664C9E7DA83354B1EF9480ADEBCD8A487579162F56C6F9CF
5B4FFD08EEAC1E5847BB5D307960EC85890AB8F6432B57E55D5001B8E3306F74
A08955D106716AB49805CEE7C5D8B7AFBF59A7A31D068F16435A8002254BD7C9
C080BBE48B6C3539F4275673599B1BBDF3D2600F36C66F59268E34306EB7E6B7
D155579B295F244E643EE0EF95C50FF265285A743B83CCC1B4DC56D97AC47BBC
59068DBAFB562CCEB7453E64332713D7AF5C2F38338CC6FECE6C9777557C8937
DD8695A0FBD7FD1A61065D0B467AB3742FF73098BC61C69033C9B057D72A7962
01976C61F19FD1A8E20B38F642D54197C26130F4E6C42D86C7C9DB23E160159D
52D28606969DFB36E2CE7C6390648FA99C82DC5B3E46AACB56BE3610C2DEC917
50EAD42D83AFF3FC3E99EE5515D54EE4BD574ADF23DC984FF5EF5CBA61D7354F
FC3DD66FFFF9032676BEAC7EC956DD28D0C3A9B4346F4783EAE378765816492E
09510C6BD998B1C8BA5EDA7E6005147AFDEB6BC4D52DAA64E6E96EF9807FAE8B
8E5DDE117685B65C9E3F55B8371D1660A651C229D30915E8CB551DF395C68550
7D1D68C363CA1385BD23D47FB064E2252303D3DD4FFCFC95483BB6FC974FBF0A
C5BA7C001F0BB0F9428E7A631E3D6F25DFB0F30A16B89CDE9F96724448C27710
3FD2A22F073AA09C19BA92E6B7E141D48F192BC7D15323AEB2CD5A6D97FC546E
899C8BCCED20173D97119C98ED76194C28DF9541B6055295A65DC30E01C8B948
04AA8F3DD3F0B80885DDB9F8BA0293A7493BF2EE7AB6BE273CE7B8DA996F2887
AEBAC72632E25E1B5D821AF2B4EFEDC960AFC2EDB8C1D7374260E9C0D235498E
11927DD65A95164B9BB83253A236A14E56423EA6BE05DC54B7CFBFF439EF6E90
0AC27D89C1854FCD3619841F7552361F4C7DEC8AD31370E4C6BECBDF4634A248
6C0C4E1D81E8F52DF97B0F8E59055A7A457FEC6C9A25BF8A2A699A95C90FD14D
B51EEBF226D020096E621DC93B4A1030E92B11D38D87897582877752764F4547
2FEF600F8BEA8C04245E590EE31FF39FAD49D67039DEDE600E3A2AA23AE70438
4BCB8DB7A059CD5C2A40FF9AC3F00B1265E3D167B032DB9422D164663653439C
C169CB90282C726D9364D80573DC8988E43EA7817D9611C513A80E7DD1ED5389
3DC461422D8B2F0C756E528F72C6F7864345C33A730A16F8748A30EDB4A6387A
92EE06B5613DCF35CE7CA8A0E467357F88F9818F7220A23D943A9B0E27DA0D83
B3F93F5AEE80DDBBE571AEF113C74E1B7348E772FC60334B48B4BE659E7EBA46
69614DCF96F872BB33A525F89DB8C34F99BEDF312DF2A2250B0A9C4074D1A523
4DBA4AD8EBA6B35DA05A5BD7228BCB34266037AACECB9F99C8686E3E569D0427
8D3F1BB7836B2B4CFD471F312CC39BDD7F1560D58FC968EF269DA475E0FF122A
F684C0DA2D5585494E876104FCEA33CED248B5BD91047D53FAC002F68E91AEA7
CA37A79D24954346C854C033A1BBEAC0D28616EA32B18D24FADA6E450B424B26
CA8C6F9D93596BF66C89130424C89BD0A034352C6FFFAC5BDD508803B12D56BD
DA2BEDC9F5ADF2CAA5512E78A5A203CD62AFE11206243547DBB40537E446DEA5
D0038ACB311863ACA97BB5B2D31DC8EA28A8F3EF0E23C5846B0C9C8DBB0DA078
88159243942BCBA43485CA97B6B40C8FA39500BE609FDE11866633B7F566D32F
137DFD6E3015F04F6FF3B376E0349ED95F66B3C2872D1126488BD16311921BFA
C55C6348C7ADCF0D56F40AD8EBFE52A293460051DA59D2D7C15CB502E1153810
0BCCEDBB99201E805007C30E37FDDF454E7C79565507AB1C2EF74DFA2A25401A
77A210596EAD6773C130A785394B91A0C56A5A1B655FB8EB19CB5A713FDF71D7
23D55D6D42315A9960EC61FDCE1FC1024304A6EA7D8DE3DB4C880791D8482E9D
97738693538EABCFE8A85D046EE8CE56F305BAA5844BEBB85B81B419E7C20212
4E96BBF942428B0AAB85A1C3C830062D20036805A64A1AFA4B747E5FAFC4693A
ED3484F963D330D412A44D34138B45EECC526FACC58746AD3511F899AD71F0DA
048BEDDE6F276DAEFFA9CB232D422DDC1669C102F97CC8D362AB9D91A7ABCDF1
6EEC8CD58580550ECCB910D55B7A327DF7FC87C7874D3860AEFDD186DBB19286
B70475C5E7FE7DB733172566931F05FF461339D47F8525D1F6C8DAC1FCAB4E41
4ACABA27E833A471E86525A3F7DC268533FF505FCF55D409355C802333E2EA69
50A71CD12B2FDAE60FF70CBD89F0EC6FCF7A97DA2D98DA493604037C111998CF
B5B92E9F7D8AFC2CD58DAE9264B058D399525D95077CDCC3A2AFA66840421627
29D744B8F0708A98E8EC8657683D0722F8F3F72460B3A91D372EF8F0624D6296
92F817DCE1BA41EDA31C6F263FA05467F4E6D963587F748B6A8D27636B3F66E1
0104F3FA28D50D9B6D7AB78A5B91911C757A2194AA8F2D9485EF31E405E8AD9D
07AD2DC2CB522A9433805C0DA1E1272C623A19A5CF2A51F61981D2A539A4556B
9C22E36DAAF168C08CE31F26CDF6613C06CC52B4997A127054110A5BBD77C50D
DA883A59F1DCCA7FC8A479CE8AB6CFE5FF69257E42AA6C0F5C2AFE43EB79A8C7
E60C451FED64CF3791632C1918B0B2B0E8E8AD6232AE20D6FBE558225C7A0EB7
875A1B125267D985B621FC39F60D35354625051960DA427CBB19FE1F2563A4FC
6F761277162CB591C57A641C66507725A5D1DEFAED7A6F36F438B5E728D9798A
83E2D68AB87F6F2DB3CB010C0898282051FB5E063BE98D672E716128C1A8B028
083F409731FFDF5D84EE6C8021390F1882A6BC87B8E5E649D84F6ACEC3C7E67E
A3386A8EB594692572B00EC989692E70E0544E97B92B1BB819027F631D3BBF84
FF5B00FE98C29A30F5DFF8078E771FD6B1AD0E7CD73B3743C5644A34BFA6F5B7
435263828CCEDC08344CDBA575788EB9B9FC130D4E633ED3D485899E599AE171
1EAC252F6869CA4C14EAF3B640E06799431295C15C74DE57F80C70EC7D957DD1
1789AE917E61CDB10F49171F47D5B2933ED4021E1A53846346846C74AA5A50D0
226C556BB06CE21DC15165D0CD5215DFECDB84688392A12D88C8C647055A0F5E
F40B56291DD390F56172B1CA5B1802B7288FE45918DC0910564973464AAC5DEC
8FF6C119ECC491C368D0A3743F38F2ED5C9FB49D2456CB67223A82E9239921FE
58CC0B13B522B9FBCECE5A20AE4E5BCF21CBA418E8F89BBB7C46BC1AD20A8B45
C65DE14E9CC2B83BB642DA6553EE3AC8A9AEDF1A343E51EA90A16FF697E82101
6D0EAE5A6D875161182AD10776208C2D5963685D5594F53184FB2A6949A02C4E
33F9D28A1CF3962A1365C82CEFE71E20E6D985469AD525BC95F35E951496632E
31FD6843FF7CE34EA404BE2B9BB2A7E8B1E47E52E36693DB97FC929B0FEB6717
1377A78B2DF2FE325B0248844B12AB3074A7418C47789ECECE188353CB77AD66
DB521351E7A1C09C7BBDFFC7A211E3295D58D9794834601FDFDAA8798C202025
A6969661CD349E1BA3B61AC408061C00E3E35D7E127591257922EED0393B6D4F
7B38E29031A8A7BBF7BD242F11D0E25C9DECE27A310AE31F79276DA48F633E1C
F01C54A7BAD4AE811F9EAD49D67039DEDE600E3A2AA23AE7043BD6E6206F518C
25A5F058FD1FC76133074C52E0B45B304C75D03239CF41E482B3A922A5D03246
A4E740EF4CB80DE3167D80600B9459B5251BF997F7BB595A6D2B7A168AEB971A
A81BCD168B5143C54CDE76F2CF2EE2D28136769C81969E4BACD1011614AFB240
5AFFE33AA0C988550EBEBD3CF5F42601A7CAF81DBFDDD0B773C538FAD877C881
8CEC5F7D18EA999ED27D7654141E91D31B272746A957036BF27C1810D9DDFD75
CC7FBA6B929E0F7E4E76C171150E71B9A3F57514891FD61D4EF00A7EE36053FE
AA9D7EF58276C01093188DFD2CEDAC61D46CCC780981EE4F69B7EF7537DB415F
80A4CEAA89CBA3A16CBA634D6317061EBD4C83EEFC246F19529DD992A3B970D4
53BE4BA1FFB2776A55BB754896C30969253C2D66739BD457CC856F8A8530A2F8
6A5C4AD1A8CCC3E6FB3DB5FAA397737EB43FE9404D5357992F6D8C8B9CB1F05D
C8ABED1015A6B4E5AC164AFC42453C7B96D4A3D4E9B47722EA14796902C4AD92
63467F01D20BFF6D89CDBE75FEC3B7581BC955BE45E7242222607E1FC26339BA
F8A25998945E70E7A91F25F38BF6C525BE9DA0CAA211654D45E7DDD1242F4AF6
4EC93242FB66F1B7A5D5FABF00BD10F71FBE282AD7FDBB75E53945F28C7EB3C1
7D5F455ED5967780A1FD7E5EEA3C09D85A4E0EA283BC4E5BCC7B72E4CDCC1423
4B19FCC6BBFB489A5D5A12D53C3E723CBE8502FA6D0549CEBE66825970CAC9A2
CAA28BC3698B55B9AF6789B99CA2073EC28EE93970732DACE2E77E221C59DBE6
2FF21ECCBFDDECA93F7E08497FE8B87D7FE4158A246B28C7EBF5D018E73FD9C4
162ED76ED7114183DA45B49C2A0344C8BEB10E832DE336F8DF7DECA88C6330A3
0AFEA00C39493D41980B99E42A86432782939DC4DEB8ECB95428EA007996635E
AAE61F9BD4BF3376D85390058FE4FE7CB4B23D2BC105165A02619FE61F8F60EF
E1B3136BA64CD65D8C343010FAFF481B56FD2686A69079B1A3436A5B4C34CCA2
37182A0EF3028D9DE0CB9BF63885D36AE90C60F0C0C18582BB1496CB43724FBD
165A815A3AA9281F2E3248A912DFABABB3DAF51EDB0429F0288E239E03925298
D68C211D6BFBB29B67B08452BD36BC92BD8EF5935766B4682112C1566258D028
2134CFEBF640E56D3AFE497673C5A1CD0452CA068B9F59091FD61F39CEF44E20
6474C6B6D8EE0A8800CB41D17BBE681568B93550B0E57CD7DD4494D0599F5F55
2EBBAC28C862FA835A477D4B1622964658481D3BDF181DD2B67B9BDE7F50A1B9
2340111287CBD4DD48727946380BD3DB451452D7DEDDF1323EB6CC385D75EE7F
F4DFDD1C32321ABFC7AB32C1388E1274222D89518842ACDCBF37F5F5D96C5039
7D00251A943796CC2F30339DFBF09F0D3FE51C08890C6B5B38A0CF54D16FA804
EAE43560DE04192FEBBD7DBCE18497709E59DFECC5B6D2F29F2FA0AE1DA0230D
F8C07438555F6B25229A61FB57777992F960A771786B53DB3BBA3C67D4A20BB5
2FBE688F60BDD50941BBA2F8FEB20F6F3EACE0E117AB7C44279B28D62A70047A
793D5039BC75B479B14DD18DC155AF2C75D9A923FAD7D10B8BCD283304E51461
FFA0B1E6C08428E71933AF168B2A46FD4993764772EC25FDFE91A100B0D38369
77B3FA881E11FA2711A7F2F3DA2A016C196972B8BE4E24BD63759BC01D943A25
613A5F05D09DF39C52BB60A0A605DA51A5B280F428F71DFAD0DBA307987D9C95
BAFFDF6E30423CBC0A15A3C758CDF7CAFB239DABC29DB90F8B76A26305FF86E6
BB7630E2753A8C3CB09AC9F84871A098B369FBE13511FDF4B76F45522C1F2C8E
CC5AAAC09D8DE8E2ECCE7C7F3817F233A821126F7D5FA4018F9ABFE5D02B7C70
72CB9FC2D98E99530B69F4D0B179408A912EEC1315E7B7E87BD0435B78693057
3B76712AF3AFAF9312E73A27FEC1ADBD05878487F192A92B8B56DAD69157B5A2
8D99D9D7B1361D07DEDAF1D49B0397D759038A1506E93A28CEC603D26621DFAA
11F0A9C2442475B143385040932FC64D8132330F765D9461A0BEF2CE5C5E164E
9EFF29829D6E03AAE6672A8968B4F512B26F979F55DD5E5212D175CC30A16587
1466D357F50664E901A59386E7A28992C37D7455FE382711724E5DE046FD4BCC
8C26AE6509BFD493C1487B33CA2B009C5DFE8EBEB7F3E0BB142EA6EA2DA3E85C
1E02812895E9CA972A02CE80337BE6CCC7C6653CB1EBAFD8381141BFA31946D8
93DE2A7895070866B8D4EA1D049C037DFE0AE49C9AE544DDFFCAFBAAEE7E1B2F
4CD20213B6393176A625FEFB72A21A870941D616E491BD75C100CCBF553ABB8B
FEE6DE818D68057635D80A3B910376AB933BD81D98ED885EB1DFD66B451C711F
32515C48E25DA8CECBD65CAB2E1C697FBEEE13A8BB882920EEF69FB661CA906A
52D71755BE6E0F27D31F2FA377AB1661D53E5A9983392C62C15F19520A1F3DDD
F19B5AC00610F07CA00B2E184B29D207F1DE1680FB63ABC6395F43D92459E3EC
A180E1FC2F090C0331A11114AF18542EFABD9F13F8EE5FC957C0555440318A35
5C44B9B0A0B05A2B76274249243F591C771FD8926D406B80E44C173BEE188667
7100C48D031E4951B4265281BDA43FFEAC26C1536B15DE67E304322DACFCD319
5E1970D59191807C4F19E06F5DBF38292A0A783B2BBE436DA79FC940DF084E1F
F3649EDE4D6187CE32DE28019904A4962C3E3962F292201DA27AF1BC5A6E3F95
6893A0371D33A0A874B8E41DA15A9A2EA75EAE420EC7DA187D0C64BBE4EBCE9A
790F88C23F4D8C69EC49B087D5CF08D9D789078F2876D5AB6125847CD47D5AC3
5BE43C9754B87053C100E37AC456C153D1256A75DD7F18914D1E86A0ECCDD357
4E434E8797F342830124697E4C8594D88791AF59134AF56E54A2F3172AEE503D
7C665C05CAB59D94D511B93F0E24CE1EEFE42A2B897C867B67432BAA1B310395
30A6ABA63BC589391619B0ED00B9BDC906EE61513BAB788F4427339D7A623E8C
F0C327C290ED1FC0207BA2124AC299A146B8DE0B7EC2B9A4A0C650C42F0328C3
2EAC606570D87B0BBE6542CDA191B3C23C93FFAE121EE1653EBA835D5BEC796E
4568B19E95945A14142FFAB81F448D1ADFB66B62F920C67B122D2B87CB5DD151
0F5035AE02E14DFB18DF20E070D63FC4B41D9F0D6EB329645CAB6EABBE3063D8
C61856462B206BD073E2A605B8FDDF1884E4D3209BA1DE2914175CC26EE3F020
62DA1F2A877882A695B080732819961E37E2C4D561CB19F57B28338274ECB003
513517EC8931D2C69C2BC198B537812E755D6BBF1EC2F2E0C52A3DDAA714006A
24F061AF22B980383C6742D42C4A16574381CD7C86A76F596EB06F42F02058BD
C4E6F5E3FB28FE4D8A59F0E9C9C2289DEC42383BE1552BCCEC2BEADAF5271880
61A3B792B9D77C5A3012721D2DD407BC0F0EC020D19667FAD719779ED52DCC26
48C4693622FAF077EB6C678FC7E7F39362B394724161A745D7C63C83E69800D8
76F22D77FD886A469E7D7DF6EEC94DC8998855A9F87A58268E9A04AA4CA9ABAF
C43E6FF08A3DD4D197BC4DDA5D9F736936D582C8CE69373143DE37A5C52E5671
82CA0CA1E9D1447F5D7C9CD7EBEAD8FB5E53B9C744A9A471D3973DBFB9AA94E5
4FBDD2D7362AE2539FBE159F722EF79D6834BDF4DDF5960A686B612BB6D6AABF
2D5565ACCFBB47CA5D5C170BD1F8BF5366192A34D850B92098810F8E53A85EAE
D01F90C740F19DA86F0227A4712F1FF6CE93C1C45412A7BCC16CF3E18FC251DE
F554A80E2C6112DFCC89E7D61A29FBCE0788BB6CD3AA7783DC753D4C9F8C433F
7A4EEE2366302A441EEF3E80923FA1C8E7DD3170E4BAE621E49CCE778DB70E6A
A7C22EE38950BA87CD4824B8330F04E7F80C7ED7DA1C63E03951DCEC5F301997
2B802C29A166AC47992BECCBF3073867DECB708ACFC675E63B648B4BD46BFFF6
D11F455F3058E7B77E89AA93B3E871D22ACC62DA86752DD4AE31535B8C4F43F6
1A79EA08060A39CD4715FF7C51B3D368273ECA72A637BEEB1416AB13912D2873
97BD94B972352362364E8FAE94E72D03EC8BA0A773303441AE0C77CBC0CE3098
2403BA4A7E73FD82D78871B262D8684B89D8B467B08895E0A0D3D236A64D758C
B9A2D3A661693F6009F676DA468B298DFE68F2252D05070BA0CAF5C7624BEF8A
FB99F5B842927372CF4D94CCA4B106C82F8EAD73143EEAA255ED54C0AFCFB9B7
298DFBC34F0EDD24B25E67C33481F928553416EE51B3C0A6D3B820ED02253B00
990A1F039FC1344B7EF6933536E89238B68FECB7C7C072B35E5992D71E4F3ABD
890F1843915F61E99B484A46959C8BF45CB0004CE7323CA6E45DF7C975B68283
88EDBD427BBF4775FF5BEB1EA06E6ED17586A046F76E3A10964845878FA9D69D
8FBD81A4736BD8F30F387D8F1155028430F0D41021A17910A31EEB7B1A91E102
AA4A9E7E56D464182EB0A29B974977BACA95392358874865AC2D1AC4F22639D2
1D3DD0AC6C5398838CC71844DB31A394DDA1D1DC82EDBC8CDF862AEB06A36C52
4D218ACEB74663A56BAEC4B61E82E24325950C0FFF455193A6CAA4D755700FF5
31D0F116DB5F50B735A10139804A7ED600A8919ABABDFA774554E336D48FF98B
C156362C083B27540954AADEB6683FCDFD27CC143DA4F370EE8A17BDF24E6E57
1D19D1F6A23E70F629E0C01EC942491A23BFFB61A7329ED764D7B3B93527EA82
F943F5880AFA9DB003F23A8ED3AF9A11AF999E3919E0990125A5C8755E9B172F
B46B119F4D98ED02CE7D01F3165A918C9D9402561E125E70BCA5286F5A362046
0D90D0232A4C69F79DF4A3BBF796E81ECD4758B6F0A0959492992D2A96BF7CA4
AFF9DB87B60A673082EB9FDCC73165D767F6C84789B7E4EE498F1FB9C7A3C024
810334A38F62535181F34CCB7375F7CE4621AD233565E6333C96C79CCBFE4F47
028496661DC371E18C8EA69FD6ED777FED543A8574FC71D916ED5E368B075B4D
826F254D5866671176A09F132678B43CFDD990EE0BD58779F4FB9545EB8C8BF4
B3E4F142C995AFEC57FAA0827FC8A49C6A9650061D600645A854EFE0FB1585C3
D27444276EEDD29D1409767EE5294333A457BFA8C023A77AE244C506047EAE09
37E02A9A86826C890BD1CF51EBA908698F4E83FDFC8E5D23964C4410AE16BFB4
30F9AF75AFFCB1AEC07026ACAA31AFCCE2F473C9E2FA6525C57E7B370D43605D
AC9CE1AD7B5D8DE2B6616BCCD62AC2D905689E8FD2ADC3170C67CEC64CDCDB58
186604DAE918DB166B283AF67019615CE48E96E9F8CB211F16E2FD734DF3BC17
1840F4C331491D992E90376D5BA5A3353FFA2312663913F9CD0DEA07849DD012
E840BDF370438C47A6E49E53EBDC7F47DCA1E4C378504135D962DC36FB7723EB
8CE4732283AF95A29A818FD618E4165E0A445A8B8A0CC47F3DE50CD918897E94
A1E0DD916DF68792C23F4E2E894BFA06FBF288073B1389E22D8B2047F7AB5D77
2F4FB429FC2BBA089E313B2CDD82714B264ADC26CF5986AE7872D2316397E4F2
E45598C6BDB481FDB9878DD935C93CD3173FAC29A2D5039712D24128E88EE585
C5DD9A43095676F4414ACF28D54C311F4B86E68FAFCE4AEB025B90862DFAA227
B6CB933FE846357CCFAB8F29539AB8C0ABDE6E2A59E113EEBD2B23A1D22B6C5F
A0FADB18A33FF078FF644E0B177E9329303DC98694549B9BB867EEAEECB5CA64
A561A0215536A9CD7EA04DD29D354FE82FC1C311ED7F8891A168D171C23A9B8B
9CB96DB513A6C9152D578163A754A9A141CFDA7E3E4608FFC844DB5B21A6C72B
AD8CDD2EBB574B273070D481B8E91C7E5396A5A8142D0B645DF07051C041761F
3C5CB5ED77ADFEDF55EE324FC0F0A5B4B6D28AC882374479F7AA349E76A227E7
1A3CEFFCDD45876B943E6A7DD01022939B99B44AE4940C14548114CD629AB151
F69DD9816A92B4F90689C6B89CAD34445EBF6527EB45F4272BAA47817EF879F5
23A75E1DBFADE42D4F0D6FBFB044CEEA6063B7BD7962A7CB95461E09264E2823
E0199C03DB94A74641E3EBED15FBE301332F5582CC989E77E5F3F7F0345B65BE
890699CBB5416D793630803FC238BBA642614BD9CB1BBC94245D18025712DAC5
0BAB914AF1F5D1C257C533A6C16D7E36ACED2D330CDF97917D9E78674D71344F
900BF9B466378B173E35C9AD1C40F855B2756D85912F6FFC0FB37A37C1ECF4BB
5A6B2F8018DD4FB0A6B287C9C252B7EBD2BAE1369CBE8C4EED6895A0E597807D
0E147C8B981F67D0795D3EF6C62A2B72EB820FCAE850F0A94BCB8504FB9AE268
2543336C2093521E3A72641449669B6A8F513D1734DB42C234D94F9126E0E6EA
3A1E5737B5EA3B811EFBDACC89749E0BA2463EBF307169BBA67A0755FB1D945C
0E7A0403ABCBDC76E8BCC9E6521A9594E02084EB3D5754D44272B1EAB42957DF
F669B10E260C203989008FAC5B3E864B8045E93976FE8CECE44DE47F3B4B5138
08A005099C7B50EF73EB7EC414DAF1521636B5A3B859EE1B415D84C1FE008345
3C079E482DFCE9DA47C990EA8AFE61044781FBE1D0F71AAEBD73E49C415933E3
0B2A08D27C4151D1FFE35EDFDB9163926F0DF65789E193962FB73057715B7736
3E5F131EAC7822A9B6BB397EEBDA8465A4399F26AB85EEF7238B60EDFE926FC4
746D07B88C87326EE81BDA077947CEDB3F6807B5AC59699E41325EEE03FBB034
4F510C0EC7F7791EB99EA33958D82A53148281630E389E334A92A7711CE26F31
4DBA0956AA6673C5639A0B2A9E48728E97BF8F582AA29C67F35FE7537952E7BF
E1818551EB46B0DCA90591D029BA2D3B9AADA4B398501C8310CF21D56C191A73
B516AB5FEE57CA4C5B021AA7394105705E43A651EDF14CA45AC6AA87666DCB4A
CF5FC51A1C0F6DDA2E2275C1DE99C17A40254843BD13886A61DB88F7BA75CDB0
CB314B0C23F485B679516140FB0139A4DE79E2582719136F7E388D03B22AA988
ABC8814BDFDBD4D51B2451204D87C74489F36C7EC49FCDF12B6110CD84632448
2F6E9686EF74D69D42A90965B25A62176DDDCA390ACA4113452EF74DB41377B9
7B1277773019C73118BED0F9074F0BA06C0F97F0CF47198133385A81BA790816
C8FC83194350789D5FAEA13D6691EEA20807F2CFC79E05F06CCF7504D2FF3443
77905D4008B97208EA5DA6A6EDFECA5A2BB3850CA532ABE2B2006B810646F07E
6F8AA73B8AB91E4B856B6D57B739E5B38B079922C80848CB21E8CDCE22211A10
24B9D9B7DA3CB5024367D1A7236A67EA6653E7133B144134D8D464D136917BD6
532F1D9CDDD914433ECA2C0D40BD85326C632E24140AA9E34CD7F2E33D717A2C
3994758D5295DE0F47227AEB6BD08D68719BD151A544197F33F22A20A9B62201
E3DC312713B3D3704F9DC3C9F57D083C6CEE2714B683E25F2ADC14205B73C4B9
E3C27DE9432814D8446C89E9AC2DB8F192AB9657AD52338D1ECBA141A5F1C656
5FA3FA5F69F22B816D3D72C0B856426D0657ABC1D91DC05F553D7FE313B97DDE
7F5B13E1262EEA1392D7E7234079FE4D962AE0F7B7E5EFAC41288EF9590A56C6
1BCE94C160564C34A2352CBB5ABD1ACD1155FA336F406C71FE97615A632A7532
FD9E372BC2C3A5C44D786F4A634BEADFF835E77ECF89D666A60EFAA09467995E
34FF1789AB6C1632BBF3B30733FD155C5975E0D780441151BB1F54A94FB37C1A
D5F340E7B98CE1EB6AC616F500B1E246825589CC83F6EB2EEC592CF38EAB9BB7
435DDD08A2BFFFD7304C5BCD5552F277C2DD0C9BA9D4197B7951B512762B6B6A
F108BFB59D59778972BEB5AAF2F3A64FB51A6AA732341E27533241EDEFE3C40A
D2077551605E764C896CB2AC6F7B4D29B183EA2F6390F1FC8DED8A8025F91217
CDE2A158ED8654FE8BB842C9E92C7440BAAB90136E6C4E7E222D71DE8458CE2F
DBEC0DFD28B06C764E1C2B360126183BB569794C81703E6E6F4AAA293C207D93
39B693E79D28DAD0698CA46431646C4C642446A78B0E897FEA7AA5D8CA2EF754
1ADA379AE46A2C916918EC2ED34260771E8CAFC799CCFFC062D48B83E46F7F9B
8AF8590AB9C3442DBDEC4C7A650F2720928B7483717C771A1BBF11642D3ED614
2D6E6B26A030B268B944B97C801D5B5802CFF732EC41F07152923C284AA28840
DB9BDB5A21BD766DEF8DF10156C1EEF3841697EB3006A91F67D212E5B1162AB9
50A1F98776AB562836C7BDC30344E6F6BDBF1E295A8E60498F4C285136443D99
B05282F8E805FFE9FCBB42B2CA2D55C090393EBB8D6ABE76D85554C268B2AC6B
68D979A93DCE047D5C1B546798DD9018E0592AF293F2FD6A992840D209A44E0A
E0FFA6071CFED234CD1A8BE662731F84834B4E1EA05505363E8F2D36B426F904
6892A40E0BD2072B3C91FA51C995C2F017469D3CB072305C41E7053426FF916F
115421FEB026B7282E2D45BAE98839BFDAABC8073D01F7530A8EAC9098BFECE2
7C9004A48BBB449472FF030EEB3CF342D443AFBAA848D91FB265965C6DF3221D
A8AB32C51C38C96B8A9FC0159E090D092DD59C75BE87DD1D87C54A2CC06B637F
87458E4F01295B27DE8926A3F7F657063A107DB8E1FB94116CFABF583D6AE7F0
D7AA0ED4B96A16F8111EF7DC46A3251F523ABDC1A4680BAB04023D4C0D6E910E
587A4A5924A44431B80EB6481693D1693159684948A4ED0F539EF5CB2C94EB41
B791B33567629F3067E242E8C83237919D8C9630E0807B4D6399FE8149F16832
7618007E629FC21615858A1E5CA868A1EC19B4B9BF4F8A73B7C4928101F0D1C3
9E89B26F15A668402ACED33733940D5F5AF857A3F6064783E088E64D62F2DC81
225AC76EA0E7AF1A6019E01E55A5CDED90EF84FCE8508C69407BCD8BF37E8B45
A452B420C6EBB3C7A474C8952244C956928A790C0C0B9AD75C1E1BF81ABF7797
A0B5A771413D3213C9C6CC279DE672D2A06F3A5A88AAF9ECCEED10B362213995
18702888184A86F814850D36302E0A0749FC0C9EB67EA2353894C77CF191A313
928D29497AD2EA8E15E526BC717207BF87F699064A5F4B3263487497AE38518E
6B1EC1FA435011615C0D3563AC012A3BCA7CBEFBAC8D529C76F8E0D3A0FC1B92
53701C66103CC097E55FCB7EC41EC498D1C3A0073982B63CD6639FE229D83544
F48B426DC2A2FF84D6CD934D70B62E3FEB51199A06BBA58535703002E57C0A77
23AC509F4870D5CEA9A5988541D01D9E9F19084C5411F2519E93597511FBA79A
0388AC522FF244062AF04B6AFDC7FB2158798A3B5EB53D691F27EB1BBB97E78D
8224478E80C14E57B096880C8DCD7FD5914CC4BE46A9D5BF03009934C336B8BA
80CB534A7310D0D4486B65B420B80D5B581BE33E40F48ABE8446104029E2FFD6
D021AC1D7216E11928B88EC7DDA8CE0418A55D630ADB4CF2E8FECCAFF3D96945
E572E37AE100FDAFD8B156D9074DD3C5A77A357B7D161CB08552BF9B210AFA1B
D35CB0A649CDE2C2C38031A1B923CA3B124A2A09D878D82569BD4BAAE2C6E994
C8B7AD35ACF5F1C146E6CDB612BEBE53283BF5208575F3575C3C5C7464C7A9ED
0D25721E997D5CDDCC09047A95EAEAE031A05718179A02900F63FBFFEE3FBB68
3DC9AC4A57B6381D5B23949C35C3840D4C5F2109F65923C2E047FE07D53835EE
368AB7318BD423E1BDEF6C139306863F197B7E6DC1A0AAC745805751607C70C3
BF549F07D5DE30E8324CB74D7A7A4812AA8DAF4D998B82EC4D35C7354E7D5DFA
A78B9F6E595EA116FA8AE6802AD051B13DA71B772C73CD91216E8DA8EF67E6AB
AF8D75380B6ADC648F84FD8AE05B830EDEF8DCDFA4E57239BA173225D43285EB
272CEFDFCD9D05D0177B57ADC59C579A08962684E890AF2AE4EB43A51143A4BE
5E324448987E23C3D558F226C1C60AED0691EE3D899352D15EE0F208A03CDDD0
0BCB4425987D00338E79BDE7EDE44EB7FE18FD1DA2686B1C60499C87559975CD
039CD17C26A362F19B223D7D14DFE13AA75CD80048D3ADAE9024D6103794D1E5
9D5ABDBFDABE349189B41395FC0EC5F77EBD1C9B5A37ECA8F51B0E06A08226CD
AD2494FCDE4C890EA60AEA845AA07E2188438E34CE56EDF01A1F1D3B5AB15319
CDB67441E9A4C625DFDA57DA90FCC36FA24A80492F49A1751DC85086352DCF6B
B4A0B2A4A28B52446634F02B2D39BB5C668B2608B4173393B20F78E94EAFE0B3
B6E76AD75D892D6F18C7B7A2D79BB54082AE0E01B8746F135D5C8FC68AC81E5D
65756BDD19B31F1CB39D32EA253D186461F633F23A93838512579FC2ECE41E6A
CD66515DD85195FA2134B132533EA9898C4E8B75B9509FF6335C3F3457F46ED5
B988739D7D172088B3A4B62B4A8E6D0BC2391717C123B3EBAA54E04B28
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFIT1000
%!FontType1-1.0: SFIT1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecit1000, tcit1000, lait1000, lbit1000, lcit1000, rxit1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter Italic) def
/FamilyName (Computer Modern) def
/ItalicAngle -14.04 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFIT1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-70 -360 1392 838}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1EC5CA76F3FA433922B4C840F1C54D4B410FA
232DA4932F27F16BF8CDB753CD6792A9900A99C9E3BD6F918ACE957247053A6D
CDE451BCC8152EC7EDF3B9CE759577DD04909FD40AB24CC6AA440A56F2CB9532
A73D218580C6DCD7E84886ADCE804D9F56F691CA8CF6E04FCDECDC50E89D7302
BB4D479AA36196E44A9D011AD1C00057557163AA01AA4B4C20C209D06ABB835D
1F5282F47D7332C6619F4935B9829E8079E6C4C87C5A575D0C55C7DCF7AFD6BC
F67CF36212DA945EDC9224B1ECE9EB6152E6B57F3BF4792E91CDADD900B003C9
38CB162E3C1D4A8A925425634B2B530A17B104E9A21ECC2F6A30B3231C7C27BA
3EAB9BF231CED0440B8597B3A35E21A3E66C525B80AB147ECFE4E152371A4334
7DBF05A7A1276CB46FB64FE8C2484AFADBBD17B2F94A506A34A9BA0352A91B3D
EFCBC9CA192F4D8DE86416ADB1869D73AD1A69D249329EDA2D1D461E41213E6B
67BC4EDEDB56018F4037D72E6541578BFDD16144EC5F060B95A21772C4119DE4
65FFB95D789B8CB67F10DE655754C0E291F5D1FB382E99E176828D613909BD2E
070F7DEF8E24A4F500B585D8B6CDC52556327CE9C1CC1340A4FE7C15A9E0DE60
0581DE277AD86FA6713EBFE15B8999EDD0406BBB0F061882534458E05F47E30F
9EDC56CB842043ACD4E4BA5C7E082994AACCCC572024A2FBC82DEFB47B9A7ED5
DAC997F0C96EBD73A06BD8216A3C4550E6174C2367BF8124D0B1DA92E27362B2
B9578F0F8E2742E4AC3390ACDFBBFA745CAF433C115BC700B365EDA52C52D99B
BF3C16AB5A6F265D4BAE09F326C7A3B460F007C1D9B1D0194F525E6CAE7FD75C
8C34E6B895ADD598B347947BFB29E19B19B7B1996C96D8B52302D9B7E47FD932
AE04BA80A0B5C87DEDF27CFD603C275A1F76E771B475E1A557A52CF5D26CDF0A
EAD7DAB007222B745D0B23C18060C4CB1831B22948BF12F26C82B2DAC99069F1
62BDC009DCED2FCDDF7AA5E402A021411BFFD9998F9AEBE37DE5068418F41A00
7E64514ECC2A92464398A1EDE91EDC4F4ABE39D2E21CE8C3731E27B0875ED86B
498E4793915F5AC9E2301686F8797624292BC3926D03E4312FB7EFB1E3181CE8
AA1E1021BF9D790BCD66B9872418F069ED55BFFB7FC986E5F6CB5689F1A9FFB7
1AA7E9AC2E727754189AF4EC871967BD941D8D902967B91008513A04D2CA8953
09CC0EB0CC9F750D3E83208C1680D7EC237281515637F0A5F17D7FB87BFAA3AF
BDEBE3188BF82663CA731F3585C9B36A75CC7AC35A6FFF0BE78E130BE08DA99B
91A1A28AF31522A66B8E9D7F2FD3D3F43B63C0A85906EA4630758B5758A5F889
A5F503843C952897FC91509B6B005BD64976069ADDA18339E60749C218E063B3
95D84D04AA7720241888D3B8A97F5F335EDA4288B928203E2A322535DB173570
90B097E6BDE9FA15474AC675E8EE1F8ACD91E467EA0CA90AC3D4350A1D2629A0
BF31DA39D896411D284071D290F35E9B5A8B9C7E229F4FC592844ACEE1A51AF1
286DB7C95F1BA7E3806A1534708C378F4040B24E57BA7672E19E360549603C07
27A4C0D16EB37C370007FD788E29F5307474F5BC80E8420C2C6821DA85B67247
44DA0A4001DD7FAF6007B39AF03107E692DE39C36120FB8B7436070F4ECFE8B4
85C8713C7F7521A66CE5EBA4A3DD01B7C3A294BBD33CF33DAF8A4BC2C999DA93
F9BDD9A430ECDE68909538D6EB53D9EDEB8273F35B5525344780C3FE46F28CEE
9055AF13161B0F081D6BB68257AEB962FA833C544AD27F09499AC5CE6853F0DF
9F7538A7CB7C78A8C6FA2C41AD66D3EC9336767AA7FC3F80225397856BDA04DD
10EA95BC31763F5B08FBD9B21015A30F22586073086AB006C5491F3C9C9235A7
D5504E3D19C9D40FC304CAC934D15F54843673A03AEA4A5715C490B1EFCCACC5
8A1FEA7C7EAE33C2D9039CC3ACDB83FB1ED7D11499EF300E5CDFCA88076A4D46
7ABBCF8AA54D8B208F973B30B14681571753969E4DE4886646768299303CD0D8
39F87ADEF6159361BB0B9BD43D4B8D7191ABA95918FA239B603CA9EAFFEE039C
DB86451D5EEDF753D98DE208137F2DA6C21235C6C2A77D5E12C4DFBD2BF4BFE1
6F013EA511AFF68F29ECBCBA6F781036AE44B7095C1DECBFCA593B9A88B37BAF
7CAA5689A784ADDBA4FE86B13236C6792C972DF81E1E424444BB684B00FB549A
92866A99B8C1DC48D348481F850CCB77143983C5F3D297158E004EEA31CF85C3
0F4545A5AF9515E57AE70AC9A1348DC7B8A82516AE3F39574F4183D4EBE24EC2
0B32463D48D7550F2B4E0F32924E1C6F28D8F4810E723C0D953E9900BAEE2FA9
14CA821B995E240815E2A866A4A74D6EAE39BEDFCA270D52DAA835C2F5AD4A68
6AD08D403BB53CA7458DB1F0D03553A5965623E103844D52478F6545177D6B1C
7CE49FF009D32E9F6C460C203D7DADC4AF3BB8317F8A749ACFD5D433FCFAD9CB
A9F009AF07230FC9DD3C3E037A7D9611F4BA3E0CD4739A736F44FAB37523E494
1D032F2DF6FF5B2551BF8EF7E16BEBED01C6860AA8A1B609F032B4D0C796C291
702228C36C936559914ADF426FF193765CCEA9FABA3B61F7E812297D0C6D5072
0D6913F4FE6AE08598572C707E3CC5C40B8E50E255086311090CE3CAFE150568
7BCA1F8AC238508C65B7AFD0141326A5EA62521A4C3BDB8F30B5EA397AD6D271
C2C6A164A4716C5A23AF13E4F06EC1EB7A9F2F0F62B69B54677867DA3E9C5887
237A054B74812BC536D0293C010E453253991A2E6109B17FCED82E187C1A64D5
BC7918D6B94757EA91CE30F65D01884D696B91932A0EE233ECCBB4BABA17A284
B2C4B8B5C38ECC1BA79C3424E5653DC73AC808418FCDEB08CCE088FC7543CE98
CC038B3F745E070077E0E26F3A5A6E87548099AAAFDA263AAEF21B9D4995EEBE
7796F312E5AA29F00CEB40DC2AC104F1B69387714E21E6C23C7AFFFF0C55C539
A213554CA0AB0124492B397CAE856B0889023A437A1CCEF030FAFDEFA9CDDDA1
58721753370C67118F6FE0A34913ED4CAEDEB7A177821D9F63DEFBBD6E5E186A
CD15F7A1CC4339E97EA1684275778A369CE0C8168E8287F53A641C89A9C255A2
E1DAE2DAB15E644950CBD5B5325C879B537E40FEFE7B98F536190FCF1EB9AC02
E701CA4270B6D38CF1DDABE788F00D864FFE0F06DD5CEB958263392771B239E8
901F1553A8769C8F652DB2943BEFB94955CE9DEAEF0BAA46716F0A15AA2CF2FD
9BC138B3134711BCD2AB2FC36BDCB5E7211167974D58D6E0EF2573472DBA0C43
1CCA3A2BF283747E516D0551DA9B725F285733A9BF81ABB89CE842E89F7BBCB8
09309BBC70D28B513A5D5AB9079E7577D6CC000290B04CE8B24764D050C0E71B
1A844380F4B890F2C41EF0C38076871028401BABE1E5ACA869D0BC3099ABCB56
70BB9787639A1BCD39A8B77A80127C6834280401EAE7450F90E497A3E146C230
41CA1B2EB790D7F12A35575FCE49A63824023098E835136871F1151BE84B3AF4
016601185703B79C0B254C9577CC78EAF50FBA122DE97AE4D35FCFA0DB1CAFAE
EAA9F7ED484A75CB9F3821A79DC9C539F2EC7848D7C0BC7DB679B89EED605D72
D0BDCC2A72DE0E99E160D339B0169545E873682A89467CA60DA7E08F32929504
95C8AA9050F3077109A7F96AF400D801D7286F6337CEB228F0B388A17877A8C1
61B1E4A2BB935EA6DDAA4682735BB06D4E2FF2FC7F2D4CB814E9F857C775BF07
A434B010F66B57928F3AFF39B376E5660D29034D2ACDD31C6571C0AE4C07FE23
105BA275047A01D525F40446181DAD8A28388887C768166FC84BA0884F0E0738
65F82D1A9B23B06E0893AB418AF962394552CE7FA2DEE688640F8866DF74733D
744700186C138850D48616F293B715F3C1C75BF59B985859EB85EDB5830C6515
C93D445D436858AD3E106366D0B0064EFB9F8B01DC93E4A068EDC4273726D720
8342608C6E01E63FA7E6006E81CE76535C1DBAE78B35812829D5405BD9799B7C
E688717A2BD984384C83AACEAA68AAFC75D4B2CFBD0FB4DE330D2E5AB275F4F9
22D89693DA726A730538926156FC32E5CF38987F79AED993627B44BD93166C28
86A249CD442575934D385554B2B1CDDAC07BA099C29BB1FE8C16CAF0476BE086
11927DD65A95164B9BB83253A236A14BC29AB096B64A94E448E1BE9F377BE69A
30CFADDCCDDA23E8B3D8DA9F8227A5EB4440461623FD7A4DC61D98D55F11AE5A
EEEB0198BBD036C11D0E8A693880BDC6E00A059E3E205D382A37DCEA286C1D51
DD444E11993482476C3ABE76BE2B26CE562FCBD1093B07E2D466E822EBAC7F29
927EDC66D01DBDFA9EC105A2065C218310310D2E893E8099610A4B740BD67149
83E454C5619633303034F8D90B31202836DFE33E7C7A9AF9FB891E896F1F6D4E
139354305D97FDBC809B140814395C3D90AE4EBFBC530B1A1C0BD80AAC1E57C2
2DA4E77553F9C7528BA19205441FFBFC4704E4C7DB807BBF07B87606305D978A
2318A18413A45EB18DE7ADB57239835490FC25A1C1215183569B44BADED01767
FCC6000D70207FC70D3705A9577DBC57DEE03DC508BAE3AAEC9294088FF7927B
FC78A55C9A0FB9FA20CB5FE2123B944F0679D4701DE7B85ADD21D5A1FFA62AC1
B0D9209A05343F7327B48C02D81FF9DA8BB3DCF717A8EF6C979280169E944BB3
267F1CCCED8497594095146BF2B120A748E0CDD0C0F80E6AE4E251F1FC22EF1D
A1C4DF97A1B435BC1AE23B20461FC002BB274B6ABA80CD4FEAE71D9931AB1343
2471718C19D83B1C66AD54FD6CE1454CFA30B889E44CCC2713D86BF55ACA0006
44DECE98CB4DE8AC3CC9FCB3772DFF8130652A40EDE85CCE2119B06017B1437F
DCD532F934A8F52420EEA36A5D9C2EFE0D82006B5BD175DE45C25091E497EDFB
7A553605C6C98A48018B90ED80DC3ADCC0DE305E7AD11B7AE179CA46A1BDC0DD
946D3F996D107D2E5F9B12B5215CBB5DD8D3B29785409FF2A50BC43DA711E7DB
883B1F2DED435E1BEDA607606D9EBA6E7D4554B341E30AB6A5C9F9B9E36C5B1F
99101E1C975A8BA9FC7BEB994EF5BBC6F11E9AC0468296284DB1EF5DDDEC750F
2C235D47F459F299DC76335665CF631D705A9B7A591230B56C976C9545B9CB8D
78359EFBE01EE9D29DFA6027C4DB510BDC32FCE3B34EB4DFC3D2A1790D44E3EC
F9F7F12F03E758B74BF4CA9EE0CE683F9957D7D204B01579697D4CDE1EA66CA0
F587DB8E69715E097D65D1F22B1B00F11D08D37397F01E8FC2179D17F62B1EE0
E810FD50D266E94B76BF9CD2AF645AAFB67140B5D2BF2357530D7D0B90EE255A
DD67C266E8CBE8A5E2A674837C745817CA28E17D30D9B27BED801BDB5503ECA5
CA374B66AD29FBFF59BA4E9C625F6F865DAAC654866190521709D1D59E6D5436
660D5056FFD6F91857B51C82D4AC15F468F20F58EB4D657B94279A52F99332C1
E10A5B934A0857ADEC14D78559A25DF19B17A7C122F8F3D7E691D1B3E729DCE5
D211CB05EB43C89247F8B02FF11005BC921F047E3C90AF2313F595E79FBDF9EB
35D2FC00A0D94702D2F9D1A13019C336107989D8A645A32F679C3A002F5B1BC9
C858F0876B506DEBABD9B75D3996EB5F6488EA8D3235852CAFD245E58F5667E9
14527EB8E0BE0D8C70324795007691A98ED2A463341F821DEE8DFFAD0E3F3F3A
4799BF0B93C238476269624DD19D1AFE2AC15DCA9BADD1C18787E89EEC3CDA29
8908B2B6A65374BCF01DF24E50A43CBCA7253327A7F9388A8055CC30F3A1CDD2
DDF3FDD7B1EAD88DEB5F187358FC661B65E3AE47231390FA5E8C64ADF8CF4497
7E516ECD13D6378CFE2CD4A8C6F917CDB66979308D0930710D8871F861912518
5148CA6727153A6528CD9A1E758C6FF056E38BDF0272127F32580A1432B6A573
3F2843807638D115311D4AB47D6E5CBD89B31C973F13C9C9480409EA18814D01
774DE60A4453597E2FC32E122EEE09CC1C47BF21CB755AECDE8F6116C9DE3157
5D754852757324E31AB358FD67D112106870701B7326AE073DD86F0445615869
D070377584E7B0F3717AD3D206B76DC69BDC20454E7C79565507AB1C2EF74EAB
CD020A9DA242BAB1C3A23B5301D2364C60C991DEF8E61760E4CC4A71CE34FB84
E69F66C27CFF66F5B251168303D55487148636DCB89FC3A30ED91928444F32D3
11455ECE6DCFCD441CBC3749709A48D2379F1F2C60BD46DA245FB8EB01878B48
7485A275D1516FFB0D7AA72A6F615ED59D4A8A3DEAE18F1E13C932AA0E6BDE2A
7C978F3F58E936734F4DAA50D94F69C91D9DD8E1021F51CE6B2C9F3ED3C00456
9B30AA0B6E310854CE3A6B35CD3723D84831D63B6E43E1878F88D5C14BD1A6F6
3A62CB64A601F235C4403F374DD749E601315FAACED8BB6D14D462C6B2245650
016FE4CBE099648D6FF77B12E41D123CA6CD196C01614B1BDF8352F46110C29D
1897681E4254903E91AD5E74A523CDC14BC40BA382BFB1F6B493ACB4AC69B3DA
03189DB688BFB73CCE3A81C12D2733C2962F97FDB9365A99F920337250287798
567E278AD192D052BFA0F99922FB399A4E977EF9E19B08476D0181C366C25739
7E9BE4431D0635A752E468BA5CAE58BB54C7F8A1BC1F4620BD19276C9E536DE5
6F6D3C578E8246E33ACDE662B55A188D9D5ACE59F9353FD876B487AF262F6876
CBE655CC716EECC58EE03671CF6FA989DE5CF6B52F0F1124DFB1F1C9E4E79433
19555D051EBE20C9AF3B6EF455EAAC33BC9D7F764E083BBA8A2D535ACA185F71
2A3370FCC331122ABB1E389576516549AFB33237CE4AC3D55C499106722C071B
FD45172AA76A0DAC302912AC11694345EC5CEAA467E942B805109D5FFECDE6F2
AD47811BD88DAC338C575BBB015C15EC9123FE40E54F14F0D6515CBB5770529A
D416D8118517C4E68DD89BA2C7667E07BA5A7B0463EE1766834068E600507DF9
80D3DB5B77D69C6FDD497D3573AD02E62D848004C4A6AED70D662F953B5EFE26
6202E566669AE66260D0954FADB4E16895EA3D40E264E54DEE909743EB7746AA
C3E9E93C8DF81A783D885604BC92AC6CC3B326B4DAF2B05734AFD7EE002D3D64
43D6DBF4C0C7733A6FE8FA4FD98ED81194A4D964FE2285E3198A5994EE3786AE
2772D2FBC5D75A7FC59B06CDB75AD8F831DCE93480DA2A44FAD2EF13A407C4E1
B0036DAD5C10714EEFDD6ABE8023D53D94A993E8EC3F63F839A4CE8FF9707A21
931A3C680419A924C8D725F63A6FFD9164A02791DBAADA26A7159562865AAA82
8907425BD81578D8021C9DD9C4208BDE9E7C05B671363D4A0F8C6F997FA62B90
E03B5CACB02CEBF00F0B50B7C856F14CF9522C560090A3B7E23BDFC4CFAE0933
23981CE216C9A829B6A426B837E53AE0B35E28093FC029EBED9AE61AFC1AF1B6
64E9BBAB13ED3963A2AA5ADDEB0E853436435C79BA92CB13E41C1512BD651F9A
A2808A80B7AF640448255F9150DC16AA060BA88E5F1C5CA9A1DA24A09B3E8973
D747BBB7C389C9D5F0083414BF48F0F79CB5B582781EC841951495709776AF76
DD9F6031B25B440AA4F02E6017F70DA75B71E12928C235171074364ECB821D6F
28847A0F75683A559384F7D9EE81B7B530B8851377AFCB7BAB3F2050025DD297
E04A8F84C92FC373B02284F9060C62A29738E291FB7B1A8F22939D4663E3073E
A68F6865FE355B1BA190E9598324D4264B3317C40A85A934727675E6B1E55298
253B0DC536CA9CD00616B52F78245AB38822032F532AC2710D9292BFA2151E6E
85A8CC9639336FF011878B66454AC75984BAB2DA260F9ED975AF840018E727D9
886336B100F5604902649DC650A35B6D9C4CE0E469761CE7C14E95B5D7FB36AD
1D6303DCB61AAB312A002FD2008F552502ABDE3AFC958B62CA39F21FD8FC59BA
FC9047A06D5E4E385507F497F71F5674861417C9C4225E26BE8A2FD4A21EEC66
96146B9904A8B18B8920635C92BE4F163C166E1322DED12CAAE39E289C181D7F
90A876DE9B192B57FD692652886BAA10FE0D7594847B364A3F36FEC0709D6C39
90144B90C46081FBD3C2064534F300477E35A30BCF8594E66ED37EB6FB4E5E6E
11F519F5324AA344FBA67D67227F5F783714F9A6BADFCD9F75C3A5113DD05E3C
D8A2CB8AC211593D02CBCE416CA1482250018126962CB17E3E3FBF8B186BB9E3
F6C85E86E42F9B720877AA4578761465CC4776A6E23868918D5A94DB6543BBDE
3FBA36760C9A55D27FA995B811B91EF497A14237C3B5EE1F6526FFC9B4A41D8B
3658DB5A09ABC99E6E73A96A5B90D29599651B032B90B0B6722BE45506BDDDE9
6A952F90DF80FCEFE43D6B22FD36847FFCD53507376874E27A0625D1B761EB61
D5FF5611A9E4259A7D68BAF10B957E6D3A11E0EEADA664581A1D83E687DDA0BE
858C6D546FD77FFB99235004F063AD740C9E17BD66D9AC5B01B2B01B289D953C
EF5E45F29F80E00C0F4D344C554209CF14C64058BB1678D655C2F14B4E50647F
37A36A436835CA7EF4D761CF20D1BDD9B9180626E64A0D4FE76E8C19304270E1
51A6367A0596D5EB118A6BC86894E6FE4C3581F7F1AC53DAF6A5A0FD2C18FEAF
1789725CFECEDCC517106AB37EACBF19B48738B5B3BDC9B6134E5EC652C6F2F2
AE4F9C70AEF0927B025BA291FDFF5F22F734DC4BF8E9D019B06D3A177EADEC32
844428757A3E5FD42AFA2C4DFE1919CF145F64BBB144133AC8D20F5622E2D47D
4DA10F444615933F29CDF026E9970E3C62E30B3F0EC2683ECDF423D6EDA944CD
00344753C23C6303AC847DEE0F651DC3BCFB7CC4A5D8FF15BAE46A5657A6F510
8E58157B821C07A1FF0AD0F50B512508C065C95E4E2D1A6B9A207C73D6FD3440
3351FD850E69B133C1B0393624EF49D8CDE067C1004614E64BCC96B578FEC20E
7518C8785E7B7DE8DEDA106AB62B6F1A289C140344E7FEDD1ED132230D6C539D
9956444E02C5D08F3B6DD39AE321A1F6FAE020CA50ECC4AA18FA3CE2C36310B2
B5DD1AE673803E8C88EFDC416BE814D1C5E71A26648DD1F195B83E410B8B4444
9502F15CD96A0C4AA14BDDD73F4F4A64F68FF73A2FAE97C8A3427AAE9FE5105A
EB4EED77D407CE511A8D1D7798E99235499B3200D6A7E161BDDA5F652AA0095F
C88955D624A22862C5DE80A58565DD14812154063EE2ABADA4E4A2A485143158
6101D6FF57DD76F6041A5BF89C5B67937BC306ABA93F4A0E3561D7552B244921
DBFE12596FBCC8585498FBE13A062F050B7AEFD609A1ABC635EACE73733ABBCA
8FA901CE65B064559D0503D4A2B82CBA82B08B0DD6563238E7E4F0B9BF31243F
791A848AD6FE14DDC435F172BA8309054535D4C10F4752EBDE99E19E3AFE99FE
42A5F6A79C01F478A7A3FEA3CD29D7DF33EF91C87C0C52F1EC61783D3FCC7D74
C10CF87D8EBC8F15F9D4CC185D3A00EE1ACEF1C93FEBE1B7B92729E039003450
3C71BC5343F6ED7DE6C25902C80B2EC37720B714926AC28EE58208E255057179
0393BFCD8EB9786D465B4A494559B7FEC1043AA2618DFD5284EFB59598C0E1C5
410293C807480F46C21989A09F9F9D9C7B24A5C17DEA160D817B6226568D05EE
AE77BD789A66AA9FBD54205B94223849131086D8CCFDD23B312FA1B580CB3BC3
80F955B1586E4820CEE6F2C77BDBDF65731F190E8D8AE96A57C23FD0E9EE13B6
AFA0E739FE0A6778D6D3AC0807AB1316DA2070280AF9270D6FA4E19621C9033F
77A19FE5E1696AA31707AEE467159F335B2D0C98151CCAECCBD0C0DC565AFC8F
9F46BA7AC14F3571E0DF1CFFC9A924910FA08BD4EAC0F9BBEE253201E16C7C4C
3BC2CF5F7253FB5D2AE269BFE6B627DF2E049D234AD8989A6B0115F2FDA1CDC5
F180618010AF811355CB98A21E832908109F3BDBCC415733F62D3FE4A2EC1B74
C171F2B164C0BD54A844120B5B65BE81D250DC6A85C3EF4C86B8CBC7DFF2589D
A61EBED8B0CF35A5BD5807444395130D803D0A3E30210D2664BF91C73AD1A811
6E5E066FF7EB345034D6FBCAF77A08AE9F92C0A81F661391E66D4409C7210BF0
CCD3E9733E2E16A77282703B7F2794E95873D7CDC11CF5D9ED283D61AC1A46D0
EEC9F45211E9347590AC4D0EC6DB8F8616F46E6C7172F02E9EC6FFF847F6448F
F7E097AD3FBD96C6EBC07E38DD0A435B694C2B6BD9495599EFB7C4773FB23312
E8643DA4113AB278E8D0E636BE67EC5EDDB399DCA2F57D33E98EC0C3E7F19624
4F74F1C942046DA695E4F1A64824971ACD40094856B12D9049B4A3B1FC7DF96D
A816F5179CFBE7140E02C5A8CE97B94E23BCE0C36D09CF9E2FD073701F4AC5F3
C3D41953D73B192BF64B04088C5EFD8EB4FEAC5207B891FA6C227805DCF438CD
9634CEFB37D3FABB37E3BD6F09CAF327C00B1B52CAA36C33E0CD050489175FC9
0DDE0208B48AEA7F6DD4A159429A5A869916E8FFF77741523A884E2915A7C1F7
86DCCB6051092E0688353ADE6C40E334CF9BA5D7A93E0AB9BFCC954A4C7DADC3
9EB6764B4F813581BC6A419915208A174972F5DCE57513B4904E2D6B2CA802C1
3D300D5924AFE7510861C2CF1E731A2F7CBA7119D244B8B409366F96084ACD31
4667654C7B7B16433C920A7F764B4E2A297CD2A7917DDFE923EF6DC26189DF8C
404F55E01F008CA009ED9A24AB4E331BF083EBE9B5A0E7ED1887ADD5B6F00237
A83264201C49B26DF33FF9C39637A6D69903F3FB5C558132A4D24ACEF08D5E8B
5C9AA6CDC1569AC0B3A9E82EB550A8DAC4F1F2549492200A87A05FF0A323F2B5
4C00FA915831646A79B08F3A9EEE29FFD088359DAF9A8097526189641875C81D
9F52443043E98EB63F1631D4372EE9DBDE101AA45C907DF9D9410893D24365A1
D19905BB7BF11606A8A4E33E10F6F851C5E21FB18C1E757C430D07C67621BFCE
390F10F929D7DF5E31B5DBAD63CEE42C1981EB8E1F1A2598376F9F3762D6CE21
EE6AA1A98C21905FF32D4AF7739604AA78066437CB4D6C5BCCD5F82C1968490A
098EBDBDB30BCB70722A470882FA78F598DD6BF6BCB28B5B1B53117D108AD546
01C5F9F11A12AEACDAD8D402F680A6E45C06B685D9B93733B92769C99DC52439
63B837546728A7FBDA01C6F417CA3B2F29742B7A5F78CFF022EAAB02B36F9255
45128BE3879BF4EDA2E7250CAD23116D1C7AEF86EE41DA8665406D37C55A9EE8
8197F8BF2BE6465D2056F1B865C905F4A013F5B8C7C9C2CE1A0BB156FA0A9EC0
9C466EF011878B66454AC75984BAB2DA2609E3DB0378AFA69E24DECF644DF92D
8B8F5E491FEC67CA58305C441B9DDE92D88DD77B866E004B41944CCC5C74894F
8FA10295E3E1FA575174D0F6B73A66A4D997BA5C7B7FBD025D1040054F2BF3F2
A0AAD96571272842272CCBC506C3523740FAB7F9A7E71D10EFFDAF25F6D7AE42
51F84316C85A4E041AB66670A4578C7B951311C0C44BAEB2FC40CFB8C7D2922C
8E730EFBAD85503029B9A1118A9056E44D4C461EF38666F3383965117766DE5B
89EDC99088B7B0B78AB077F313B6E04CDBC73BB6E8919A55244D7542084B3A0D
4D614B6EA84BE72B3C31C6E664A39B29B5C776D7607E7626AD8540D1BDB68409
29342A62B9DF6F39D245ECADF558E12FAF869CA14C41C029E9A4E7333F9FD562
7D1EEA5EB437399CC26C9FFCB3C752A41927AC3BC9E58909271C4BA31B68DAEA
3C00326BF96D4E6D3FD56A5142B2E0FF78ED47FF824A9F0C86A27F05D2FCB119
061908A1F9EEA53741C1EE658DC69C4AFC418D938632E0462CA9D18A4AA2EDC6
79ACF9A98C942B486FF22401F17262FA3D6C4E186933F2F176B2A93ABC55B54D
75DEEE57E033ED3AC1E730D4639FFE925C54BCD4AA1974C74A4E2A74104804F9
EFE932221CAB850C06373CBF3A088C74C194CB2CA47D38214EA717A1329DEE68
B3205FCF30F5415086A311705575254CD6BE941653699D768DD6695AB75128B3
C116EDC58BF0F62DE282D13A94DDF3DBF772C15B051F270C8B923EF1EBCCB597
456453A6B0A9B5D572F1CAE3A4233E405F48F339DE67B23AA4C8B47CA181307E
08D5AAC545FA14D690FE87FF6A549A023806759B3EB47C4F6B73CC7E21368C61
61B9A6359A28584AD32541BADF67DC1A2BE4604DBCB08F6E266C635F94724C1B
4EE5163BEB6C9D6AE9B1D578D01878C314A3BDFFDF573BB7F6E329D9E95D031A
2A37B4FFD8CE52A34D04D3A5C78F6CC832791E3E7C9BE2FF5132FA244964CE8C
E031D2246CAE844E479CCE6BD4AD8366BE4714DC4CA7367F47A81C2A391BC105
554CEB9A3EAB4B7B603FCA9D0F372E8AB3688730FC94AF5FE8F30B20592F90F3
ED2F94ED9D6F1DE7DDC05DE6FECD6D2ECE2FED6218913BBEFA789C135DF40530
4B88D0BCCEF106ED93EFEF8D6931A51EA218C8811C7A73FE4972A46C8741FD4A
E2433F68091FAFEDC6E25404126090AA1815CDF19E6ACDB3D2151F83B22E0A8C
5A66D04AEDFC0E8E2A0985CEC6E0C0EA27FD67649D670D41CA0F8DE48F3CDFBB
EAC168CA4EF2AFE35798B908F5087CBF8A927F7777BBED146172A1F664442DA3
626745F890434B97E9CAF9A950984B6BB390F2DD42FFCCA7D1B1DC0E376B0EAD
9A7C3C754AA9920AD1E78876AF5A84DD01647B9531425C20D01602B364C07010
B5F178CB8C69B14C15976BABCED1ED34C363274B611B2390E47BB61920DC4D4B
36C4755908E5D4EAA3C938495C5EC01900D337A5940ECA3073AD8CC83FF8AE10
EE5DF064498636F2E30C8D6DCDF77C6A61013EA71CF8598CAC9103216EE4DF92
802CA4394B8E28E70E9C8B6608A587135BCC5ADB75725F46171F817A457DA614
D3DE7AE60D28B508B209F14EC8D33B5E517EB9C4125203C8FF1D881F6C47B341
ED1ECAE26A40DB639AD6659502F90DED98BD7E3D3B0831F0DE0DE96C5F110F19
55103C0CA56514E6550245797ECFDBEEB8A320C857F04D2BAB51D7EFFF56E05B
2BE7BA7467E929226245E945F30F746248EDDF63F05EF564FFD4BAF62AA7C2C3
F420D0FB633CAAEF41CA5122A37879AFE47282BD8DE63DD5A3087B8568B7EEF4
C2EA103137618623651419D3853F254A574B63D892478DC5CF0D7709DD9D7C08
9C69D326DC010A48EC241A2F0E478E138C01EF8381D4FB15249E3DC40386FD64
3B0A3A2838CDFB92690C865A39F89134E8205BC6710BD6930183AAB365764699
C3F1DE84BDA301D5E11B7594213C1EC4B1DF5C301A1F6E49A1AD47F9BCC59262
8A9B7B9FEC45816B25D2F668DDE30C448F2637D28E5E52252A446634E8EAA563
C249F338EA5B8509B145CE1974AD1070F88ABCACF78658A66F66B91164A2E2A0
FD5AB16724B33A4E5479F86D3B5DD01AEF0A523DCB49A9C00F12DB57354AFCF4
D7D97069E9178CAD50B15AA631D12FCCE09881A3095C755E49E2BEFEAD85B5A4
BA91725480B7064D05A252E95E2B4EC9EF1BEB07CB3803C83FC4B3662A830CED
E6C36F526DE4432AAAB19E4ABF78D9AC0B80B5CC33EF8BACAF7479F67A005B96
7323E0EDDBF48E8C5FB99890D4C2571532DA1F0C108DAA2168509FBBD85CE4F7
3E19DE7CD096324BD45C4787A8AED654FD6C15045199F2FC3F44CDE174513001
FEB070116A145C2893077C69F4DC7E03FD7A02F465D1AD494BBF12CEF21E6D1D
548CA1024917618246F4238B8645CE28AC8C5398B56970CD156AF70FA8B5B67A
B5087594C2D78A968F1DC07AFEFD0A7302A8A26F4D41C30FBB57A48AC3390D83
31B53BA02AE197F9D2E52CB055E72F37073D8D4690A28A1AC1B1E6E7FDD877C8
817F98F71CE1EDAA6C49D4C68C1BA66990D4607F194FDB4336FD03A6AD1D0CC6
42A9DEE817DE5FA318CA34DF1314C44F039589941219026D5F5BAC63E2266902
5DB695DD6E94F1A57BDF66231840FB665731BF0A962E290E4F14C314226B949F
1718F781D8908FEC9886FE860ACCC9D8437F7E214B87C48E4ABE10D7B392A65C
41762C9D827C4F10F41FD958202547B6CB98D369E4C8C5BA741AA7E4BD3BB2A9
8965DE0C83DE47B68F95BCD78139D2719F15349F2B2CD957E580E0DA3110FBDC
B5E407310856FBC092CF20716B559A93FE6BF784A5514FDFA518791F396FC859
8E542EE2CE6903348CF7B4F906A88362C0605DCCBB1C6C088DBD900E6DF59B15
3AB4FD74DD1AAC08759977291B461AB7FFB7086E21D7F61228BE2D67D5CB0D88
72411DD4829010769DDCDF3340C58D4A785CAE6BD34D7A5750E896DB6A86DFD3
B60F1A0B0AACA77346662DE45BE4BE0F07194335C06A0069BA292789B1B04A5D
00A1ADF89336567AD439F015A396FF20A2B48F77D127E0BADD73CCB46B2F3732
CEA7240C30C602488CBF10A13CEEE3CAB7C14588D1F092F34533C9C6EFF1A62D
A07143B91633C8A2EB23C7AFC9EABCF575D74FDC16F7C12380AC1F7C1C713C58
74D1E75A80ED6520C28B0A332C61623B69A1C56A0C86CB2804718E1124A0C6E8
2B3F2696FC2D60D1EEAA96D19430E3FFF70A10F0D3E70CAA06FC17BF0D32BB19
F36145970B5E0F005FB7464C802BC8A7E5FE9FB9A2C816D9D0B6886496EB265A
B1B30E1EB0394FAD26FA99EF57B9BEFA21053402A2956C5684432DF7E0357C68
BA95130DFB44507F97192769372639ACF6FB592BD24249208316E98240762DF9
1244F2F4F8A058BB8EC9695AE91894B1B2AE96212F4F23F6F7EA18252028AE3C
51A22D69AD053377364DE8EB499FB33E6D1F0BEBECE4294E49F4B99C9FE17681
0E8B9392B6FB7C800BDC90F761E077FAF6EE950215BE50DC846374B50FF9F972
2C6C36383668DB3FB5638BA429F04495DDD7C6BD029122F7C1B96F0EAAB791D5
ECC1FC05C265F81067183ABF373060EEE77394737DFE1DC582ABF78917CBF490
0675E69D935368E4CE7B0444E459CEA88CCE5A4AE4DDBAF01E6F543202E2BE9E
532FA80F7220C2D317D17A9F1EA7D6553494EDAC8510E81E9A1248B9A96F3B3F
C5440F3DD5A681DCBC284DE419E1536A3ACBE3D401AAFE97FF5E5E1928BE1AFD
2D7426EAB926A056C8ABB748024B5F85045D6608324ED1CE7C83397409EA566A
9BBFE6F0E291E8AD7A2C04B15AA9EAB377DF383379A7B2263538A40E91537141
D6AA8AFBF25346B5F5665D8F4350A7FB656BE873B8962C3AFC9EC243C99E082B
DB32F0A0DEB3992F88C1D00276BAFE199F5D82B4DBAD3008EC5998BDAB17A9D8
B8B3576DB39F0C29EAB0DA4BACFA4A9326ABAEDBC9A62B4A83EA97173400073C
25E1C66C86D46BB13688AB941A8EDE313FDA52B3092EC5BCFD3DCC44015E2266
FC409CD0F1CDA5F711EA0BE543BAACDEE7682FA87070BA668667834194A1400C
1D3743456C6FD6F12B5D917CA679B6F13058473E3552365442CFEA7AEDB63BC4
3E44C938E8709755BD8DDF7B27FDEADC6DB9D495EE9F6BE291A76563C3F47A51
63872D62EC4F7E8810E2D7051C4AA45D2F0BFC9BCBF44043DFC5B59443388EDB
91F8A569CFE3C5BBC0090BCCDE6B6F173B59941B84A0F18F96608B4023F2CB37
BE4BB58A45B825449087B0805AC58464FF90CDAA4713C780780DD82B9F3F5457
AF842764D4B737D0DB9A5AB754954D37C564B932A722EB0A766C689BA4780A4A
F9942732B3312A2E70F4703BFECB2D440896B27F793B90A8263E117A762D3F1B
A1E875227B3C40E10CAD5F4DA2D8B6DD2C989EB8E80A77ED6270AE4A9A6DF110
1A87DA2FA52586428602B9DBD87639924A5F841F228A91A912C5C0DC4F6EC3F9
148F2A78166795C8202E4D3CA96DFAE8468E55261DAD9DC400133D57DCBFC0EA
BDEB042035125FD4B6287B38091C67D78A324AF1D92A3EC48662A7BABEA8C3C7
C6D9CB8E6816B3CF6C248A93AB9974D3779A1874DD9004BB24A5B0A8AEA8DEFA
2A7582B332889A3BF37174B68373FBD58B36C5601E925DD7E3973B74F52E157B
E9B017A2B71BABFA5423693F95B763670B84052E916F5039544A6C8515D57D21
69B85BA188CF839428F50C0090C83A2DBAE80992529539BE822A9694E4FCE0FD
C24E8DA275FD4F4A701C9AA7DF85DC6D404D9BBB1090E9EE6E4751F71AA37E09
492872199FA302572EEB110FFD8DC906C03F0281C40EC1BFEB6B1109A9E6EF62
D21B27F5FB1049C3C94D1FDE97DEFCEBFE9E30CAD29DB8E9EE69C25430BF1943
4D7065787374B4B471B927051017DC8AD0B950B6B2D6CFC86493E1CDFD279728
34989BFDAA1FB31A98D0887D850F2AA1B82687CAB2EA7B3A16AC53E93D3F8464
7664A6E244E89F0AD558650EEA39978F1D74956C07E4A3A2FC70EC24B325522F
64B5460605F5D4AF4615C6093D25A41A96447D4A06ED1DBF5A68960CC47014C9
E2F1889D158E1705A33245F7EF0C6E8D0BA0D35E5C6C9E348247EA1B9C9CA909
FC3BA155A1DE7C50634308D2CA63A2C22DD75BDCE3DFEC1DA4C53674092C631D
E215B22EE9C0FA967E7FB3833D17805B28F070BB63950EC9D472E366FF76CEAA
77D659E6179AFBDC82C3CF5AE860F805E3831805C40A0C5CD4D9A5847233C695
DDE09E02983522B8AB809082548F3A29CC183335ACF0540BA936F7574C3C3B96
DA4D5F3D2FD8F9C55E697BCC9D1463B5A84032BDA02CED3870AF4B1E6FE3BC93
D6DEB8816CB61BC60FAE1D03444DADA77311CBC9085AAF00D000ACF7891ABB0F
75E65635CE2D511B177C3B292430B11AAA886FEA3918FA8F74E9E873AA62A2DE
E42F8445CD8B3ECEE7367D33197D106319DEB18F9A7F3B84CC3804E4B67914FF
3A3FECC4F464CD37F4591D3F63B87490338692E1E8CBCD525797317C7F381777
E4EBC7FE7488B910DC7B9F1120555D5ADDC8C06DDF34E806EEFC77DC7583B3DA
4E00943A9A88E0C8C0AC095FB8E798BA91F2C174543650F59A037A54CE0D94C4
67C6E5605602C340616C830CD3D16B73A26C7EC1074F83CD410B347F39FEAFF2
202391F4D428F682C3992BEEF19E8070C57438BCEC02A76A08AB6D73089974E6
3957FE05E7CA830163AB27FD7C001FC1CB3B631D2AFF72CED29A0D35D078CF47
22310D1A51C567103065EC661D783BF125881BD23CEC6E1E912073699D3AA808
B9349A2AADE7CD203CD6139A05C899B59DCBD8C93A075DE01ED3970DE186AB44
3D6FE069727909363325BA78488136AD46C835CE2E3B34F1E063F1BC54D7AA39
0721D24F8878ADE6FAFD0D2BBB9BE708C54FAAE519616F2681D04B09F4079AFD
581C3F8F477747952CCA9B8C609F306B920A6273DF40CA19B78F023B704B9FAD
D1FE48300A6DFBE6AD8D4D2CECED985DB2BD912A014C009449B6284C4373ED49
4313E3F6652E2F4C5B8314ED4A8403B5167C9A135D34A85440D6DD0F833820E5
8D1F7EB17ABC748DD2504CB17DF506B7050685ABB3E2B00586F0EF584652EDF5
198D81755DE0C72567F580998F9E08DF95801F9CF86EF7743B6E3B898D335833
0FC36F6908DE251352DF91051DE70FF75FC4E6DD116C2907365971BB1BE552B7
166BBE87543770E17E5538CA00FD78DB6E47E385ABDD276F2140E3C7247B96E5
3FED60C9021611F769647ABFC84016D55A0DEF4C5AD3916D39EFC15BAE3BC88E
BCD90CF3D97EC8E010B3AD43966DEEB308F76B4311082414110A22900DD9D9C6
21DAA3FF4F4564D288AC166DB9746E2E2AE7C410938C5BC5DCA1C23BF2578572
A1105BE14F807E9993541A3E8D759E39A3B21354871276C33FBD8E3A9B0DC51E
80774857165359BE62425C9A402D9876447D197D259E79B8A5BFB7A119CF9005
ECA3BD7E207A3A407D9D83EDF89D009CF30F486A72E422BA7BC619CD202D4990
777874D1467E2E184506E6C4BD7F439982F46FC6E5D4148A1651E46B86F75FE1
72D9B5FF390CDBE800B60F67191E6BEAF8EDE7CD56602AB41A5AE5E751D7651B
730E6F3508C8C1FE8F3F350FC8ED47A84B487004DD8B32F0AD00FD2399295680
D789E7E8106F11DB5505CB1BED3A1BC2865EFC5983C22F49DCC3F48C9BCFE5B6
7A95000A49C06ADBF45541BD692F27D25F3ACFF0F4F94BF5451752719E39A3B2
1354871276C33FBD8E3A9A555DB39E92DFA740A4A13149C62DDAA7014E9E29D1
456B37551FD0DE95A0F1C4E9BFA4D04C7EBCA4747493BFE69E08C0A5CB8F51F0
3763677F45E7C188DAC79275EFE823C692BF90856AFFA8F6C779460A557DB6EA
ED27A9BBA8B65F93912D9FF23ECBDA863853883DA700191101F636EB9E0A4FAE
7576CE1A3CC7F2ABFA020BB0E75E99962B8E8887C4581E3BF78536EEDB214B64
3A36A441DE2D036C4DCBB7C1462F7B3E5F212D912797A0BC920B84FD06D4A0F1
91993E707C32B6FA53C9ED4DA27A03FFF7F19AFFA9659434B5E3D597F5DD5A84
8B4016CBF7E8B1BD123D8DBC1FD1CFA6DC325414C41B3C5B749DFF450883DECC
A7FF068C88E79ED815305FC1AE6FD4FC37D986A7F024D41FDD14AC7C22E9CBE7
41C7B60C63A6068F6391E1132F5DFE0738C56BD10D185BD129837E6E73FFC9E2
A29CC5D822C902542159CD556302D19B543B81717EC830BBC686A00D25806E51
B3B4E36D332F828AE564EFA4D189AF41A80B93D40859407CDAD60A55252E4EA5
068AF8BAB093D695D7EDE3CFC2AD47AACCB4A8EDD77A93C30BEEBFF2BCAFB8EC
FC1536E9C440F677428F1B7B55205AB0DFC8CAA1B46BCF7A97DA2D98DA493604
037C11199EE74A0D4FE76E8C19304270E151A6367A01584DE9FA0FE557779402
C184A4941811E834D7048BEDDE6F276DAEFFA9CB232D422B636AB6C29F864B0B
956379062972DE5B53438E950E8B340A34FD8794C3975718BD9A0E2ECC71AC13
7FDE41F8E658E88C81FCB18FFAA17A18188961F6EC9AB28D6C2918A53CEA043C
FCA142C91859D995A5D188533168D10ACD02139B72551848051DD7BE711DF831
BC408740F8B64C911E862BC7FC1D4F32E984DBD317F0378BE1218EA6CCB76BBF
8E3FB13902C43F52ADECA5CE3DE6B2E2BE5148B415877BD9CB4220FF67EB26AD
61D376F8D30213780D3F1A1CA42D36D3C1FE6713E3472E8066B36AD6C9F9229F
CBF7E30309DB4BB5FEC2D9EC64C05522B117EB0E79ED92BE024EC02974846598
A7B75209AA4E7BBE2606DBE4E6D7FBC8BF450D19267E378A2BFA831CEF0158AE
8E4FEA94F9302019788FBEBCB629C9661190539DD3565AC9CFE511622D1797A8
99AFC90120FD7ED73DBD6225C2A50C3165E4CB49DA6AEAAE9552A5F39B29BC93
74EF96EEF806A967B12AAFAE42548720820BF263481010031B0608A63C23CAD8
5B086758B4B44E6948AC3433A80437CFAB38D19716EA90C270CE0D9202E191CD
F06A2EBADE2D9A5DE57C398E2A60F519DCA50619B6C98B91EA4D6BC2F863BB5A
36756207E9E07608DB2C617787902E04E193CCD1D0DD6271ED5DF8A788E6E5F6
74F6A81386D5819E08A750B51C6E0C7368C5E7346E03762E6593044441D8ECFE
DB79EF058EABC5D180ADFA854555B2F21BF5AD5D038F166C1A2769E086F4A061
9E955501847A14B627B495165E2F4630E3BE8B2565A93B218D63057EA1FD7E43
DFB4F0D262C4CA3DA17CAA9720DD602EB86573E56B29B99A1B52B4F69E1E1739
488801D3305D2AFC986B09B11A9CFAA6AED96BC89A61E010D6ED3ECE6A5F4A90
C545048016419744D5FFB1DAD29198927373F03424FEA0EBBAF438865A211B6D
46EB445638BABD2ECB23102B682020B706D030B90D1C02456865D2EECBCC9267
F01347D668B2CED9757426DDEC4F95C3ACB0F90B8C5E4C3B13B5A0A44911F452
C33D3D56DD8E82810A67A253307430956CB435FEB71D4657B1720DB4702BF0B7
4B352EA257AD549E9FCC4258DAD2BDC2D8A8AEF1A3564AF26B78226D706C54AA
439391062D0C20AC6358FCB790C62756E961C5E8F634CE58F1F9695B03EE0FB5
E2FB7D72E763394285275A047BFF066D20E1996602023170F9CE94C010BED95F
599D84267E3439DD501A1E6B6B36DC2C54E0B59E99B5BA74A9A5B848E26B0DBB
FF8C194008BAF53095300E36AE450E68874C93B0E848D933805C0DA1E1217EE2
6F993F3F1B40ACFABC78EA484CFEEABE29E490A1335636B9E24DA1C9E334A23C
B89B66F8DEA8101C5EDE08685B28DE4C7BD969396312D75A33BEA31C1C882A55
43139C5350789BC766EDF7CC15F248A70E32EFC3515BFA130F6299D17AB12F8F
49694D2C262FB309A1AE291AD4B3F0CFCF26357EAA3252863D4CB11552E87B26
F5A01E56E0FDA9FE3A6B329705B1D22056E3853B023E7A17F80514A0374DD7CE
C58BA5B7B84A1FAB1DF5B48560932AEC132F4202F71AE44F6DB036C99E217166
1C5A4E4B80F909660C3882B2C4D5832B6EAE8E906775EA79E3AE6AE423112669
BD8B226E0ED1EE461728CBB1EF1D095A185F964493BD5B0BF3720BB2F5A1EF5C
8D31B5140684E19007FF60B0DF076446A077EDF1DFDF77727E359EBBD870CBA2
E411F16FC390C060587EB8DD793AAF4B6838171BE259D57C1FCE9273CF986D90
D82CD9FE8FCD6BE4E1E9EDBF9299169B6BE8D0450B0CBC36D8F60396C0D6A1AF
BAE20A41CFDFA63E7DBFB9FD7B8A95829D4A83FCD7389656F404EB72607F4032
757814F7C8E8431B9DB1E648E5CEED7AECF01FE7E18FA36103693A715EE2E7FF
308F30E52172345482D92233843189208036D4F54FCA0E62FCAB26F387BFC173
0F0590411A9D5C424C231EFBB921C6CA959DF8BADC735477BEDDB1A648E50135
B53413F3939E0CAD25289F39CBE69B6E1FA5B40699573B99E5E25D69BD926802
12AAF84887B2FF26B4E8F2B40518C2ABC59D082ADD7A63E8F78D7FB86588017E
DE8D49634B845B735BFF31C5BFBAFDFE9EF65345BC0791A10B6B0375A2912BD5
616C48789AAE04C5F121F403A5CBDB554D78D7196725229D9F153172B1F54C3B
9AE10377CAA75981B1BC31DCC4E66C15D9A743AD04CC5BB09318F207FD35441A
8B7092D2433D5D7131BDA32E69E152141FEC1546EE896849F7AC4D9E85016955
91062CF88F2A523F0FFA0F6BB8F1704E65385FA674FE1B8515373904D5BC0D68
DDA5617BE4D44E4BDB07A615CF83763CFBC87849275E0396FFBA7A49AAD5611D
477F769753C4011063E8EC37EF916F213758B4F69B017A86B1BDEA78A9A49B5F
DE91B13CEBD9ADEAFEF5B99CB1F8BF9F61154609118BC11A9F9270F838E1589F
0977F1B45AE65CC497565FD53CA28166D511989AEAD47433E584219DE19F1BF8
A5A6F67C4ABADC7A8DA1B20C3D9A86F8E53F91F3D1EF8D7D8F2F70D446318A8C
3F8B830741EB14101F7DA69923CBCDF9AEB93106A4508DDD071B059657F36943
1FA12289CA7CA43CE8FC21DD8F41636B82563165F88DE2306C1B6847098EA755
A5AA661AFE63D240115282DD44C4AB33702AE916782BCEFDC497AE7B23810B99
D5776B1BA91096EB567E27F251D99001012B18AB285EFD3F90EAFBF14759C336
B07A153FBF204AF9505D68C41118480E25F5F15619BACED1C5C7468697373FAF
B40785FC2CB6EB2FDA4F86ADD82388AB391E70C1049B4FC60DA9D89BE0295A90
7EACC844BF36CF62D5CF4316FAE1F31E8F64B0CB1DA5DEA1B5D2659F5B68550F
25DADB5354D02D0706D16FF3729C3F90A1D25B8C7827292EA317CFE675ADB3A9
5B7C9A377F385E1A5D31C8488560328137A8AC69372B42E429C7334776DF98D3
FB810A8AFE023A4EEAE97E690512A92B066F6CBDF00D90BB59F2849F0DE2755E
92370ACBABAFACFF96F67809290FDCC6C3FFF68BE739BAD8E40CD72A931D49E7
3666B8EE7FBA64303726A71E55B5B304387AB3F555A50A3946B1276AFFA5FEEF
018A90BDEAF1F4FC14799D87385A22F3500C97352849CA39702BE9A208B2E2B1
6F7F0530A961B17EE2987E55C3CDF50676BBD97471D2CFF9F85486EAEBE44DB2
9297EF39E8334B86153A83DB20FD7351194A3DC2D92814D027316C0DECE4C06B
88CDF7D2776E5976DEBA1F4755126C6D6B0A8BE66AD50DFB7F491F3E014ADF92
832A232DED66DBB730354A9B01F2CCB705FB3E95E22E8D6CF04D4555C0AE6681
563450666B99811109BD4F09BBFD99E6343752A595DF1A6413520413288F313A
BBE8BDB5A60E8383BE403BCDA3E37332FE53AB50BF03F6FDDDF9D97EF5009D13
7056A86E2CC074F74FF87540043C9175C29823D771252F53DBA2B97032BC0986
5A376B5208AB721BED616392173AA0CA1681AEA988966EEF3CC116D0EDC1A42F
2FAB7C054C2DDB3D08900C3880AF3DA33300E69209C62A8C45D972F466551EF7
719B56ACD7B0F2EAE9318ED139E273C560FAFE96CF1EED083724B53D5B567B82
C824061AFB3FB7596DF24BAA59E4A8EE878A5538EDDC10F5839660D564A819BC
46E6ACC141B04BAB1409AB8345F0A67AB2584540BC0CABA0E0B4FD1F17B0D153
D2062EE548E6A01E393D35B106AF62DF0C98B6EDFFDF1FF73C756E53E8FB0973
C66BBB06EDD7F21FED4A0F5483D46623FF6E729E612B7C80F7691D1866EF3ABF
1A9B0E2037A5D688C58F0D000B4876094389CF9B7E824FC76A1B1CD6C91307A1
575117995C46BE20EE3A444E3DD110FA171508678D200925F5054701A661B487
52F73D9F829FD50D6DD1824D8C5F7A68E928744EF64642F2B8C21672C6E26549
D9430DCB16702379C2C9830439CAE9CC0F2688F92803FFBB1995B46A591E3669
E32B64BF831E658996B1C8FAE24DBC2A7EC214AD99E70B9789D4FDBF542C024A
8E737EE70209BDBD8B443594F541AD50D4C3C85DE7D89D471AD4E79160725757
BB3B481AEE6A2015CD6DD07DF46B679605E1B1E9B9FA4098B137882BE92B691F
7B250C461BE5BB9AA26783454DAF6D26C91457A9043D95AE0EC96B550083EC0A
C1AD32383108A2E73B7471BFA15F876368156982F7F08567C2C93AA5F5690BB8
48543A463EA24EC7AF57A6343A6EC1BF4F4EE8B6C1F00AD409D5AEB39A606F60
AE9E528BA09DF3017DD05BDE022812D4C87C7396202561CF0F5C4FBFBC869F58
8D26E50E6B87250F32D725CB6CB0C4C478335653847DD72738CAD2B7B3D5C82E
0639C125D58EEB89176439762B6BBE3719399BF478FB81064F14207D0345D9E6
7E1A37327B167D31EB83BA8B8DCCFF1AEC8C5C69D1AF01B93D1C0826B0762D80
FF48AF6A07B135FADF259BE125D0895F1FF4E34BFFA5807795C723760F59961E
283F93D554D3CE7605BDEF2F94FA2623DDFB383C967837D88DDA0CB440701EE9
2DE548348E497C3F9978A590ACAD9D79E3575443AD0381CED0956051E951BE6E
1F5D965723A38422BD511F02816E8677DE98C6ECB251802532ABEBAEB30AB299
475E9A5CFC0B291635E3F7701E992F7BD4715B08E772320BB9C959C15BE4F541
793A67DBFD601B248382B7EEC36349F1EFC3E524AA98C00BF5A3EBFEE996977A
789217D57354FEBB8CF2754CD9CD977DADC8ABE37004655162DD093737577CB2
4537D25E061B2938F71D65788EAC1C841379C8B0FDAE14BDB66F1255642CBDF1
15C288147415DF2BF4D55519233C55BF8814A980079E61888879049AC96EE63B
9C16BE8006A56E59B43A48381A4A51A340D88C9AA1390DDEA8FCD84D2AE08935
5E8A8A6B4E66D7333A5CAE1C1B71DD1D943C90B40B5F2051751D600C78C3F8DA
A219AB23FFFBAF7D2072D1DBF52A635381AE3C121C1F805748219CCA9162C615
81A04F1236A0E6233E3A7944B3FDF81CB817BFCA89D7F9116D3B10FC1C1897B9
9E3FDFEA42627C761C65C0A58189AC64119D0F2E2348AB710CEB48050606A30E
CF9ACF4A8232FBF910E93477B4F357DB416A3D5EA1C58653EF911129DA65AE82
015917C0ACFFBE0823C31ED733D42292729C86A07C0088536E068F0F33321EC1
713C2CA56849D085D9826C9F4B984EBE70923047783614E8DAAA2BB05D5B2183
02BE7E66578F42A311EEE76DEA8C0D4400B7CA1DC6D0758A07397CA85B88ECB6
49050EBC5BB1B76A6CADA53F48F2E8EDCEED1B898C5520DC96998CD9B2925283
71BE430C8CF374ABD6521012CE2AB45D8B95A6524EC8B8D655D81865745F6759
B4B18A6EFDBCDBB342019330AAD19E706A19F165F657024FFDEFA2E2854E0F7E
D048CE8DAD666216ADFA72B148B59F64C014DAEB63DAA5041E29C7587B8BE496
62043E111304EF8957C9289F3A2FFFC9E322531837D612231FD7F728DCE07B9F
B8EA156D31CB39F7654E12AA27D8033BC4B204733537D140D932A451F0438B63
A911BE37C09D4C32268518F7D9359A20FD2E4BB71D8513FCF7C0497703A70A5F
0F8B7E4A8A4A909780052CF8347AFED8041799A650D8865DFB9A41ABF3254EF1
5DEEF1898FBB7854286C7369DE251427880454440B7F1700B21C3727172897D6
B929CB7C280BF72DE0E1BDB11F4057CB87DC551CAB74921F39938ACB1DC03CF0
DE5638107E75E9EA52A1E7B0DAF56F9BABDFDE959419393AA30BFD6C1B5A0F0C
F15D70C620AC7C642F2B11215531F05704472CAA1DE4502D799AB649C42E5B85
D8F9BFE78C52FB20CCE1353E692B8A15A22093E425E8E8CF6D0FE725C9A56B76
D2CF2867F684149C0B43DAF907C739E8D25B3363D0A5FA0C0AF2942BF504AFC5
311233BF00A0DAAD08E7FBC0CA0257A6615C845A878A6BC14D1D95B440197AA9
AA5DDFBBAFB030339E370820BCDA1DCD8D930989F478DBF7A31CFC10DDB859F5
B298C5ADE2C50DCB0CA5C7F1BAE0D8EDDA6DDC695FA0984E773CFE1F677F5E25
496FA211198D628D018F9865B790EBAF0BBFC54CBD44AA18A2556A7900D3F049
E2D018ACD02B227DFE977DED3555A3384BD52C6DAC4473B6914B567883977391
8D45DA04C07BBB9E831A42B23497343F3F353E1ECCF93CFB08E86D6256C0FE32
1C992E6339F8CC1D8DAED9D69708C908D63A204568F9F141375A420E240A98DC
E2A0E84D6E53B47373BD581CE72EE00BF90692C89F5931CFD486EC39E9B58C47
DCC68E63C751BCA4278940FD01774BD5B361F3BFE3F01CCB7EF8D646CA786778
22249879DC624AA31F6AE16E036D447691FC2270CCF79FF2B869F56A26B3F7B3
576044F3799CF8E49685A34CA92F65085CB903397D9640957801BAECBB9B6C93
567CBFDA2855180F875B56D2B5AA2FF80B16A81610B62FC0614D3C7B763DCBD5
2CAAF7B9E8EF27B758D64A3A7D8C784A4A69951739609BACB8FD02452811ACCE
E1FF8E42D90B6B5D44A20A26CEED8A6EAD9F54F0965C5F12D735AFAEB6E8B35F
59E38F66A447DBEDCEB0F0C37E797FD184D505F1041E8CC2DA3AC269B0581E71
73FA30408B225DDF52B78F1075D003C447FAC1668C24FE0FA1355926AA6E3783
278583D071D57BA9B3D662C9935FCBB6394C2592C6DAB2CB8C7D224440466245
B43C401A39F44502621BCBA5C34FF7D1566D8C6B5C42B6A96D41F1DBDDF4C904
0924E27D6680A8EFB2883633C70F60E4ECD3F06B659BDEF7628CA078F7248AC9
448364E0352D61986400B43A32B305B59E71781D29C23CF30399D2687A0B2FD9
740F4520BB4D0ACE4DF74E4394CF62B7F29B6AE54DFF3BD4CDDC6A750A98757C
729DAF28F0718CE3948DDBEADD82F4562ABFE7A536B401F0029E0CAC781E01E1
01B9F84E4AFC12CA4D7FAAE5294CC958E1B335C6DCA034DBC01D4D2222EC4977
7BAD5962F684FDE36331C6F1E03DA5932B4A81F2592EC79157C40D32A844F08F
08163120337507C4AB47FC8815A1F35EB60E3EE57F53A33DAB24EC26C82BD988
24BEE2E3711CBBB6D03B0217637C8CB8838BA05F3921100CF307F33F44D23BA1
857E10E5EC15EB92434B3327F2AE3259AC1270330C3AF258E56C0507D603184D
8F7DACC57BB64331831ADADB500649B94C67712B384362BF1BBF31F6DEA452FA
7B27D4C9223D97EFCEAD65729C129923C9C64BC899BD7F0C36F4DF39DDCEDBA1
E046B343AD07FA04C370C24E2B60DAE97ABDE96F07D9E35E6364741C86A70640
4E7190EB9B83B172626FA8DD23917D0DBD99C2222237BAB702E4B2EDBF727BDC
340885968E41C0F12634980BB8E18C59F98F21B816D0C0B0F7AEEA842A2F0321
48B80C04A446CFE30F9E0CA71B480A086B5B5B197793A39E7EF869E841408C96
0FFF40E1738B301E0D781748816D1ED377D22CDB50646D1E3C7C6CE4329D6B5E
D72183AC9D40F16AA0D1DBDAE5285F1345D8F4DE60E5E27B198673F5F2E746B4
F072D6D94ECC1CADFB6C7AEA18D00B33CD497D132129C9B63AA89FC45042F106
F2526A69E43E0B18D7F717CD723A11B48F2054F09510E75E761CF9417B9D33AE
C35F58EFD70EB657CC2BBBDBE1FB965E855C9E6DA37AA664B87A61E68AE8C9DD
262E726669C8F939AB90F962AC1F6F0B10C264AE372C53C3CEC93A33305F563E
C2DBE254C184D0DD8655F61354DBDFC049A824D7AD74857AC5DF9E7B8ACCF7E4
25199AA7F7894A5DCD6BA8599275E5859FC87BCC2D62D19BE6559D27D0ED6E53
20DBE1551AE105EB3C365919105255E364C25EBF1D0670B40141A4C773341BA8
C7CD2FA5195928445C2851D799015A72CCC3B7FC1E807AF657F6181777257BA5
E571C385D7DBE97CF705D693BA2A36FE4C371B101384696DDFC74B191026E078
467C0D98BAE437D821574B9DBFA55727303A7E64434F4A6AC4FFEF4A8E84BF74
8187C5E870782E4E9246A2438CFEFBBCBDDBAD2EF88AD8E2EB20B009C88B5304
4A1F34EF5BFB7110D2B0F960BB00E665C56A5CBEC7ABEBA5506E2646FB087EA8
6F7A1B39D3589C31CA16BD671EEE2F21EB3BEE5AF247CCB9649BAF5CB16FFE71
CD7FD90C6D8FF8C284963558E422FBD027C9C70932C937EF360E1F9ABF1CEE3C
9989E0D029DE36B1F463118AE664D624660534DD8755E0A61ED5A5FFA07410CB
5DD0F08450FE7B61E4DED94B5DC6EE2B5D0CA61A0C5446B934C2195417FCF300
581291E9CAB043379B438F9C079AB7429805628D4B459EB70ACDBD7E6FB8A58E
EE35AC56F71281CA7A9663712B46531F45828EC018BD5A044735213F655A1A10
36E6CA98D4C67F05AC2E0C252188AB1FA539A890A3644E2336014CC3F62B3092
34B7825D388FC7D0BED3A05E7E7D6EFFB1D8C2E123584D6DD7302536A133DF02
ED8266A9658E957DFE13CCC0DFD107B5D2050B041C955B4B1B5ED91FECD98E5B
415FB026CB0B619499483CE193AFEF272C4BBB33B825B53D8A5023C4A51B96E3
746A7AC706E16E6F15FC38D772D92EEEFB492BB9C0BD8628E50326779F15165B
FABC706FB24058EB2F03AE23BF16F07E19662C0E99DBAE2DB37185B3B41E0A11
945AF8F4B0A81B7D1774B6E372CD4FDB0D30135BB2082A2DD4A73A851D3BA632
CBFF9F80BD48E7DE7116C376DC5D9B3EC22AA28797AA11A4C1AEE1166D80C453
0D528141C35336F2EA512DD37E5A7CB36A55DAE42513382D600CD6BD91CF66E6
844A4B8EF6C5B76FF44E6550F3717DB1EE44131332A45E3FA528FD579EA92CF5
FFA19F5B5AFAAF06C22E71E68F22DE13C97A181E9F8B42EA3EEBFE12EC3CB42E
24A87A6C6E82DBDA18B77BBF8FFA477C3F5CD01C9E121D8C14BF890AAB254039
68E3B21A383464BEE924346E0F2652A0BE40497DEE4839106CA1BF2F89D5B2B6
DC6714F68FCF60CE999D26C1AC0CF2C5EA9634D22E3031E8494E46D740BE932F
77B5909999DE3C05BADC2E729B6BE1AA5FFF51F2AFACB9CF3ABEAC7342DCD7C0
48D5CDB0391F725AF5201AA3F0C7C4A36DB35AD95CBFBBFCD7B16D2ED5EABFE3
500709D5007682E653526BF42B710A052E61D71BD2774EF8EA815B768EDDFAFF
D342081A987376B0C63C50F163A781B6BDA60D44649F14435E06CA8F6B1F5B79
9673F2D29BDAD7892AC0CBB3F42224FAA3F94B5469D3F045D59B14F7E69C60E5
A9B8E7690D4E80C54CA7372F36DAD1CA2262F9AD6A50B59CB3D1891D4BF21018
9C24EB83126AB8DD4E0085928AEF0E761BD90393564A76F32A85473A551EE674
C7D5A65BB414A1C4BAD0F76F7C724756DDB035D82C3ACECFE608A6A4C9ED07A0
80F1DCA7439940E7C0E4137267A08CC0CA38CB18FD6D95F7C015601924D98140
479F08C5E31EA45466D4C445E6042860D09379132757237AFF12BE4BA5DFA313
939ECFDEFFC78791E9480E460753304F0AFABB270EF2E5301E506E048BE9CDCB
B9E78B65992D8498A7BB6D8BE3398B073E734A3CD218421C0C413B95FE911527
27434A12B71CB3663301B65428FFD19BDA361A479C3D0D2D4F6F4F7462946F82
613E31AAF56A4D1C5ACEF5307C5DF7489BF338369B55F0476A369B7E086BA03B
DA148848E7A30415A4FCCFF4BD01D01D237EDFCA31AD173727C8EB4C201EFE19
50CD152807559495A2CB63B44EB5E158432FDECB0F458D1861794E0B4F6F010D
A13C4E4D389F154209363390C2D65DC54C2B5673A50FBA9943AAD338B870E317
73733F8784C3A43947031DBAB85016DB8F5DADD02BF6CCE0E72277094AD22908
98BEF7F2795A78CAFAAA968A6DF81D0D982EF377E72C2BF816B6461BA053F292
D97E9C89877B8A6F0D6C82F9221647D0793D3A6233DED7AEF7A988556AC4DD9B
FE7805A265CDDD2A8D913B5EB58A913C63F9D390AD7A0B1036DBB603D10442F1
15696BFDB611F3239F90EA7392B57CE0CAE33312A30117A17DA94F04B26C73E0
E8C58F673133D96C14D65A1194EFD5C5FD820AFB51ED5F10A466D7C8E47BF6D1
47E12DBEDF5A424450070D5078252284A88B63E3DAE4FE28E7EFB882258A9CC3
43B3E0D3414FEEC1A1C6439C43EB3E175DE11CD83EA69B64FAAD4D15289D849F
706ED53912FEDA1A58A270BD753C6688801421EA49806DD49D8158229B6D4C83
7D5EF695038FC22E47244A7864E17CFC0AA19EC6FDF9DC6D20425F3FEB02F65C
CE3AF0BFF04F3E964019700ECB7099D90BE2702116B2463AADA28A46A04C9296
9380145800C976D2A3A8E56665DB633016C1D6B2B9FE8F456FD5CF9376CBBBBF
C87662977B884F12F6FC2E78C152E3E798DF27B37B9D02EE5E560796EFBCFEB2
F9FB4865D9EA3BEB6F280FAEE81E3D4CB2629AC63191AFE0A4B85C6C000AFE49
267FB70BCBDD97CFFE17824F0C5D71DE00A49E9BD49518FAE82DD2B677838A18
3AB283AC9DA72BDE292E2F1E5778527899287549ACE8F5605F449828A75AE79B
0D066B3E9DB10B4425B1B4D1E03F19BE0CB4EB45170888A567A162BA09EDA6EF
27A005ACCA1D0B8C1A81C8A3C8DDD4F6D3C2D5BAA8FD6D383A62BE87A095E794
05B055858BF893BF6E3E2E0256B17611008F628C5416A2C7BABB7E0FEAFCF84F
A2017267F1CC8967090643E80C66604C90764344C41F84BF8F92024D0DEF3EBD
21308E4FDC94FA7D2A30E05D5956DF0891670231CF07554055ACA64FD892FAC4
544D123BE09D97B960A8D1B11D79D6E5A59C0E2290982EBC47E28D93F2914E99
A03055EB3550779BAA749D3BAD7247827B2904051D5F2BA00BB2F2B6DC320FCE
F632483EB56A588B236374AD029B75EC345B7C1B28BC89140D5BA3D4A9D0D490
4614C950B685E88B1DCF9935357CC1B9F3A1B4D0B37ABF610BBABDF3A66618B4
53EF470C87B622C226617275BCF551C73B6A4E653351958B98D42DF8F059E359
5C09E8A2682AFC7F3B3F907169A4DDABC210C6B484E82925F86C89B072CA60CA
E73378798D5D5B9E57B69FFDC7EEF82A715321F92AFA3EF846E257BE2A109979
3CCECF2D40DA6C06D65976E4E0616DDB0255DD72CAC426DC2E3AEC77F361063A
8545EB52EB0AD3E71E878DEBB6D1DD539D23FD434F07F97E97D21A86534191AA
E311231099FBDC8D74ED198A41E8DE98CB168C06F6A106C2E37E24C5FA3267E7
57AF2E20D576840A2EDEC938EF310FD2FA37A31D9A0E4C7BE20C42C69506DDD4
0BCDAF118755CF3A76DE176F1045E688F3EFBEB2311F218D7C3ABF188200709F
7DDC79A34EBD204652FF01BD13C858EB7D3CD84F39A047AA76E60948D29FE648
06F06113379F6F0A64F414FB38B52D86AD599884428789FA5513BFE54565DD8B
7E4E96CEE81509FF448D46A54D3D7CE71E45E90773F94CDF7FCFB5E921A4C039
CDBBE43103C5ECB090989A137681BF91A7BF81061F491C46879BB76FF60896ED
F48928061133518E2EDFFA197F689D316D32602EB099E34EFDD3079E332909D9
322F244C14E4597F55E914BE1B6042C55FFE963F77A6E4EDF3F1D71282B0581B
E59CE2C4F0655A69362FADE5B364
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1000
%!FontType1-1.0: SFRM1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1000, tcrm1000, larm1000, lbrm1000, lcrm1000, rxrm1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-189 -321 1456 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462AE6E5
19E5878939A488F2FE1094A76925CD24DAD4573AD3CF34E426708CF06E7EBFFC
BEF5595408106E2189F418D17AD510ED5B6A528E8902AA3A5F0FF52AE3DEAB07
32F06B63E28BB88229E046F4FF8A356BBDDE82DF2A197F2E26CA00D5594725A1
83A89A36487EAAE1AC312C929CDCE50722FA6C596C261E4D78D6C6ABF77F5CCE
0E410ED74287A0F201140F8D9674A7AC585D3CBC72CCB824F9E1CEBD08AEDB3A
A4015CADF471F7ABD9B0F0AF73A8274FD441BC1988A61799856E4770155341D6
516CD0E25BFA59B67AB7E0571DF3F5BA70AB52137D9E6A79EFADBE70CA05AC8D
991D0895C8FFC747FBC0E9A7212BAE6560B9E2B64FFCC58112E64A3B4CF7ECF7
595F51C34AD1342F5678FE1E62EC5A389CF04E82B5F832914B91F921F30A7E32
CA3919F57A2D9DE844CAAAC0DC751C255C9916595E8C9532E7A0A84A0AEFCACD
83EDE059FD06EEE9951473180B517F25F609F347DBA012AE9F004DC3C771777B
BE812787C3C50315D67254A384EB65F260943C6E16B2CDC64E15EEEDC67C5544
8ADE9981A6867405E46222CACCEF79F9DC8674268BBBE1EFEC2187A75FB7FBF8
CB2DB2134848DEA2F9CED443DCF561E7272B38F830871B2A5196A787924EF556
4B7E9093ADD414ACBC10147944D216D351CC744DBC13B0749FD0A129D7C47983
7FEC7FDDECB3FF4166FE295814B8EF751B79196DF6FB2F28CA8CB00807F682E5
1F37B8DBFA6963E77ACF4A16586D58C87B0F882FD7BAD0A5173202958267F567
6D66D0511364EB31556C37BA1973151C35046863FB4F3F5E6434479279EE110A
575DAF0531EC6A4D83FAAAA64995A7B97207724374CF283D0FEE36BBF7582F5B
CED7CEB37EBAFD8206E691F7D0D17C63527AFB2AC537B47C402716FD6C23FE57
22BC8B95E994FF0C6A6469AFD70C020C711DA6F19D4C46B9DBCA6769B6FF2733
21E813E7E86FDD3101BAB642B1553FA2642DFCDE99A053213ED3C70CBDBBF19F
C743F1F168B5A21E570C8DF7C108FEEEE50C825EF2714E974749A7317D535316
2D369F1673DFEFFFA71E41E520792075672344DCEE4F9F1687F0FBBDFC25FBDA
0D8A6A1C3DAD8BDEEE8161AFD70C020C711DA6F19D4C46B9DBCA6F9D79D26E79
9F1D26CDA56B940E651D0D4D017BD65B3ED72939301FFDBAAEC98AC821AFAD33
5BEFBC695F2746A01CF510E684C7D589F29C9B5E0BB1C42C9A96843918976FB4
22225AFE3A3F92B85B2D1EAA81D0F1D4BF85B1FBE305A01C6207D95271423B66
11D3879FD381D567701AF1B0B0749E05027D5493A806A353E3265170C00076E4
86ADADA8AF511EC5FE32E5834EE0CA7341F16665D0EC4DDE1F80C894D3049706
CB5FF8EC37092ED0A93D27A2EE85982E48AAB7AFA36EBB74CE59EEBC8CDC41B5
A08A3098954BBC19648F65AD5241827219F9BF72D4813A30646A85A3E9C558E1
31B17DD5EBE155667B73C135EDF4295FA4DA7A1C9895AA3F6C1F61BD658159C8
88E89E3E48BFA5BE91BD3DC050837B89D74F7872C976386C425054BCA530CF6C
7A33BCABA8689139753CED4E4AD623924858E2D38A7D4BDE1BC5D5EB4F85BE37
AC869A6CFC87E1FCA5CD9D3B850D16B50260C9C30CFA7DD1FF25580BDDDF4106
F5E5BE85533BE7D472D65C01DD80A54683E962767BDEF178B162417A7B7522EC
6B606CF186D582DD972C54BCA767918EC9225192DCF9AF7F4409C06926511480
479F0307DD5A7B8E16D3FA14AE4D7C9AAF0789516E44D9E4187A63CE0397C28F
3414FA7B2C2D61BFCA9492B32DDE38885072B38149BEC1A5CCE0C84A4963D11F
2E56709565C8818A538DA896944A83934003AE6EC6CD98A11CF309661E2BC60C
143604AF24AFFC6126699DF619A02E659CA508BFB7697284F9D1B44FFCD31970
F8CAD34EEB68EA6DB154204ED9DCE3E7E23FB72C2692041C4FF3728CD309F215
414595B073EB8B80508C2EDC1C4DF8C38E89CE919F2A837D1397202EB314ABD4
09CFD87B215EF9299486B7EE9D4CBEF1D42B2D5DF35592C3A28ACB384F4F0C01
CAC17DC73091C42F7AC741CDFE7268453DA56BF31816E435F38EB8C23C5093A6
162863EE9B7A881D2F2352217CB6BA4B3F58880A43FD7A9F5D3E2CB24D42FE33
605E3C8345BCAE8E072279A50EBA843179D2A95808D1CE24CF78652958EB8A30
ADAC715CF070A47C44BAD93D952A6763841D6D5207A8BDB9FF4385997C0EA83D
3AD039FE0720013D660C4BDFC2FCA9D28A6742AF910205C9B62146E86F913D6A
CD406A2E9041682E2C5192F197090EE5235882FFF6C169C9A3E1E6D2F4739971
EDA2684391831CC4E37F45277B62E03769C06DB70A2626B6321ED398C79220B7
B304F5F744EAF5DB260B14B3D5859FBE06922B232B0AC83BFAF49AA95B7C0C0D
3060AF32B145FE7CDB50F0C24D0AF11A161E21A6AB4CAA2CEDB52F9EC740EB57
78E39C741CC32E2D7F209C93817387E1008E89241DEF3224534DFA43673A0E41
90244B84241A7F524982C47DF34CB09E310FD1644CE582EB7FBDC53D90EDC6C9
D0C2AD47B679838CD6DEC2BF89521C1664A09F906D7D4347562C404D0FE57EEF
2870E0A797E0EFBF9FC06108C2D3CA63159A0300C7F03BDC40678E627A5EBA53
AF2DD411BE8E42D4B10E9085C6F770F2704FEDA818B81260A3A1AA4B2AC1083E
33A7800BBDCBDABC57592D173D97119C98ED76194C28DF9541BF4E95E51909FA
21A965428B0FC127B39D9A2488319CABD93BC84CF44FD1B87D580EC68142CFAB
9D75C4F6D6A73FB4C07FA71626373BC973423EA18C82839F55A8A6A0FEF2F923
41A948A8F8DD351882D0FD4A250382DCDB836B55F212F19C2A5C008E3C422AD6
A6011E641B73BD918AB2A143C4142FACF80F1249C3D953D33B6C8CD92A37EB6E
ABD8263983CDBA107F2C8E7A85BA09D427BC7A24441BAEA7F51AB95C11C210BD
B0C8F7D62D2446A2E1F94FC48004C54E1E8D67C8B7DEB084189882A704535916
0B418A2D69ACEF23B5105A0BE7A6FC13C4EEF6006E9D65A26EEB2A08F0000765
FEC6495BAF331EDB36BE642BF599F6719EAC28B40CFB665266BCDFB732F62E14
674EAB94BA871B3E1C03958AA2325E538C9D8D83343E885A9D61BC16E9E38A5A
389180BC218B420A01223748B495A817F99137847A2850BBB111DB5FB5C98BDE
B59F3EFECDEB0D9F00DD71FD26820F3962CAE33276313F87B7DEE1B057C7665B
046A438552C571ADC7C21185EDDFF259C641D160F82C924D3BAE8E7824DDD6BA
02ED8D5E381B0E3ED8525202C1BF505647491E885469725CF356762F0172AF79
F5AEDC98B4111935FAAF7A7DB810D73886997C0EA83D3AD039FE0720013D660B
9477C2C378C1B0A69949A1E14670B7441320FAB899D00348905F3C7CFDC07151
723D41908FC36867A627AC5B6E78F30F09707B9860592C55DC1AAE337DAE8983
15CEE46CCA41707B896D94D9351324E055FEC45769987F068E26B803BC80844C
9EF91A6AFFB8A1019F59C5DACD729608CE8AAF3A48C72C73E78898EAD58C01DF
56EB0E8BC41368F966B704A73CEB72AFD5A3521085B1D5104E767D6E85CF93CF
3937BE25DE46DA396794D9C59AE74D7304D4C2AA941B61D7224240AEC228EB60
50289B099CBFE4DF60BA3216B76950B7E54047266A750FAECED19F8E92B45121
CBA7D378A7B1AAF5F56C7B80ECA9A21F74718AD1FD1859110612CAC388A0C002
7D570B96192C79628BAAE81FB022368600EB75728D604133A44AC91D982CED26
A2E91A6CF66BA5BE3059A076D567F556BF49627D5AE82435113B8D0A9FF47753
1712CDFC6A77AEF465A629F42B02F1C5A129EEDDE9A99B48F5D366082E77405C
B38C7A634DAA07FFA25533CBA45BDEB49D8141816C367ED5831E10281F4DF8FF
006813C8DA871A41C0ACE77BAB719AC79C7E01C8A046181A95386257A69DAF91
917BC0E9B8214992F7AA291A9B95CE14D6AEF6AA4912E8C6290A81C6124C9E3B
3C13A8F4DCA4FCB3B2F24927FD16E57FBD50608A8314368A21E37A31DFDEDC4C
DD45FCBECA16FA5184618E121AC376FA2705C88486C25417C0C81D5A73E52C2C
F1E21A6C94D80957B6F034B4D7243607717EC0E9DB507F1DC32DA7C5CB636C5E
1D017AEAA5EFEA931D89AAE980962317F67595E24FD86E7D564F11A839EC8E5B
8120C7C84E027D50253EC67BFE723E90E176A345586FE53A6685C17437F7B1EB
1FD9E60D37C07684498D9CABA9386D3C81B051C44584AD5A91E195A828CC2CED
6271CCFE028FBFE326935DDC68DE7C1F36A1E693DE59D0541DFAF0AEB6AE1EE6
D08F1E6042DBCDBD1880ECEBA3A6F9965049ACFDF6993996A13A9E0529E345BE
7A44A59B6623F07A3502DD4F60988C29BC96128F689842FE797BA7EE433E7586
DD8500125FE9274A91C1BA17B808701E97DD2F6109643A183DDFFFC28DAEBA43
7B2273D5C097FE972352DE294B83460AA67E843536D98526EFFB7971E9A56678
5CD0403F2CBC985B2DB620CB5E8460B4CD7BDC0EE640F4FEF68B2EB610E5B65F
1B747A93DDF43CEAE998733591F7977C9EA9051E103920420120F10414695EED
42E02CEA52564490D314904FD015B61951C20243DE83A0B74D64F4580971E8F4
2EBED743611100072E13D0FB989ADBE830F455B26684F68B88C471A20CE2D9B4
F1FEA56902F01DBAFA06D8336A7F8C638598DA8F2F8CEA8F237A4B642F747936
BB11E21AB5B13A4DEAA6259C8E1654D1C2DA5E6D5FF70F0BF5813FCF76503D0C
78CE7119296670EEA02CD22E6BAD20BABA944ECF415024E914B8D25843DEBB31
77037AF0B0020ACB81E231E7B988679E859B18B0809E416B170067B51D063FE6
C6D3148452A0AACDF40EF7C7866BAA8C2D8B87C6F187B9386267A4A66901948D
B13F9287B4CF48B7B043325340E340AB4B4503A8E9C2F845BEADFF151E1B6BFB
CF6B62D6CBF50617E019030AC0D98A422438DC4AFED3B30D07D4961B80E8CD32
0B25BC09DCEB84DA9FD024FC4C3A5E78C13FCFF6B29E32CD314A0CB19068AEF9
BE96DA47CE4B68E345A8ABBAF0A9AE768535EC2DD30B9899A552FA4CBAA94D44
FFDA86DD1AA3B98EBAF41AD490512F330DCD272B15F19F8A0469B071F028E601
051F0857C29192867A1094C9A7607AB9B9BB8106A4DAE9485490060EB0651F60
6E678DF2FF576BE5C494D3BA1A85FAA3668E52F131331AFDA08CC184B66BB482
910546E781C7210AB441A416BFD4E9316C509E22D20FD8C11DDA7761B1A0D574
29D6ADDC9BB1C1156CBCDAE0DFD3D287387AC102F97CC8D362AB9D91A7ABCDF1
6EE4705ED92A4AE54C9CBC34921FD978D547A92297D8B4DFAADCD9247310B945
8B6B7A12B47A6392ACFE0BBD623C99C74E1A0AB3D7BEFF3B4F88DEF4E3C63B03
7CDFA5ADB906B42130D480C76F82AF2F157AF42FDB1FE98DCB81320DF07DEA87
EFC6AAE69F73561A8830A5AC9B7E7C18D5BBFEA8CA8375AB7DA7B7FF2FA9C2EB
77D6CEB6F20266F113A068458CCF339D3CC4882932BDEA2B646DBBF5A0001216
B9074EC84251A2EBF37123A6C22CA7331E027FD6D3FD81D4A95C25C8FC1C5403
ADD0349A827E17794C0AB1BBD8EBB0F647ACD2FCEE4B184E4148C46F02C06AB3
23D6080B1F514A65600DBB29116D937B4066DFAB2363C70E2C3171D757DE1531
886F75567E77A8B604F45E03015795FA961174504C0C3E3F02BDB58C471BA96C
C445D7172A15F4335BF3A891FBAA225FD64BFAE67C44795D506C1AE6D2042F57
F548D73EFB29A3C9FAD06D5CB96D262282A4898258C8A8AC53C3E9B70C329BCD
9CA5DF2F8CD8B2C8E3514C568E5D1DC854B10AEB7EAB2007E231575527B179B9
C6ADE75298D261EB80BD4D7AC036C0571DCC990C60FBA08F67D636C12BAF01F1
04EE85705F8015B05CBFA80D815DCA5268A109DDE6B2B61F652CCDADA2F3E1A2
EE1F6FCC07D3ABA2CF401E5D8236A67019DF1E665F6CB1CE9830EA7A9C8E91DB
797F21FAD8EB29845025DE74A798537B1805286596FDE8EB0520FFFABB84BCED
B7E130A8E5DC232593EDF90D8C4E366D19BEA298227AFA967F73BC5D6D0A0093
DB026834F3E9BFFF09F9077349C96608AEEB39FF1D17405A3620270BF01EDE1A
3290EC4CBE0D21D5F5147BE27BFA25D69BCDD3AAA5968A3ECB23D1B03FFDC39D
A3D7071D8E5134A27E8A5A106D86E395ADE502AD664E936D20D0D9A44241610D
53AE6A1B077AA725FBFF87CD4F8B0D9C63DAFFFF856B80B3279DF1E4EB1D9131
5F66AA868C28507D97C848C3D061C82E64F559D6AD28E3484C836E5DF9E7510B
788EC33640801154F287A6FBD95A9C0863EFC3F5AC56F4B051A30B2620337030
06141477E9C16131CF7065F11D04A436EA550775D30B3C92679831A59C0FF5B0
FDD7C26FFEE88874284F72237C1378CF993A73530B77F5FA31B09CE366E03D5D
8E5CF69B1086B58AC76FEBEF8656C4567603A80BAFFF3A40A7241CFF20023155
6BD4E11826EC6D1BF0D3D7F69020B67A6F96D92300731D8BD5AA40B952450083
32E6B0AEEFA3A47CE46057E6E943CE6E928C947F30FBEC1FEA5FD19A0C29A2AA
4A73021655CA4F7C008105C677BAF1DF07C5ABAF234464259D07A0353A00C669
65A64782EA5F9C5DAF9B06D6CD9628C061F491A3E6DECED65A8BB16DA3E011FA
2B757F02EF6276EE55452AC5CC89E9EF45E215528ADEA1C1D320D60CC05C2478
175BF6B5FD497380A0E5647F8B1C906E0B331D256FF9653BCEB7AACFBF26C745
5590FDA7D9F63ECE5EA6C3AD4AD35C0F7A8403B2CB2AB40AE9F9B354D77F0EB8
7DD9A66422C5E472D5998FCA837F3D2C9590222DE1EBDC0011A247582DF33C00
9DA12ADCE4F6CAD515667BC689CB2CBAE3CCE56623CAE0EF9833304CB4345C80
692F535DAA3639B351C8EF330672C9584275E0EDCD8F47DDDB8C1FD5D6A3AA49
17F2669259B2A280439AF75932BBF6A5C4C134717FA338B17B31C12ECE071CB2
5103C6431D29D37B16D2C09E9887BB264607F6FEDC37BB1658FE1B44856CCB3A
973749981546A33828A5FEB5EABEC1B223A217A89F4D2BF10C0FA85DBCCC3809
0EB4A33A4BBBB1A93EEFD889146AC58C446DDF27B3E316B429412FEA42D1A4B1
A09526F8CE866E938834BEFE5FB8046BA34E3CBCA440F97FA94CC6D3197F3679
4D1FC124EA55DBD95553AFEB4DD1EA87BD5B92A62CE6BCF095DA482A4E9D8A29
D87BF206717E2741A0D8264EAA3B6AFC37CEECDE1DFC1F2E553657A2E0B1EF03
7264648B0F43152CDF4BFAEB5FCF00781B5FAA2FA8E3635ADC47BE51F911D017
A3281366B48A340B10042281C8F813550F0F3D47BF0AC5BA7C001F0BB0F9428E
7A631D0701B547001CD83C6BC0FC1D8AD4E0F00272558FB99667260B59F58DDC
2B0BD7BA4BB366357C82CFED2502C765BC46825B83A4B2C25A56E4B7681BD2A4
E6874D9A0C4A787D4E5F23D613AEECFBA6A7980C1BFE78F9DC3CCDCFDF8188CF
E371D039DAEF18C95D4CF4222DCC74CB3A6E4C5685DB2251E2242AF69974F34E
89B3F38AC482D14B95D58B77E7341B468E3F2B7FA84382621BB37D4EDA44CA0B
2C3E1DD1EE062269116C6E01175DE56D632523256C3BE70671B809D61FAED0A5
206F65681738FF1B851166F4DF9137EEF043C756A238277F9472D2A12C9D36F7
CCA0ADBB4D53C5BC75EB8AED72C2AF3F39B9F44A9DE53E47A50F42F8958111AB
11B0B27C292C8F30EC9F6E15A51818AC249383118C278A8DE53E7EA7B0B8BFCD
F9657C416A2FBC84FDECDC847B434E3BD2F8E8F5AC4B5F5EB63C17C626231A1B
2E1E395397EBBD4F8CCE98A000C062534DA410FAF48DAC9A6433E2C4E3EC1769
D80438009C4FFF5F0DC1E6A6FCC1F86F866B65F7F5EEA0D7AB63666F6E32F835
D67CCD4017C1543424039884610387409275A0EE7AC30B5D1002FB770916FBAB
E6DB236656E7B7FBA305BD8D2C6FF35AD4346943088507A8A50F4CCDC4E77655
7BAF5B308C498E5A68F3BC6BF940B24672F73A962F7988F546AE0DE9355659B9
9A67465C76E398A6EC0E5A472873FDA5992304E476CFCC76530355A9967A3E41
0BBF112BA75D4C1AD7515A1E3344EC2F9B354A48713B4925F38314A14062CF96
26F9EAD2550500011CD82B10C375592CB3356EAB836DAC480530336869B857FA
E577672626C76849D33003218854099E8644F3A08895BD34E3379C25D850F23B
66DDC572293E83CBACCA1A53495CE8EFF17A96CB95D27EFFAF39D956819CCD09
9E8DD69DC0403BD37EB059FE2AE18365927C7FADCC056E26B4D5C3AABC8C11CF
4D87C860A3635EDBFDD193B96FA9E7D40CB1C079B96F912A277D0BEB70C6EF43
B18272431F91B8EA9CE43CB1670DE71886BC18D419F24E7D6F53BC1E9C2BFCC7
ED2059053B7D4B10EFC8394EE8F0C8504B9086609FFC1EEC83BB56758436A609
3935C9AD1C2E83DBD6AD1C9F12099295F38491BC635E44F7CB7EC76E8B58BEE2
F51A1DD46538014F4E29FC598B067D9CF30192E7C0F1EDC27081CD501BA1AD37
66D04EB39EB6C52390496B640B1244D999AC949E515B300F156D1A14AE72C74F
9B4BF3C91FE6579E0A1DD15488F06C37E30E4EEB5B98BAD14E541FDA2C07067A
EB2663C41EEDFEC6FC09870C49D2C38C2EF13FE433B4092AB670DB9751BD76A9
0E2921654FF33BE61CA7707EDED071F9A927A37B983EBBDAFA4539A6438E26C0
4AEA61040620E3E51D38EF3BF5F985261416AD75C33C505CA64CE82103B2AF2E
61D4892C4CEB30144C53A101612F5C8410F9F4C326FE9326601497BD9F11E44E
749A04D3F386BE4E5543CB63168663D3532265F8D32B32D8402DCE5E45107FF3
133C6D422A78397813293BF2CD6170CC06EFFED9F2798B38A3426CD06ECE3618
2D11B348C8E10FB7F038ABC86DD5B9375E52A6DBDE1F6DDF4B050D7D980FA3EA
AF7EADF9B21AA9AC2C8543171FD23BEC72B3D43F94776F81B7695ED5173C9516
97615CD53EC343C11E620083C4817CD43B1EDB179560C9DF5FE0E46EF57859EC
4E3E307C1B73D92B41C75C58B361137C2A878E540A07D9E50E9DE7F1ADBFC59F
D990DB60A1B058BAA30A21C0FAAC8D0AAA25EBCB2F369E32C7E50A4654EDEB9C
D8676CF7767305CACA53903867AB415CB6C31B4220CA2E449BC2817B1F5B4DE5
8E13A781D1686ADBDDE1179E698423B4F1BA7B0F9544961946233BFB65EE9BA2
7729591D18B0B2B0E8E8AD6232AE20D6FBE55A84931A1C0987F4BAD842922794
D6B6F9B7CEFC63F3445F4839496F01F7775296858226450A01D02E986189012F
5925C5DC14AF3391B68DEE20F853903F755911A900FED6EDE2CB5661475E1A12
F46B920ED4CA54870BC339A9D5870507907507ED492B8DC2BAD472111D891F9C
96DA5F664F415612B53614ABD1934F59AA847FE7FDA469611D9D4D5B8906DA9E
BA966096FABBC8C8E5F626CA8E92EB02FBABAA43DC0AA11970D6FFB3B06D217C
5CAEB9219C006F378B712A5BE446EE0BA4D912E005E4823F9EA8E3A8294D816A
B0B3D12FBF3ACFC1F41B7707ECA0EA73E1EA898426DAC13E567426DB04D9E02E
D93D0844463C507F386ACAA06BA208FEB6872FD400EBBC519A78856099209B9C
E5CAABAAD46A94D8933F3CD369E7EF9F367C1932A115DEADBFC3CDD927EF1D8E
8617C8947F40B2A55E645B6137D19F592610F9D20F5FA45FB77790DDF5573EF7
6D0F789274C1929A4A45A6E9B5372BFA5DCB4B9E953E0AA31E63F198FC6F7417
DBA9B3CF6D6F6131FC0A0E1B4FB45EB8EA17F788A777287092B6AD298A509861
F86B9163FEB5A98EFFB04E46A03F6CD5394FA5508EC4D6FFD0C03FE62CBC99C0
E02D1CC26702E68F7906991C23ACF37034D1BF7A440F870DA4B075138C18CA39
161E36F0735DBB56FE1FC81235CA6DDBF5E34AE3F67B171A47F0C4080D625CCC
98CBE4F4D4A3371A4C2F744079F0AAFD013E430C636119506F3AB94FDAA26C1D
4771844C6D0585F8CB68083E1E18979CFE485F23D613AEECFBA6A7980C1BFE78
F822477F106949069FDDD2D4AB5067D5EE8F06D4E85F8EAAE39370170825BD60
7CF65D9604F020FE8FD77D8301513C9BF8DF913B729D16C30762DA6AB4EB29DF
38C5B53DDE24E644293E38DF4814A42ED7E77758279A36A14514BD26F04034A5
B44A88180F813753B419289DE843C7654B788E361A0BC8BD0437CA7F9663DFE2
8514B46CCA0E57EB2299A80DA0D7952034AF483D4D158BE14FCCFDE6084B9F14
026F0646FB715E15A5B244B294B5D9B2843FEAD8C96C849CB08A5A7FBE648A8D
2F3ABE22A9A257955E74F8AB2426134C9C56E6C9F6A83C65526780FE1F4A15EE
ED515622A8EF02A7D10E4716AF17BB14422C329AE0BA43FFC16F6966C8D2EC37
F4B025E2709855D074E7F2E2A650C0C690BC84861BE3814E078B46A749DA34F0
41096799CD79D72A07B5644720D90FACD7EC6004955165076E6C2878A8F4AF5E
70B13F6F6CA317C1A7351FD1354E639B90933AAA733CC8ECE6D689B0A17D762E
A2F59551E03B0A15277EE0BB74FF33C226971884A2540043B1C4EE64CEDC5831
7A06216AAA4DD8371686AFFEE819C2641A92C837400FA677D32B6563608ED2BD
59215EB8B756F102BB9B5651A8B4AEEED926F889FE9C667072530AF552EB6B87
7B917917FE823AA0D0E221A075F130F1F1D2030110741A5DECEC84D260AA0BA7
37E27EFD948F6540A930BFE08EC57CE103EB4698A8F484DBBB7C57171F5C72D1
A178EC12E8AA489CE6B0ED6BBEABD452F927C2308C96B3EDF7AC484A6798512F
B334D5C278F0853C03D7366535BB783D29DB92310C46CA1A20EAC8F92D7C614F
ED0C71D5E48CAE97BD823C0576111D90C98206E38D49AF3C0128B03786BB3EAF
B757FBC0CD08640C77A1A62B42A26FA75EC588605732F3CE021A2D8761AA73AD
2E9B8115F2BD0997906704E49C9535027BCD8D64AC7F49AD3F61B4078D6097D8
F86FDE4E1340746F78B8A490C950FF790084852D74EAF5D173E21ED3A05C0EA4
32E7CAC0D52F842A6A6021939DF51ADF85A2431697737A05DEAADC6FC529AD6F
4C749DFBE48BF3D3FBEC28F7CB55A617CC9310491DB643A99D22AD65B7BF32BD
714A8F491E280024DC007B6A166E717D41646D83D4055C412E109C7A2A808449
F44D04C8F05A2A14B236568043D0E4A1F25D25149B2F24EDE00B110EE28DAFF7
F66860D0038F6DAAC438A94FC018D8E11AFBFE4982F679177325A319799F1223
3BD5E743EE91D52F97832A2730DB38E1CC0E55B4446473DE6C8C6BA0910C55CC
39B53E6F9E5DE2D1F66C28E1A263D7E0635FC8F0D36203B45F50733ADC859670
06BA5FCCD1ED01FACE7CBA94041CFF9EEE540AF8281083C9D346F0B3F1510C2C
5F732454AAA547123C8464B936B274809B91FAD17311096BB16BDA1FE2534594
26680DCAD7A706F7F21049900A5E0B84C0174E6A07E30BC1D35EAC6478471374
248225A630C8932DC4D78FBAE58DC0B5EA705425D2DA4E030C606D4391EA7737
0AA8F41315049B7C45C8E09198835768092105B7DC4DC91CF778CCE8F9CFA84D
93BBCBA134ACF9541BA4CD3A2F9A34E07E18F4E34BFF594F18388BB171D097CA
CA9D12241F2AFA3A9044DAD4334BAD9F31AE606FFD42B435D380A8F5B79B9C07
331C81DF51FBC45BE43685B0144AFDC37E462384EB3F3FCD499456FBEC3198CA
758ECF7BCBAA7E81E8A25A16DCFD325D6FAAC3C40D75400D081CC77E4AF77EC3
CF90D6DA156AF59B3F56F77FE8B4A8389EC4F0EF5A35DE194AF57E80951299EC
D11A6672ED72EE73A87E34FDBE500BE84FC3B3BEB53C0EFB3538CE60A9C87565
CFBFE7B34C33EB313E70DC56F0420DC2DB48D0A84992227C15BF212DA17E38C3
39CAF82E19413C41B247F3F1958A6F3EBF56A72088658E5AE6F63445CBEFF5A2
85ADC713556EE5EAC1C1EADCE7ADE4B124066018C9FA670F918BE5FD3881744B
0B054924CFCD5FEF5CBBC3371BF4BF97B49109DA6AA4E0CB4FC44D77E4B1D174
ACB64E03AD9ACD405BFCDA21A67FD93F94AF98E5419B2CE491EEAE8300F1C779
E91313E45F5C577227AA68C190C515F03F5FA40231131A00DC2A4E2EE4A96379
C955E449D392300CC4933DBFC87ABEAF2BFDC1952C66A1019319E3096FD8989F
C5C093A824E2444DDFCF56B4E01B6C1FDF53752834D5A2C6C067636A69B1AF18
796B7FCACC91004D88E18F47386DA5CB8F74B0F8CC6425C53A225980348E17FC
AA33467C0DA4A116B27982A56F679D65D6F7150D631E0B79DE3D43555647491E
885469725CF356762F01779382436D7B71E52E4114AA63290F10C98C763E33CF
BCEC9A2D13D426B95F0EF50225E2713EB76CC6A0884C2C17A7CD431BB67BA59D
8EB7A00B5A38964AD9FC71490ADD5F6984439DBD3A74F8C81E8069DD79D334CE
C8DC72CAED72650F89E7E0B1538C5D0663893BA84327B703B9E085C7AB14FB9B
BB34F4FD98DC6F8448F94BC4FA4D79096233696F227D484474B662BDB92283D5
32C9C58BD758A38CD30BDDB12C5140A1BC75978A0E06993B665F73F8A8842787
A468FA39B093E77CA039E7E4A5E564127843782BD29EFD30AFFB67B389F60215
982BC114D1424B79CD0A78625F4DB4994DC7A93F2229F0B332D68E480241B347
367B30AFDFD12CF23A02FAAB0C28D081F1DD6DC2C82D88B0BF013AEBBDBE4F64
3EE587CAC33FC9B0AC672EB697C2CE8E67FFB64DAFA43E89D6C65BA6C75B25F4
F2437B478FCCB744CD55A2E1DAE7C5AEB7FB80FEC1583A62617891054C2BA289
17B2E6A89F75F3E090F96003095CB6A11FD2037D5FD25FA65D96A214E3614CC6
863D1A6917E6488BF7469089612BC578D3C53A72C74A4E2A74104804F9EFE932
221CAB88ADE825B479683F94365AB74A10D01641E1517DBE8FB1B1F9641D6053
7037635059D442FBC209C1C68063DAB0E8784A5B2BD9929C22B3AA08B065E344
4FC2C65B6338007257446107F7D88608108350947148EF66A0139AD4F6CA1AC2
4273481FBD4D0508C37B4553ECE439CBF8178126E4FA8ABB03A1C1379F82940A
CFC9653AFB7AA3B19AADA1F19A4A6CA81640BE7C3CC839B6E14230F4B02D7170
0B17E52CCD1DA3CBD13B129F1FBAEDF6DAEFA530A835479D3FC7623589A42438
2D8DDB7C15FE2D9C0AA88D7A7556309D42531E3E57206DEA6C7ADF134CA24FD1
6A1D1066A9D8C620BDC0F22D5DCAB19AF034CE96F9F3A2E9A8E1EC386BB249CF
5A630EB493CB50484FE730C540D33E727B2934B6F24411F968716E5FD9925630
5EF1BEE4E67E419842CB112A906FF42C0BFCEE123D08D4441924CC860D4D43F5
916403176768AA4BF95D89D80CC18720DDD557102050E96BA9675D0867ABFB78
EEE5377E85414898EFE6974D359CF468606EB81D3C4B6C268F7FB5833C960D1A
81D47C3DBCB7A16C178F50C5155EF29F5E817F704342146F9744ECD7A5AE0AAB
0BF85B190D2DCCB4FAFD84E650CF6A01D38E141CEC8B8262F1E2097514068D87
E6C0B31EA0DBFED0EC4599BB37C86B3D39704CE9E37D50869055DFE6E6478470
ABFDECC14485B93E93F5698B571A023F50638D98591C649330FAC3A1CB71BC1C
FC9E4020BD19276C9E536DE56F6D3C578E85ECB31C837EEDD00FDFF3EECF3EDB
A686114B6B8FBA9A9B1EA948B9E5775FCE5AEB0F85D102045D5F93D1A9C9B08D
902ACD8AEDB56883692C47680AA5D521982474F4FBA98A405B6988ADD81180F5
CF28ACFEE7F583F01014F42C1AB7897DDBA70762B57F8AABD3F4DCF6A463EE1D
3CAB66A11498104464EDF535FB5C14DB4A44C1F3489647FAFF32742A0E44B6D6
9866718F4A063A676691C34E633A1794893C96F8D903B7C7EBBE81AA86B63317
2566931F05FF461339D47F8521941D6302DBE6635CE50ACFED8F1783C421261B
D6C6CB41126994E649A78C27A3B3F9DC9186237B6E5EF52043FF4BD63D94048C
7CFE78B89FF1EBF6CA6228F798245660D7D0F3B3E0B5284948B072EDDBE949D5
8AFA9C0ED975D2BF9FEE69E7E58511EC1E2A0881F1D9F83FBE894965FCEE7FCC
749807F1FC84A0A07812AD0011A247582DF4E47A8F037E7C4754B3AD5B5B9A1D
15A301EC81DCCF37F223A2BC1944DA3D5F2D0273596AEC62D26791F231B9E2E8
1213E3FC248E61545D33C5758410A77BE4665A4BBA51858050F4C87553167DDD
211FF951E6883785DD1B1942F3C7A935F3EDB7730C867B2ED2D47A478E036763
B01E53DAAF2C8BBAF34247921119735B5163F254AA68F39843B08D99870E28CC
322A4D8600C5E142E4940A616DEC855EB2AC38BE3AFD7CE7D53D17CBCF754838
7921F5A3F9234B985E86EC63878694475933BB6BE0DF4DD71F3253730ADCBC35
8F5CE9D58FC67740C5FE7DD8C2B63772FE198415AEC77CB9C6A476CB60B2E52C
AC9DBAFEAAC78612E0F6A94521B7FD85BC21C305ADA114AA3376B02856A9BDD8
37F6C2FD5D753B7FB10D50417765D6BCEB02A65AEAB5DA0B575339DAAADD7AB8
CC92451425D80E2E58B3746A6621FE44185F93CB5A57FC89D94BED9769916C9F
CD34D40BD557911288978AB9D9FB52F42AE593F6C83BDC7B91586DB2F303E56C
4586B2EECC30236B02DA4F780DE2D741466C507DA5BBB97455CEF1B3BE829BDB
400745564C17EBCB3A206C2D71068F04A8076D930D9B6AE2D6AFD9DFB85B34F5
B1F8666B9F92853B4BE4D976625D26096ED98C849468D0350732408473E4701C
50FB10A9F2D32FFC1881861A7681A9800188C1FF255C45C5625D3C7EE0F287BD
D0C637475C4C86320C7D06404797FAF1ECB174DE2D608CD8B09D63B134DADD34
73977DD1E4852858E1B5D9874828E5F3F41DE446C3AFD674252280F1663F95E8
208AA0494F342866D048C667C28B020D4873372E5E25412C364E8D66FF93D27E
75B0F205BBD6DEB54AF9A9486C0517461A30B5C5FCF3C7F151AF0751ADF68088
3E6F01DAF3ADB696899DFCDDF55BC7CC877C2D67B519FF5F055E4E9D0DF03D40
CEA90A5152FFEE5BC3CDE8BC97D8670FAEFA6A10FBFEF59D6920AA79940E5CE7
E9F657A226F30D9F69ACDD20743A33F38BCD76F632548DFD06E66EDE64988A66
3E46BACE7FD9A42C35A69B272A0611F8DED0BE07D6B7C70B152B2A8B302A6414
9B8B89AC2667EB06D4AC8FE93FC515E599FE9CD17B66226CCA91D880DA1FA2FE
D9A545408898738536561A941706D907D172B93047562F35A0CEA0ACE846E8D3
85C6735DA664EC2324BADF89FB5B288B3AAEFC1FD7539285B1E2AAEC6F04FEB5
21040B38D49FE55B901D0342B286FE68D24A0A910E4D4AF7B06B4847CBDA76A3
237E8DE6387C5E515E4A5E643C8DBAB6C773B4E3AEF6ACC4C0E616A2C021E1A3
F873C57EF8269FCEC4543F4C76D66897C9ECFBCCB9EF8F6EBB18224CD836F513
F29D47EFEF9CBCA96428D1DAB2820735653ECA5447012FFC5D87963D55DCDE6D
83529CF0DC59022084A0441858A4DDEEBBD494BCA887142422AC073E1472D775
6576E72AF0A395DD894F2D1F747EE5943AED29D6F9FA2AB547270B96B7680BAB
0698F932D7EC189F3E2BBAE3CAF13156F7223031438A18FCEFCDAD6D9E6DAB1B
CE5250E12295107F0FED0F41776378E681E69E27E70DBC9C56C7DB23DECCC19F
442CE799B0F19BBACC74C8E545510729C942781F7E24290A0CB4CA068E9D52D6
0B0A88234EC517C0BAF9A158120AEDA2F428BB4D0A6FA1DE4C23D936E17818D8
59ADFD5C7BA880A7EC8D9E87304E070C23ABA383CC083B4B34515F78B2744026
51932E33DDD8867C35CA1D17FA7FEB092226C35E8D770C317379DD8A2F42508B
13C931DF78BC38A63EADE982D4F95C21CA4E200E83B816F536D5B0666685ABC1
C5E63088E7C1A1C940E463C1FE3F5AB3EA300FBC345FDCFF02B82068D8E1CD89
CB1E75B9D1BE58C059F9416ED5948CE9BB20102F72E5986312938C15FACDAA4F
F641B659F53071D90B511A137914A797B53A17F7CA014704C7C6A8BC314A71B2
7BD39C6C846DED23B589D131D5C07B39638BF5D03563405CCC9E756BFE093EBA
1AD355B2CE95A8A200B31EA5BDC18608AC8A1EE43835AEB5BCC240AF37FF1439
4FB5712B2E377B11EF9DF5E75C3A72E0202F77254DF3CCB2408689EADFA55DF9
6CCE46710728B213CF8B6A8F80B8F1A22AC2C516CAC29EF065E487C627295F22
BACCB2E2E43F6951F70DCCC758752566E9A60989AE678FDC3D19869C5822940F
F0891DD64B2EEC6A77F862B455F9D027D637A3AF462D7CB4D11B5719799043BA
F1C5B8C9F533A39D7200307EFF7A6E84663ABA9F8D32A3D9A36251A6ADFEFFC6
856D1E80F22A44DD4C10FD74727F589F0D32B0020CB1FAC2FC4ADBD049B617F6
BA919F36AAC4542DCE3A28DAD63CF9E658E3FC995FFC0067571652F8DFE907C7
6EA4D813FECFA9FB8959FD556DCB1A6109742D4375F51AD0C88EA18934D5B651
7A27877FAA786A885AF306CC2077291B7C762767AFFECBB5E12392EF015B8E53
9362ECC32BA1541AC7543C87E07DE0DD071DB6713B35A427372F9BDB0317F34D
321D9665CA1F0040D4643476246852A8010848CC335E6E0BCC679108E8F070EF
9BA6F9C490C127EF3954FFA7EC2D54A092CF38AC39EFD8AC2A0FF09D22B35D47
D2DAC04E1DB2B3E9C2A1CF6C42F097480A9A201D48B76C131DF33F92CEE35CFA
D49E5EBD305C2E33F946B97A5CE4570830766C039B28D34C08485EDB5F045E58
1D5A6FAE18E186E23CCEB7894BCE828D7918B6698CE5D1B934FC4A6C34ECD6C5
40D70A76074DA980910AE5A49EE5D7EF71DA68A1248F0BFC5C8CFE0E7E1B4C45
E25DE7A63615029BB8A278B083ED28702A66AAACA0D9FA5FE3D6D5D355ABA942
1F8985D6975447DE8995D7DDAD9084B461F49D3E8E60E95FA47F446404F5D066
F9C9E143E797A06A6836E8AD756EB9F698B0687F579926A1A787FCF71DD7EEA9
9B4C6316665E99AE5BCA5ECF6D36852C033E64AB5ABD5C115632105DD43D5E68
68305B3FABA435215E9B4784C50B9DEA218D49014C14DF5405A156B47EB79328
B0F8BD02DF06A20BB36D7CF05578D8342EAD794425FE9ED280E88497F7F47A4D
9550CCF96DE5E36629C416B2CDBFA969401CD6F34CF777832A19854D600285C7
71B74CE387DE6DE3ED0A447092695AADC5C2E127EEE595728ADB4AE9B61070F0
735D53B5AD5B48731ECA09DFA538F6312E85A838D4AF882B3BEE19218D5E503A
4C9E910842175461FEFC0BD43CEA686CC9679461C44258979B05BDC4DBDE6A76
2A7C1540DF59035F8463A7BBE8345C8104518D3B252C248BEBD805C79453E2F7
2D0184C53EAF2C5D21D01AB5E29699AD96158C4BD7F8F1D7F491CA3A08D35201
98FAB676EFB05F26E54E9D6D2E90739E7A862BAB4E801C24F344C2E32D5E81A8
48AD437AFCDCBF200F6F469EA44AD31298ABBD77ECF2730CEB793B35C6E9B87F
A9782BE3A5F9D1DBE9D9B9E589DA1513B4B1AD902D10EE69DE66631EFF76370F
3E99BE894B9C4DDE1B2EECD14DA19226623D5EFEDE41EF08F5104419888F2AD9
57DBDEA6D1F76127D5387FB0A538904775631FFD3D2BEDADB08FD5C0FA60BCA2
D9F0C1AA3E7B1540357845CC9048EA2D0C3E4C08AA0B577B8D242DE9C7271D5D
C4A09B727FE2CC47E4D6D0FDA00C63DCB5E721BD6FB6AA1CD9F72D0259AEF440
619F807EBE117E0637CBAC19E0EE75661087E2313C03914349F22BDDF32D1201
34059CAA6E47FD751602B06ACC78CF7E23C21B7A478EB737B5EB1D90CF068495
84C07D095D37E0E7D78F5973E13966F63C1AC8379A9953EB4EBA2D50F6616AF2
68C77B850EF88FEF686C29FB3468B109D856EEDAF9576901A0B56BD830F887DC
E5C52117E3CC321472241CEB0EF90E3046481356583C361CEA6A569655F904CC
D5122FF4D2CDC4627C3DE83739EE6753E566F8CE3D053A16D6BBE16643A7DB55
9C794A4030405400D8F0B108FD280381F55199651A69A628EC2EA8EE46EA032A
11F4CCFA93F969BF7C57BE39AFBA360FF9632AC0CF71727B4ADD39E7AD35C76C
9ECE491CE05D68689F0CE49F6E563B43CB72648B4E6059624092C28EDF721E1A
8DBF553F85C78B6137321EDEA4976A8520335BA9279EE9F37D69E2AAE9E6637E
7B13ABB9F1C58BE8568E8A0B0E281B0B207592D5C2F0A4972071339A600F4DF1
82525400F3DD7338ECBCB52997371AE6B752CFDEA4435A250A1F2856787C5A49
6CAB7607C8BB2420594ACDE74E4CFADCC64A586F7A6CD7864D20E262B0875672
3AAB7B7C07F1CC744C280F826760D9563814C36AA9A059E909AF6D80E58F6938
A35C5BD193444F4B487460DB8E41FEC2E7D1A69297798FDA70890D33F68A04D3
3871107A2459D0C58F43117C4A0145A48768835154410CFD979EE34C6DFC3E89
A9BA2FE67C5C17B0D6C7A5348A5F13061E46EEF670AFCE34C0359EB1559FD0D3
7BF505AF8918DA6168C0E6894C772EF68085DE406C839C0EB5FBE8225B48D0A4
7375AE02723AF127C7706EED7E7E00CE047343C745CBEEF92AF0EDD7BE509071
7BA8F0171A6F5FDE25D3748BB80F070DE0B4F2A2A13C27F547C255B5450B64FB
56926C71BDFFDC078DECD53802B1638D18167957BB9DA74BC82FBB766A0F3B97
9ED15FC33ACD0B01331645C0EA34CD7E29B3DB6684E66FE70F9729426EE4C8B9
9646BCFD73952860A8C04CDE017C89CF4837CFE0BCEA81B4CA5920DBE94107E5
DDE839C8286AE6A9C0E952B3439740C482013C337772D9BBEB0F1B9FB614E42F
CCC001FA0114CDCA48982CADD1BA4CF81D86F3C4895AB98F709F5E0BA1681547
DFC8FDC90B24432F4C7DACB2471B325735005E92587DD9A0A7765A16C25C29B9
5611AC8AAC3E451292685A7A62FB893680109CDC6EBA3136F82C26E6B1D74382
5C63839B2777AC51738B08A8F7D2C898292E5BE41A2709E640670E633BCD0FBD
8F44920B31EEAC106DCECB7CD569CD103C7972E203907B14605ACC018C3418BD
B264E553184F97BB964B2112644F38994B42413071F9C0DECCA2DD8F53D394B4
223E383A5ED370323E811011C0F9515EFFCD2081A2240DF03D81655FC296641A
DB93B6738C0043153CF4D2966D014E78B19D7A4F47C6A696D76B6046E544AEE4
96B90DD628481C2E4CD5BC5104135C4420E7BE523E9FEF8D200D3BE7AE546693
B65F7C24208C7AADE37A48576B2C15202C4FA73EB0264C219E2BAAC1FE1D29E2
87DEB698AC02559E66978A0FADAD74EFF87C94D3D25FE9D250C4E4A9FCFB45A4
AB5784328CDC82BC71CBC06E8F33344A02CE3961F2EEDE81DFD6AD9056D398A5
CF0BDB326F93F95D87EAC50CF94D6DC5EB603CF671CF0452ED8541D7B027848E
029F43B8C5D7A8F05E4037809AD7ABCE38D649F247B801A359D253C1720CB020
6EC8909AED5C59FB9B69AEE266FFF32ED39D7964CBF45FC898765B45A66B5D06
B1F20FA5FEE99664B43CF006BC8305AD88B86337DBADFF3A5753BBE3305C920F
81D9CCC041A9BD0B5BC88FEBBE0CE266F5B06B8022D1B2D9851376D5EC6216CB
8BFE49D0008F5BEE20362CEDA519E7F9A46C326BF2F46C39300FF57B51810270
FA6AB5B166EF24844313ED21F33CD2ABCCBF98F90D8A7E3871444B38C7E3D4C4
DAEEB552062BFA4127992885CC93753F7CFB75A9BDA4845714B3BF55162D50A5
2F66546E883A1AFE2773253A8C9B7CFB565E644658989BB9CD2261A6A426E0CE
046897EFEB89651AD159CB2CE1F65C999559823ACD1314500313A4EAF432BD4A
8EFB214F4DB1A23BC4418DE48DAD9020980DEBEEC05F0376FE1661C911FE7A3D
25F7557AE1981BC8E8F714DCD93B808686202C371573957842EE3265A1C68902
AFB840570E6ACE181258C67237745F4ED6BF9A4C9CE10CBF3D9658598B28C8CD
B901CDADBF93503C7471287E373FC35CA6B5F503043C4294CEE3CE4433C8A1C3
CD1E9110C81BD060F57AB7354384E58B9D130F5ADFCB372374A917ED1D0F9F1F
498A3AD4000E9FFF5B67B1BE25DA34D4D9D8B8F7E69A44735ADF573F63CC0760
4C67EF9361015FD1226893DDA66728518869419AC4550EC3F97D251C2E44188C
7D0402B4D2C2D26624D0B8C130A02477925A28D4F65193DAFED21AF818426559
6AE20D0530BCA27E73853C2F00B3F6E02412E55EF026A7932852F2504AEF326B
7B4538E3A0709B0275C283700C28D0CCEEE8110459E0970189EA97894795539A
71C679B3EE17EBB88144D3614C3AE062B5F3928F71FF47F4F62D1F26094175E4
EDE95EF5F8E949553AEE9A4B965CB39276FD4164D3A1CFF497C47999C7DD749B
23696E918B2A56CB8546D60140FE150687DD0847B8CE036075B27804D8C75BFE
14867C9BE3A7C78ED604CC928A0958A220E5336418509302DDA70800D521F8FB
5E5DFD42422C7A4AE8413042F42E85F6405E7464EB216ACB74891C824D52BF73
A079078E99A88929674792486F3DFE3A0983E708E50C92ECBAFF5A7B04CF79EA
F2D6772E87BBFB375EB7C70DC9BC28CDA6F2E38118F71A14385DC40D9118C9BA
EA111DC754FBEF766BF7E4F614D8726736BCF086415B3B9F62B0377952E0513F
9C121EC2C5DB7F75DE1B0CBB24DFCE3628D79ADAF84400606435EDDFB996D6F8
53DB3E239B0D3FBC7D9F2B3AAFBE0DC8150B775B98E98A9B91CFBD7732E15CFE
ABAE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A516AD96B9354BCDBEBB351B643BF3CB00446AFFC4A137CB928E99D626
4824385F1E9CEAE6E317451B4ED21EF01ACC5ABA985FB14EE70247FA3B66ECEE
431352ED45182614EA3D57BDC22E5A04D5AAB27C8ADCD7BC07BBAB21A1901F39
4C9C008D353F0EED437BC00D2E65A3652361D50E16C785B66DC1D551961F641B
032E133A31A61A335EA302469363987224158BBCAC91357E79DC8F409A928EB1
8E1FFCDC81E7B443ECF0A6D728FAB96395460B33F57CA9B88C746B9B7B453D4C
0755B802DD31E854C52DA0804B611B6014BDF91BF76B6E491F4BD5C46574FDCE
673B03F3D6FD5F8B860A2556FCE98FDCAFA81B35DAA07BEDB39ADAA041BE5ED0
02EE5663F1C139979D11BBB51693C13514CF00CC7F9E9AA38726D6B1AEDAAA46
FEFE290831071E035F68E9FB2AB771DFD9E7EB3E255BD3FD51F325AF0AAB03F3
C001351BCC357E49F8A94A7481991B6239C7D48C5D55D3FED290DF6AFB2E23EF
1FB63022D8230A40B34546705D09709C2A02F219434E951DFA82A1339C095723
10190C4CA5F9B9F98179382216FE74381A001AB228066DC706493D1267F2263B

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 28 /tau put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC894009AAE9A490E3B99E03E117A041A381B8DACFFF20F6E5F293B58B
0FAA86F132B8B59D102722B3E98E12F11EBC101AAE666271C93B6F7CF1AFE94B
5826703D754B09055EBE0A53E46EF9829C7181974A374E6AD658B17D89EB88D1
A80EF734BE6F686CCA917AA3AEF80A216B5E13C3626F2BE0093D2826CE4B3C25
90E3189335FC4F3BDAA0F15652CF8B32364DEE4C7FE174CA2219BF865BE7DB62
490D6C0BE2B1D2B889C0E1DAE9FC29B43AAA9C6A111C603B0ACF2AC6A7223A8A
3F13D96291D22B09F4D89777
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748073
CFFFB25D7C1188A40488A92FD2EA87A8A7DEEE9650149D167E131EBC361E6C92
2A9F532E6F7F85C21F704014374BDDEFB609E1EF72E87A7EA5AFDA938D6D0D86
F3813395B3523469EACBCE3AE0A271812228B8CF856DBF900704EB607E7A2698
08931B771ED1250E3866E88FC69A1214C724F830BDE997294721645F61FAB360
7C3B3F9EAA0BEA3074AD5A6EC578767BBE4F591737316A4F657DBDF2BDCB627D
C99B501F212C04DDCF148251E92337D102BDF46C4F598030F2E7121F6A610D64
0FC7E512A28BF6CA72CCEFB6270BE052F658087D5C67D702AEBF0B842B5B970C
C74AE8A08E28A3804934FFA3EF4A1695F578ED2A59D9EE46F33362634F975882
7B199FD078B14DAF0BFD6BD22B450926B69A090620505014FF932536CBA7CAB6
2EA7368F4A0C76891B99443744EC170D532A7E49FCCF051A2EF3F152A9657E0A
9FC876E111B6F8C40F828795DA670932D1C653C6C66F8BD36DBA30931D66B477
333FC04ED0EF17F1A4CCDD320AB6672FD97311E9664A291DB7CE50A9E2F5482D
B94A661F0ABD7834923ACE05F0406EE1A35A0D52EC8F338B1E7FBCFE101C25CD
C1B97085F4006C9CE8E9B3189F246AC319ABF618D864EF8E2F9EFB27D9E9969B
551DA83D11A0DA0085E2FAE48804E7F792DA77F9FBF9178223629F2E802209AC
C184C81943B03E2ED5EF2448188ECC95B19DCDA18B8F974BA1BAE0475C774FB2
D6D309BDEB97C7D1802F268F01E598029C1F862F7D7AEFA466C44062B6E30769
26529D44513199879E8596AA6B14DD72E1CD5A70828B5DC756960A1CA7DB02EB
F998D8D32FE1F2FAEA7C5A9D13025BB9E2D669A45B69878F0DD71B8B1A3606F0
364613C037D73F583976ECD28851D72456629F85B074A1964404E673D006C070
6F06E59598EF19595D7015ED60A0FFF338CC65D131161AFDEC4787D7C40763A0
CB8D743521899D8CF5FF67E8FB5BD01B4560108C59931C89F3C36E6B1B7EEF43
C9581D65B8DF199088CFF8EC6D3C43A467C4682EAE14FAF13F6F69F2A8DEE300
D7321473627FCD61BA713D80AFCDD59845E685C90B7D6DD684F99305B19CFBF0
99F1228C2454E33EDB484D6ECD7D57630B7022C4E3566871D314BD6CF49DD076
5F22BC75C4019783BB62D6F9F6B757456BE9C30C8B21DC0041F6F777D567780B
7743D5AC652B7D5081F287B82E51D4E15DAFF3349B64D60A41B5FF13C7E8D78A
94C9EB79FF27D26F1D7A5F734AC4133510378EC74DBBBC5CD500AF1BEA1E0B45
1BEA6B0DEA86C0DD532A8C2E1DDB4187B19F078D922AEB8D0E24D069CF01AEA3
7D5D820968725F1829A0A187F0FDEE963D5A2C30BA557F0BF4DE9DC5CD01DF8D
8AE98E8991A9EE92555200CFF408F9AC8EB617196A39B328A70AE74675335C1E
9A6DAC8972E54C2C45F0C45F39D587128A600F85030E8A9EECCBF4DAA7D8DCE6
3E20B537EBF00F55CF4DE4CCCAA827E6B23653E0BD21C87D2ABA0F1EF42FABF0
2079367951B608EEF90E571E4CED22BF46AFABF96B083DC022DFAD29C45163B9
599DACA200E9BB50CDA3C8C75DD9738730F38C00135142084F559BD3F8AF87DA
B9AFCDBAFE1205E8AF6B6605AF8C9AD6B082AE71CB91F19C5B0DA4294B9BA71F
F6C34BBC343CD79ABE9B543B5057ACFEED5A94499845E5788D976016B9A4258B
7BDF2F88A46D2392097015E011E123C354B872991FD8C0FCBB6E0C0442322F77
D3268D5B10C29A72FA05106E64DDE19B5D53762BA4E78C93E86AD733C402D54B
276015C2E1742BD0691B41774EBBC4A2A3C21ABB539C6644411C91B4A065A05F
33BECCD06D9F68C4FC8092A37B3324C606B08ACCD9DBE1A6F6C91368A7864066
6A8C93F7DACB5C49CD59A68B432F4351502E99151E85CB9BF466DBDF4B80456D
01F0F35E6624F95D4CC30FC077AB53AF9F93565E18A8AE89841F9C1DBC8BCE2D
8585844826CD0C846A52AFF1D88CB3ED7ADE2D9350877E8B3D4D5B84C73DFC81
A512EC5D4958FCD12096D9B9CFC21D38
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFBX1440
%!FontType1-1.0: SFBX1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1440, tcbx1440, labx1440, lbbx1440, lcbx1440, rxbx1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-218 -316 1652 915}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA16EADB32842B6D00C76EFC613FE56C
378A7118B0589B3EE5425457AE310AFB3829876138A59F58D965843B709A0F4F
D1AD54875BBADFC803A755669491D9E98262991B9634084E8E2BE46EF805B219
D18DE35ADE9A8DBAB7AB761864BFB6A27E5B421C32CEE4569624D9308A32B426
FCFA5CEB883444393CD7A58F9CD522BA73E17492DDABB7E00B2F6BE47F585EB7
FDDBFF33F1B5E5465287717D1580105BF3929C09EC621CEE9606EC49D7051A00
11935EE728A2FD47BFCCF00C93EE54910F77C1CB8622B9CA129D466746BFE1B0
594A9F0C785F6CA67161EA1480AD4EC6781B9CAE9536F5D3AC6D447F16821F77
AE2705279CF3DF4E1E9AED81A0CBEFBD61808E2D59AD970264A5B66D1F399DA2
55BA0AAC8EF1A1E16FD8240D577F5E00E0040EEBCC193F074FEC48DF30882551
E23D64EF84283F9640AC5F60EB1F26CDB79078AB0C0D97D1D6297D092380D4B6
6A2099F06A513A78A3C3B82A6DBD985A0DCED7150B19FA42991A3D408FF95978
15D309AACEA8C5C0AE812F50330CCBF47B4759C550D49173127DECF05D783DB0
978A366ABD3CA7D9BBB6652459A5E19F9630CE75C2BC7BDFBFE0EA3D8098CBB1
98CBE02F196C0A0C5E976DECE72778358CF8D0A79A8B5629A6322716CBFBDEE4
934E8782E716185235712845BBD03896B836214B69307DC04B17CA41770ECD8E
7618150D48849D5D575591D469E6FB7A40A9233144A05121787D1AA332E46AB0
D5621B05EC32268B102ED4ED7AAA3C1B3F5F8A858EEA52E4F9C7D72803E0FDC1
E7ABF5BB2B6DDD4DCFFCDDA0BA52069615BD985242AD0270AA798540DFBCA4D1
AE7F28784038E7D1AC1A0CB1E43DAE37B1972B9B62F127A9EF99E1281CEC2438
8C07AC126C285E59CE23CD732233874CB0849460D974075C167EF8702000AB03
E8C8B32205E51C0598C2EB4BC9ED4EF133E8E7195D12F3B2ADBFBE1C690EE00F
7207531B444111BCA775262D5AE4BE5DBCF56DC130824BE565363331F082F0FF
1D9C196F9E2B9DE1FE0AFEE43B4B5BCECA6B9BF6A2587F0A3FA4AAB078428E00
41AE01BD3AEF1A6D7F517ADD7F61D44BDC2B668FA4414EF33B26B94A778967A2
C65CEF614812566AA034C9C2A535EE0FA606F006B034D0EF5EC63B4A1030E92B
11D38D878975828774C8BD1F227556506CFD0B79E121066B478BB4D1C9F2D3A6
D13BC6B93AE8DD633816D069F56424D43916E799AD04298D971B7A00ED409479
B28B94CD7FAB420995A9D9520F86CABFE102F0047B3476CFB6B63A07F5B9DD7E
03AF07AF17AA04B801C72CA96A231A686271199CCD59FA104A64F2C84E032015
2664DB1F3159B5B1D9AF3D1E7A00374D97907BC900E82C4133E9297337072DE8
5747E5661A027E078FAFE213151FC81DC7C1CBC21DF351097EA6DE0F719DC017
D5285B4083BDADB46267CE6268C739EF2FF2995A3F3ACADBAC237FCE040D4FFA
4E2EF57F4DEF382AFD57839FB57348A1CA23DEF9A7D5DF58F775EB71F671BFEB
73A7B6A8CA4E6635A12E1200493BB480CF5167CA6DC9DCFE929AF58ED18C4E3B
908A69BBB0B9CF8EA17F930DD68C9DD396976956DC37D0A1A4159DB67A8F742F
59EE9F3757A3613D69E8DDD0184B51DAAF285DF6B5CD27B12C5CADF1D9E7DE19
0F757EE64FE2DAD4DD3B4955936EEBD5B0F572E1577A6E0BB290BD5A141D4C46
6C114743B853D7F77C56EC22ACF3C37B66382C5810B42BD9CCF34445F88F9E2E
6FD2D8A4F18A6EEFACCD99565EB047376710B349AC35B4A1C9CDACE77BAB719A
C79C7E01C8A046181F985158BC6EF268311FA02A4AF378B0D9B7F0E49F8B0CEB
4DD458DAC1CE89B91152DBBAF1B1FEC48D4A2E5A4C6D38DB17FE7C776B4EC0FE
E7206D27C06741F0F5AD1BAD382AED99523C81C084E63A7C5E3031FA6A30E0A0
66EB838DD2D9B46E1F8AE5FB9338A09E227C6C8E9CE5EC8933890B82A22191BB
E5C1638CFA5B1303F043B2C0AB206549DBF565560DBF90604CD010DA64BE5532
50AF41749C979069383E816C67D3E4136E0491AEB057C12761019C47F24DF221
7B9861E681D9A7E3C92E5FC05F132544B831255B96FBB30E870516922DB30B98
6F5B263620A6D2192297C2F4D8738115D73259FB34147D958138732E676EB53D
EA1B1DFDA3ECF14ACF714B96F765A580341C445EB8A77528DED6A6BBF886439B
13C0CC247210E75072801B97D93D01AF56557EFAE46DCDAF8FBDBC75849F13B9
F8F9604ECB442F962AF2C3F7A68CBEBB345AAE6A20AC810910D8089041759256
643929211E584683DFE111CCA388F5CABEC19742A9C08BF74850D4014A596A61
EED83BDFE11449B2AE2FB916DFF178A5BD769C4C2C8583649698879DCACF3024
B6924F95353E460886EA3F027140E07FCDFB9129F2176246FF9A2B7B5B3B8430
2C2353053F6B004B74DE311E9BB962F345998D8B6B48BBA5EE97AD0B86850862
5FE52FDA2C17FF096232F80D7D75C05526D41FF34564B78690B2B12559852993
F3D0370CF025FBE0AFB811F53D1FCFEA09C111E184539370C80D03DABC846B05
77FC610ADDE2E72580353CF578F10517C4BB49E6807731DA34102B6358F560F3
EA520BDB2DEDEF11EA8BEA53AF20F573C40E2460778BD6D889FD91DD765BB9EF
84E73C1662A57AE3915DEC1723AD2D5EF23C9887DB46AF5456921BC1E44CC4CE
B90C585FA3558828328923A3A12AA786DBCEA97B5A74D673257D25313CBA3741
909F1883993FD0E496415A244E5246EF665B753E69166737F803B419B204792D
A07B3CCC1C7250E20440022EEC910630719F2FFFABDCB8D82DE92062136E4BE9
421F3B2FF54405EA52DABA6CB01105CD587B574F704DE92921C11F4954612F28
8C0A17212D077E239B85570AA53A8E8AAC8D2A87DB7548BFCA1E4FC5126DB53F
332592DDB71F918364693DBA2B6AF901FAFA930CF078343317404F643448BCC6
8DFF8510CD47755396DF6FE4F0490A4ED33B06DA14A97F21058F0C0348BD3E57
3D9BAD56C3B8434C2D4E83B5D31AEFE41B6EF7E1BC4EDF2B1C958182A79A9C1A
2D7DDA6BFCE8FCD6D408341CD82B5D0EA7BC62B08AB5275450C82D4454C17169
E2D81A405B0BF1DCE2B55DF132DCE963632583014EB773813A6600B3A7FDFCE1
FA89BCE9E2746A2E03C7C822D082D7492F48968885D75795A063D9C71EBBC7A5
F929F2D159DCD8359978B49099EC0290538564D44DEEE57D64510EC0EE1DC2C1
5E90BC2554CBEE69559E10025C6667037AE88A20DD165A2DA3847B627A01C2F4
0FCE54BE46363F8676A2CF1C9D1D5BB1437CB3917656D03E31C86F854E9F4B84
4C1C47BC920AA0CA4B9C38BE44A9AD8BC6101FA1BF210BA24E11566D0052234A
593F7123AA4A8AEB47A43081F558258D6A2B2276FFEB3DBEBA949FB1513E17A2
491D537251FD524DD567A6A8CEDC1213B07FB8C4FFC9FEC0CAAC14147299382C
40F73F0435DA54632CD57053D7080D690420E9D614D8D0FA8E5672F872F72BEE
FE1EF6461B1D0686C4FA116870EAFEA88DE9C21843156B859A30CBD537AC5DBE
5829A3613A2F27049D64DB935ED8BBEF85354CB331484C0E5B2FCBDD00123333
F0911580A5526D52B6890826299E70CA368C9AAA5B9CD947DCA971B1F51AF332
930DF84DD06C062B4F871B17D02CDDB3A276C524B0DF3DAEFFF0ECAF2A0E28CF
32C655D48A12A882BF574BA1827269CBF3DB5E59872F5FE04DA88084DDBCB946
B1BF696BD814FE47691DF7911821473D454EBDCCB87CE60B1333B81C4D67260F
BBADC7DE2ADD0A3CBC3AF2FBB87D95571E309F08F4E1A4764EE06CB8786700E7
D1AD8391AE03E4FEAC152226A2159910DF6548C99F8B2D6E9E2309F28A68D26A
3A8E955BD771890FD954AD37E1F44D435506280C27A84578EC5A2743EA9EBCC8
3374A1DF9197B83C2EFF1D1C4B85F3580F31C47CCD8FCDB6AD04305F07357B1A
DC6A65AE06751999F24A602BF6E8DA524FD69B3E5EEBC06F5640
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1200
%!FontType1-1.0: SFRM1200 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1200, tcrm1200, larm1200, lbrm1200, lcrm1200, rxrm1200.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1200 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-185 -320 1420 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF049F26DBA77FA20B6513D
285BE588908C3BAD6A1BF20F213E587F1372774EF31D66B237AD60712D60BCFA
83574CC5F88A6B4676356ABC2DCCBA498F4272476923789659CA8836F2FDA94D
38271FA2CA8B77D7099705602FEB41085F6674B7AA0DC588C9ABCCBD9115601F
CDFBCD7A8E3CFC8B1E718E576254F5F05FAB25DC253CB561EC3604749243AED5
76898EC99BDB1760B0CA75CEAE3FE6FFF1700F64F585BE9267ACBD5F155F3122
732792E17022F23B1F46FEFB0696E5C2B78DE0479F09B6512035B9C488042B62
98525003ACCAB6C8F36BBDDBF6E82F5CFCCB418706BBEC1D4E42086E70847405
3ADD1383ADD34574F2C6C64907B0561F107A259A649BB525F0B74CC3B1F42412
C4F81A7ACDC6A3F37DE7FC06DEF21B9821DD39D75432AE3881E431569A012092
38FCECF1BE90B0B199DC4D56EE18658B2818B69FB6836486BA302CE7F6EB18CD
7AC5AC6648097F65C8AB851E9BD1696B9703230711F68FD82E1DF92936A4B1A2
CCE51645573EB0E762D68A417AB6C0A2EC8756FC9BFE5972DFC4C794E948A970
918BBB1BD7B31F9B1B323EB2AF8D41A153CB1B1511F43560825DB6ECE30C16E4
902BFD1EFF59F06984F36F284553AB3F2C7901B37ECE058F5E477EC9C629847E
1C7A3628DB7C47C099A0DF53F05ABEF94A760232985AEDEEB7AA05C95273179F
8A1AEA30BE626653D22F7725C28498D776493AF6DEBC59D44A2F6F26E5DA1A77
7B9EB9D897130FB3F6017F80AF21E4FDB73CD96834152BA948E1EC4765B253A6
565F51A1ED2AC8374CF4DB767E7F3FAF13F0A1198110F554CB6735D3C2DABCF4
0C0A431D263F22D091D0F560ABF5968868126430A293C6E8A6A87593E580B110
E15A84AE30E4846980EC5C1FB6D4037D7E1DE8CF57B6A60DD4DDF422075F85BB
0B1411164E99A03A3591915372454A70C8CC75EEE08AF87D35032DFBFD61A4E9
F968D1F514A69D62B30B89F47FCD45A41B423664A7862A1246B6D7C5E2B352E3
D5428D2B6677D38729C5752DF835EAA366A11F6C7564C80EB1E0A3EE9990ED0F
520EB2AC073E63DD9C935504D14BAB14A4305B3D64638B6D952333CFB7CC93CA
D84B6DE80B35AC82623BE64BB6C1DF9165E00D29054A5911CEBE09A2054EB39A
7894F49184B672F4AA1143A2633647BCF502A77F12506C02F1A78AE9061F1497
CABDF651CF5ECC83877724A90D67D660CD4C54EFB79F9A6C1DC8EBDB66E8D709
D4C0A81E7C7EDB6CF1E266B753AF6BD100261A6CDA280902D3F0D15EF4042F54
5586901E870F2A99727E9B64147EC20330C3E54FE01AEA9875DFAEC86A0B6F39
D89E035185C3A6B25CBE093FA5C7BDCF99E5C68A9EBBABB3D61A6AB4F30B4D7F
94F4B4DD1AAB6C22FC9A18BF46B81CB362B87BB87E9552402C35490285FB83C5
EA4825225DCC23DF406DC5CE8E67FFB64DAFA43E89D6C65BA6C0F41AA44EECFB
DB8B9ACF11B6ADE903B6EB177A00E2B22593F7EDADA3A7DD72A3BE1D488E5BEA
BB9327D8B0187CC87BFD35F4591D3F63B87490338692E1E8CBC869CA13C68761
6276CF2A654946B67B1885F915E2D53E923D1A7B9D373539E8AD0C47731B05B1
7E627B68C4C1C9FBEDD4234643720D3A7EE90502081339CDBD455004D38302E0
FA91517F04289EEB213EA283590D0EEA039CA3BA5694C0DB35F68EDDE43F0CC9
DE58D2EFEF8E3D81853BFAA0BFB73296E70ABAEB606ADCCEFE9AC3EC7736215C
B144B249E1FCF4A66590502254335D9505C9A962FF3A7D45FF770DB07AB439DA
BBF81F0F47330560107A6101A5C76F54C285DDAD4E7817C6B93392DF83CF924E
00DCD4DD8BEF1136AFB87E24A20883FF87DD69789556A974B8807C5F8030CA58
5301124D8A96D5B23FFD181D66140874153114B81A52D69164014ABE126D1E47
6752720C0CEDC0AAE2EAE314CF25CA05C3D569CE8871B49AAF2F371CE632A913
4E4735863644E0B7B8CCDD82F1709F81DBA6440AD57B94A928E1F15D948C7EA4
105A252E3AFCEB539773BDCC8FE919D55E1351579EC5C3EBD311A8EE9A9373EF
934E4C61DED60F0FB051231ACAE4E12B03013D7B9BFE305B9AA54B0AEC8BDADA
C3FBFD3A4ABFA43D98F2991894B0E1EA7FCEA4843CB86FC4DABEE41F24ADD548
82C163617B77D65D423C565647491E885469725CF356762F01753FE97CA9643D
7EEE4365D5C807298D61C1250921C4F14BDBF39D08F3896967A5C9BF25113779
7C1909EAD87BF0D60C43F1AE79FFB1A23620EF2C324D5E6F6D00CBB22BE70E0B
AF849544750046F6031B872CEA4F6843BC35E05C73313978F2D74A52F2D52095
25947CFBD1D90A82EEFAF5750631A17DB096B594B6C033ADC43EB9328B5366C0
A8B7DAA7048C0028AFD0E17D3A435C530ADF039B402213DF9BB13372632469D8
568F819DF9554C1930B7B3C6FAC84650AD5454E5C0DBDF10DAF451A8D99640A3
00550839FB6356827BBB65B73F31051792CDE85D8598F0825CDC92D8957797F6
0CA60789EF683AD4C7D307304177D48E8515FD26575A917C9E7333337E070509
2783D66F0F50B55270EC8C75BBE78CB32E0133765517039417C35C57DE3B0D45
97863BDB6F0216EC699AB82DA5AE17C56E64998CBEA5DA56916984CAD87625ED
98355974A608CB758F2FB28EE42A76F11607C84F944D3FE51263A8DBA84E93A7
BF7BB6DF9EA825E6DD1B38F09E0010533BC14E56C291413C50141070B380466E
377DE82A00329C607B7DB839267F83EC08B4819411F01130BCD93B9C2448D878
FA41518DBFB8817CEBBB0FA2A3A4A0341C5BC4571A31096F341A0800454E7455
74255A02CD28BA9E87AC9AFC2A7EBD517C7E93896335DCACBC34A1743D5A1564
B5EBFE988742ED8B0A251EAF8FC3754387F5237044496B3FC3D430A28CDAD9E7
4EB97606906EC0CF858FD8ABEBE66AEE30F62253BC1178890D6AB614FCA9FF17
924B6F0B4432A66990C1D701A498C911031A22BBC60D8D893ECA20F660AECFC1
74B5E419A5779E7E9A79D38141A4D34CE51645DBBB7C726B5C20BE1D5A364A21
361D9B6A7B9CFDC36B946446052A40AEDEE2FAD548E3AEE8B3FC81D6FFA0A37F
3407A02B06A2A3339854CAEDC5440F281F9B75C6BE3F8948E5A8CB3F4A75E17B
FA9563DD08C137E45A5A679000AD3F556DB2D3EC30C2E710CA128E8B9C060E48
6A72E422BA7BC619CD202D499070ACC0CE8ED9357229E58E8388BBF04AFE158F
EFB01BC9D5DAC2DE1A980B02E56CECC8F1F65A358A6D9B700D894DA78FD0AA95
96C1268E645AAAEC5692F3A9206A85A4ADBD8C93E822FB322869936078AF2252
858B3183913A0BB0660FD8836DD2E0C3327CFFEE26673BBC2C5502E960074098
EE208170447AEFC43ACB5569CEDF46D479F1361AF8C49EE51DD153D03D65DABF
DA2A44FAD2EF1016D652A58E1D271FF6EE621B77F5441CD9AFEE797F31CF6C2D
709DDC52E527C49A2843B1F40FC33D0F1A05C2437133F753DEF24BDEECA9FD01
DFE44D65B758F97102E7A86D610A4B7B3EDF4F9D3C175F633645BCB35871C931
4D59DA9E625DA7395222C1E9BB70B005836CBE4227D96FF00DF7716B8B14AA1F
ABFFED13FC6652F9082D979BF4D846922C4683804E388C98F2BC6BA89DA2FF2E
98B2A22E6F40D0F7E435E4AB844D83D12EB45C39C551E53DB065BD8CEEDB908D
61DC7424A5461320067CB0789CB14C82E7EFA02DCE2D37710B70F0361CE951AF
FDF4C04A1EFFA9FBC7935837113A363C387D55650E78400F4C45F4EFFBE43DFB
BBDDB4E3D6D9170F363918FB10C82BFEC6CFA8CD74B34B93D1931E5FCB41F254
2DDAC0E9456D4AA23E399629F084B3E5824DD9EF586021779CA07475972A7B60
645B1535CF943BF2862E7DA32DD1AB9FA58208E092CBDCB2E42C04E3ED3E6A33
45316A2EBC2106C9A4C737E5A4BA649BD0EF852EB0AF79A5EB6A574B199F1773
D02D36C09D3484710193D79B9B3EACAA1456951632B40E85F393B0CD06FC306E
65B890BE05070F67D839C7BA77F888E53B9AFF03701E4A1945E305952357899B
311D5021E640F33D69D02627465E8326ACE6F0EE598A5D79A5BDEE7B07BA3E87
D05609F98B80860AABA6921E161C6C6D4FC06E57BCE9D9AE159AA59C2FF42B77
43FC27B43A9CFE756EFAE0900E12C339FCEBDCBE9300AA28279DA8602C91496E
B3EEC816430F8B44004E105F7D1FBD0A60B14F481665CDC62F4AE6888F635636
90FB763DB09DF2B07BBE67E397FC2A7EBD517C7E93896335DCACBC3C32964975
51B7324751F5E3B2AAFD32A729D1734301DCC4ECB8228A7D9FC213A1475ED7C7
5978263612A2B969E2120540E9B650E20DD78A189EBD2A1990FD2BB1C155658B
B79D3FF159171D6532306F07A1188ACC084D5E2836C37C6F591B11725547E880
21B3BEA53BCBAE7450A0E486FBFF4A5199B53F278437C43D7E2AAFF3887EB839
F7A2A9E0DD6EB5EA622C5BEEC735AFD8BF715E80C511A96F064244637BBBBA65
94469B724EBFBD5F449C3B2F07027ED594D5FF033724D4D9EFD3BF41EED24401
A9458D10A5C0052237C6351B52D109D3A493CA9307301C2ECBD26AB364535467
4E8D1E3CEE6C21EA9667D6B02309230CD3D27AFAB14DE187F45F8C75DDF3742B
6FF2695DDA75E791EF3D8B4489F084A0A1C31B8CFDA9568B3B836A9477F6D147
4831DABAF873C5D6DBF2F7E039F5B0DCCE57E1D7BBD15535E200142A969283EE
75607631CAAB9AD5C6995D1971CD164A00901B7C75ED7CA325F98155AD174D38
A746B3286F3EA1D67C96F492A3755FE79334D07D65FE355B1BA190E9598324D4
264B30F3A03F597602AE501A231D325357A24634E75EC2676122F9ADD82472F4
1110CB02E02FB33648DC7DE0B00405EED3798EDA35F2E7C81F4B455984FB0216
9213214E89E0209DD873557C08C564985D464F639D0B81E85E7AFEE08C99FDF1
EB77AEDEFEDAB18C6800D32086FCE519E27F26A8144C7D576228C102B51935C1
1E6A1B3FFF2E10DA7F6F6E80F5360573AC236E17EE5F7F1A518EADDF9D8A1C8F
B1108673D867B3930FC9BE78B784D786FC209C014B7E2F1B6809B55EA360648B
7B4C01658E4E2822748AEAE48E2D6E752348C545B345B17C9E77BF875D7087C1
2FC6CB4050BFC255644B6AA755A5367DB884D5015928243B9E13FE68AEE2F5C1
0C10A144EE909743EB7746AAC3E9E93C8DF81947C8D2FD6B15B6ADC4529EF672
21876312E3B633E947302946316432A9C52A86F39355479C01500B01C7229F68
E7C55F697AE4AB8F9BD3F364DBE539F7BC5ED468E6CDB3089611AA932E55B0EA
4A0495CB2CF6F647E0A7EE9BC7B7B45778DC84A513F352B2484B2BB3A9F2389C
26E590F80B927A12716D38ED5CA52D6FF10DCDD39DB33173FF835914FF0482F4
8D86E13709D75DDA67480BEA1F545F5959E806B7DDCED2CC26324BACBEF8D0ED
348181B8A842FF8B0BA42807334F42EA60FBFD10B89D0E8AE7041F52C6FCFA64
D6CFB1D9703F1A17E3776FE26688D3A4AF6F94555F9610FA63248A467785F345
1297BEC0B7B03808FFE6EC885C0B9D3C86AC30B21F3090AFF572C7CCFDD71A37
921E6A8A38F39D3B2FB467D74C35A99620B27508D3CC7041E3062B67193F4965
A00712528976DA15412A161D64154D62E52F4B02A5C1A6048FE72F1C35C614E8
EF883AF97D367F69DBF734BB2A148A7B61C78BF7FB2277C6E81ED035F7969DDA
F35765327871EA80F02CEDA213E925728EB3D1369EC18B8B1BF27FD0BA060D3E
3FF5EAF38E35BDEFE3E244247E1F7276515015C511250DFFAEFF60809202734E
D86FFE50F7406524570EA79340CFF5DDB768507DA2CF9AB31CFF42FE6B4F00B4
4AC8BE64E4B919C5A575977FEDD0B1D1B89089EDD9D9E9C4C2F81B812A11DD51
20003EEB6A54C48062E65752300EFDB996858AE9B81C81D94101F851C9ADF7D0
CD1C6C5650027C399BCF9B1CCED2DC1EFB27931D52D022D2AF881C608322E2F1
C8DE42D0C0DF0B44B96396F92CAB0A4930567A877DB9FB7B18039707275C7B2D
D301B647DA52C80B89D0E0251C397DE74657E3F58DB7AC65BD5B8339011DBB61
B5F320965C5833867CFA739E65121B53C83E7B9A1A5E93702BF3826D5712D175
CCF9A789028D97F4F7D30CEDEE24E262B087FB0031D90BB7149E3C385D96A76F
CB6F8A806E061403C4ACB7DAD37B57B9D7F9B92860C21F0C4FEA515F629C9A8F
9326A2D989A86EACFA14221F9ACC5C474E3A51F1FD15B89234A997054D54BEB0
0D5F64484C414BE3368980755318BB1AECA0053CFC1235AF90051CDB190E4D00
40FFF70435C6DE67B8A5E1C114B6FC7CDCB05C7A0C332FB91C70591A71A951CC
34EED0406AB81B6A6F803474FA564202DE1BE4788A2E35A3973F350FBFD52A17
7BE84F2C5061FA927A69F6A4973668749143D43EE23F12315665CF631D705A9B
7A591230B56C94DC1783A8D9487AFDB79F3F5783DB2AA4FCACC8DE9CDC3C861F
663350128178A0F799A66101D740462B21BB06A88DC601CE3DA156C806C815E3
DBBADC3D3C24FC9806591084BED3F82E41AA559382E3A39F91D15855705CE225
B83D27A8918B4DA11DBBF343AF52C66D1327FF21FE901B3E17A24453CA546C83
963DB12AC04CF58ED84FB32709CC538DB2D3F82E41AA559382E3A39F91D15855
71088091059589398323EDB1EF54E133B6DF46430EC56A8C17BDCDA17F711169
3802518E1F3E3A25A9CBA3A0F8E5789F7B233FA7705F34F80EAD8A2BD4C29C79
E4F150DF66DEB7A3AF751CC15ACF3E0F23129000327C2092232623355EFED73A
F0A20E27F578F3A3F6E2178D61B6228B16640E4A8594A1702F6F3D52DA94FF37
C018A5211FAE935F18C710C2CDDE6A14700276649D850B6E23AD0A136470CE35
EFB6C124DC09FC9C27F6CD85560D1A731400CEEA260E50B4D1E4650CFC122B77
18D07DB30A93DDDC1EA9AE9660D3465059E7002AFC5AC62E5002D7CC41EEA18B
EFA9519370DFA82577AB923333891496CECA8C3ACE05DE85878654392450EBF5
4B9DC8441FBAB5BD7E68C13693EC4D92D2D33DC9298BF525779471C771ACF32E
6207F1D0D76FD6B5946579F0110AB4DCFB32E891C4797601B3B3D420CCEEB0FA
4D0BB8CFC08D05A32D1DA61A2D6C657518624A1CBF85DAB9EF379F7525591FE3
CA232E5EC3A95199084885C14341D8A12A491E774EB948D28D1DF98ED24161F8
2CEC0550084F40A4A161FD347082724CB5A62A4BD7C5BD44875A55897D2B532E
906D7FADF57D33E98FFF6D8B1053474E7BE21AD9383E09BECC1731700FC34FB6
670259FA6A218720C44A3BC393291FF022C62806730BE7A6FC13C4EDCF1C3FDB
4BC86873D179D88A0A94D2B63DF5CB351BE00F3685CA11D23B413805A02B2701
FE46253F1C58B4498D025DCE099BF4D8AF0916FC6BB84952274B94BEAF0EB7F6
1772338C083C728998BD1AC0D43F1AA653A237DDC1FA62A818A0423C40DF4E03
CF604FF7DAD557479E6FE5E9DD147DA54DB76A17466BF5692B5FA291DCD6D06C
DD3378331B86077B661662FF2163F242E2782FED4D6C76201C4BB0531D4F5306
89167B7DCE2516D380B8F938F2C8E60B6162FDB3B1963A9B05FB073A407C9EF6
D513E132472DDC7BAFC5E508E692B3E5C8C505EF874F28F29A45C95A24DD663D
7CA52551DD10E2B4D77154B67E516CABCDF5A6914FD502AEF1F6F53B839803D7
3D02D85863468D175D44E71807D35A8BB16DA3E011FA2B757F02EF6276E28FCD
D9F6B54BF1CC6B9FB9A5C5F4347030843DD8467139DFFA34C959CBFB2869B4CC
380B1BEA33070791A9CB5904A2D372030412C2AD833EC1C574E79475F889B9CE
9F35493A1B4F76D10B138C09D4D34B30CA2D6B37572F5CD259B75400B09FFCC8
DDD98DB99CA1C54D3B05D60B0EB6EA44A0C27A8483109B33B185AF2472E5C865
FAADFA4BF11B743CCF6AF25C1047871E270F4981DA77BE6DA75EB8A93867EDAB
C048370EAB4E1A29F597157BB0FB68345A5FBA715467566EFFDA01F6CADFE62C
391F52BBEBC870F8159BC0DD744F393CA13D56C501F630BA5060DB4162EE184A
D04DE7A33D11323133199750DFAE3058A6A578FFE769BDE940DC77868621EB03
235FB9C69EE955D8FB17FDB11F8C0150170A486455EFCEBDCDD341E13F8472FC
0CE8CE250FAD72B8A85B7F11B8834650E77F722C72A8B3658327026CCE185EAE
AF8A8A15901A2BD2F718B80798D95D2F9B88DE2367D7E9AACA5547EBA2564942
BB5BFE4A93CE8B815F2EFBD20E109AFAEF6A88500BB3ADFAA753C5F7FB11A6EF
B0DCABC3CB148E5134A27E8A5A106D86E395ADE5035D54C7EF66401D74E6DADE
419CA77C367D38E0548F709EB5BA672657CFED3C707D5D2899E8F0A1612129DC
CA8E43A6890CE8520592055A9B44EF7FCCA20E96281BF8389D5F02565768547B
24308251BC1F119BA6B54DD89D48A70867880942785089856E54B4C3A2707F44
DAF771A4F8C642FE5E99634AC87E483570E2A362AA134C1D4308FB33E6F53478
763986D70FDE72E44C3EA00010424476A8EE73246ED62575CDCE914272A8F459
F167FD308C95A41879CC539C09DC52E04A4B500FE3367FB78108208D4D86AE19
E243B7328DD7CEFAB5F7338B1B05F2E629B76A421FC62515D2FFA0BFD6627944
96BF3801E02DCD4925E1B19C6FF6A18AA6AEA3BA8D8A4112B173A27C54911A28
9A4953B52A6FA4802510D3F3DA39C5F3F82BF14931B9F3D2BB60453CB6087615
36F52AB3DA276A7B59F65F0F7B058F89CEDC63E876A35D634DE722A106547891
80DCCBC5FF6EB74EE24C0F3BB9F29486E9B810FCD519ADA58001316608C3545E
72EA037D0B465D5064A6D9ABAAA04FADE52C1D112372F5F50B62E4E6CAEBD9E3
4C683CB22A4A4E517F6503AD5A0A3F22926BF875A86EC88920A0229625A274E5
F79BC18A2A75766809B720DE733E2AD685BE014B62759399EAEF8B4BB1CBB268
FE6620E7F6A13E116159AE831E4152EC9B7AE5A16BAE50167B1DC5AA95B6DAF0
79B86DB21561E71C9D086CE3A51D07185666E6E25517E160636A69B15D8DF89A
2E78784DD12B29C99CF0549313722B2F6C2CC9A30178964B4A673EE6824D52F8
49F64A60A02199C581A6247BEC5884127EECAF008B07C68F9783FF987C5558A6
DCD6B263E3573D2EA6BB6C62141A81C5D397035ABF7BA970CEF72792979F188F
76F0F2299767CD3698C847FE83C74429B91C5831F822FF716DF41C29980E8B33
43550BE7B3C7F55F7D52B2D405F95A71BBCE369CC66B827E1E19F16040140166
1BDE8FD6C9967E6C649739C564DCF43C3510A450D4D81D46E1000B6D4E839F61
A831D340D8A00E3D757E8DBF6B5EC8766DCAEF19A3B7FD1313D6EBB93374DA71
D32384616393B2378622A7A5D1984B5A69A2B2DAE2722FCD1C1B1B5518CC35F7
A6B1EBE66039838630F35F0AF5D89448F4C6E052517CEB71717BC4E232465908
ED237B4E9729CD57409C1F7CA10CB644878227C5757DB075231895BFEA46C6CD
3518B580BA7064293494B4E845E3316E2573D90680FF7D503948C1D8E6F4109F
121687BF556D87F52B113BC0E8D6E3E12DF15E9CC37A88D33DC8A837B4704406
1BB3BA5CBF6265FFB626B8D927DF2F39D0DA3EAE1CDEBED0CB5BABB7EB802435
E6AD93A096258B227A40CDF36185ADDA495F942769B93F0E36F89DE7FDDB91B9
474A8A26496D574C1887F22B461FC4A1230F1C4E6088DBCB1CD87EF5BDD741BB
054CAFBC7BB770F3BD474562458ACD995611CDF3631E7EFAB41BD233860D04D0
DDDB48BEF35932F1071A79C9C70903B9C0FFB7B11C5D40C076D0181CF1ED3A0D
5A8FB1DE02CD4FD01AFC9DBA381D130F98015678567C0ED428D80FB22206D970
5E4C48FAA6E383F97CFCFA8D575AA766C4DF5340662A0454F37FFB6C8C8FFD22
988D440372852A9694E4FCE0FDC24E8DA275FD4F4F72FC9D234416AA3695CA48
4F3D198B275E1D83AA053C88A17B2E392E8330F91062E41C5E7B370A4CACDCDD
E033EDAF188610CA464E9CD27119027EAA18285B266FF717BA9FE9B5340FAB85
706BCE44379C031C3F37EA3A631E2D5D914E9FF192F2621DEFC6E14F7E69BAC8
D308A8891C708C2172701E6EFA6C690590695009B0C56965A533E6707C7F527F
F6858109FE8F9E63D897BA0934A49A96E79B19EF02C15D0AB273EAE0E4C163A6
861837562EC68A3DF988B864B822E4BC09B498E393EE5B7F4D5357992F6D8C8B
9E1951DA8E84CE72681FAF5EE685C5F8A29A38CA94D3F728929BE8371D9A963D
EEE6ED9CB67549175718FE22328FC3356C5A1D63F9CD6C540D08D499BB2BC9FE
41E797FDC1C3CE373C12AA0AB340A8F616A1BD6B4FCB130C613681864EE737F7
1099D3064637F8C73A8ADE0A753CCB9D64BD34040AF068B4E9B55520B129C561
2B04ADA368E75CCC7DE86D73052F7BBF3C3CF5443F03CF7C7A4C62DEDD066DA1
C061356DED2876CA7F7DFE313436903F3F1B405F2610AC9DDA957EB658638D67
1327682733F62F3327589A7E0691CDB7C01A6B95E34DB3D837A2ECF2A65D9FE1
3CE03B4544962EADD3781195A1B1A39E53B8E89C2967D350F75F28F0675312EA
6776C651F35FCF210876171868C5ED5B3E36D120389AF363A8D67761C0F2A1DD
706C806A8034AE956E0ED388303457FDC09D3D661010682EC3969670D92FE494
406B1DCFFBF7F7AC56CB04E8ABA9607B703E7A2A5E9151F35F11A3479B110B07
8F87BF7A118F80B8C34D09ED9039232440D49C70156513182D0A3A74148A7B26
8A838EF961E3CDB73770338C083C728998BD1AC0D43F1AA655059176DFC6B634
B92086ED9CD83DE07CB28318C7458FCE101E307F7BF6AE29273EEACF72228380
E75139BFCB26B0073D6C92F425FA0E6FA452898844BC982842784C178ABEDF04
5926FF22D9EDE100579720B119FF8407B8F8BA5135DE6E425897FA4DC772084D
E47E1975775B62027582FB88C242E4EDE51A11F561F113C33A7D5FF2A3EC4464
CE6F1E310115F1B8BA64F0AA4D566F5C5322CC009F59C5DACD729608CE8AAF3A
48C729E5C38DB7A059CD5C2A40FF9AC3F00B1260F9ABE8572E66E0B3A4B193A2
C3AE4A82E26F40F533B9FFECAE91870924C3113CEF9F5E86FAA55E9D5ACA7857
ED3DBD9840201417FDFAAF0DC9A6C9F828FC71A679EDCE7F3D6A0B70E641C01E
E8CE7305761322D36C0D2A4893BEAB0BDD777427F938A75C79F211AD86341CFB
1AA8F38DA6D1E71520E0E1CBB2409B480BB3C4B6CB2830B3817F4C80D8FB450A
08C60A9477CD633BC76FD991EF372D5C303F1BD91512F7C4CEC0813D3F7ACA60
F3249E687BD56C933380E1281C37B990B35DB852337A5581E17525909FD73ADE
EDBE29EBD2EE9D8723A6E28DF04768CC0AD0EC2D9A0176EBDE252361BD5F0DBF
2A981469BE2D7C263F5421E27EB3689830029CD5FEAABCABC1A07A01FD79E793
6A45169369E01E9DCA145A51F97EF830519C2A61391D2C894E4FFED1777C2187
F5E1A2260C9A38189F8B8C86A177630EE6C0DAFBC40850C75B5AA3F713B2A451
AC976827E5176E8D07D1DD0BAB0A7FD5DCB1E11D974C8BD8586D0B44DCAADE8A
D17AFB95FE50103F01016AF0B9522C38E22A553E4D2252D9EEC7DB18E20F172C
7429021B4EA191A19A2C0895B4DE2FBA0A1AACB91490A3347C1E8C514B71B971
8CC31AC8CC05EBA1B53B169D9EA0455F87F05F00CD4163AD65481CE38557F097
73DCC1FB46FD98C9293DFB3389DD944CF0B97A625E696027382F87A30A31E9D2
3E02BB31AF1A1F18566EAEF8412493E0CDB2D3CB13A6D639BBD9DEB0B3B90C04
471367E29E16115A546B05FF24BF5C3A0DF3CC38A014759D61AB7A6518CC9A65
CA594A4AEB07CE71BA68010FD3158569083D3ACB379674F05B5C2303F2D06F1A
AC926688173C8012C6C2ECB0F5405BF370B45488F0E70612603FCE2A982CDDFE
EE1C519D623037D398205450D0226C556BB06CE21DC15165D0C86C107E0E151A
0710CBCBC7B73B10C153AA6387030F8CAE76FDB2EFB32AB56AA0119B12BD0190
EB4B23B593786176932130618C8E2E5EB517F5079F28E91EE829D10EA96E9113
6B9DB4AE330BFF9360D93A26BD00C074EFC901A37D0D508913BA9FF873875A21
E837C48FEE2179DF6FB59C264E9CDFB2C9651E6CF7ED7DF68A0E7139AB929E54
C97DEEF25CB6CE6C61524A65B275F0F1D250DB3648CEDB7A58643D1C64E6DEEA
7CB4E15FD727EAF4CFE608E660564D972D35EDDD2A71DF1C4E82DFFC036679A6
69608A9B3829DF43FDF9A4B7DBAC147367B175F1BBD942000EC807571C66CBCF
AA97BB1570AD58E32EF8D70F6AB79683319344C43C513C35AB737E4524D2ADC1
9254075422B20B5E3962C28B72DAD9012173FF3779A17C4D92B28B5188BAE157
3C58F64E00B4469BCF9EBD01034AB5D300D2CE49F5DCB6C591E015E6142199E5
45DA3174A7B31FCA155BE79E19EA3C5FAFC0AC5BEF9CF39C2353552D5D6A0B48
989D3FE324A15B6CA922EA3648C55D7F7A46D05C11A2C60F3A084DDEDA9859E0
1733870215FD9FFDF33C9B83D4ED24D99E1D753C51EC33B6D56F5BD022F4EF4B
5B2B0F57E97CAF255AF70B480888C335B9EBDD141FE0B70893CC4EF461739567
058F386432F24E9A6C7069C0FA5BE2CD4E02D80CDF95E9DE1D0BD8F7382B586F
1249C22697037B215D4074B084DC6D153A75AEBEA33FBFE95DC466F43847C3FF
0DFD29F397413DF96CB487147959CE1627CBA994EC9B60B5F850DBD3FB1835A7
43626CA59318C0150C9A6C9154501A97CC347DB36015B76B2274889643A366D3
8972ABC32103074A275B916CC98E625B6B9B795EA3216635A73A7A2FB9BF2F00
5C2B59774FFF9295D1C7B58458ECEF8BD4F2DB2BFBA1F30E9E697E7A6491E04B
AB1595B9DECC31BC5BD1E6ABC256E180AD8AE22DCB49E1A29C927F482CA1AE51
5FBA2C01A0F9A7D2A3A464D6C72047727E80CDFA14F85F775501D67285A3F24B
D77EA831AB1FDF763B55EC5D6C9376B45BAF024101CAC9BE71AD67FDBD24FDDD
90CC4789952162BF6F1F717E990A9493B42F2741217518ADED7D6977122866E4
0A3D7DBCD070A91110FC053B28990AF04532CBA83C3502E4B60AA34DD655B86D
FE5B708D9059F48C105902D61A6EC987AF34C3809ED880CB09B2562909185E08
3E5A4DEEF6E2E02045888A0870AB195ECA29A0C61CB4B4E5134395421BBC5436
6A866B6B2C4875195DE0A7BEE81C03447F3D1FD2B015D735B8C849EB21D0FC4A
73E8E34F13FFB56C356D6DF565F424B03A0B895F70E96D0C7415F3000D643254
0DA97FE6E85379231B45363EA83DBE16F47D42504B8411BF4474084A16DB6CF1
5355BB16F88A98E669C85E7A40FD8ED237605A1D72B1812E034FBECB12D0B526
A0D17DAF55EE50C72E43BF6BD50265038AE71287C094BF385C74E83FCE0DA2C9
56B58B7C873FF2BA9D3333C5705944F040C99763B83E89BD21AAF4FD702A36E8
31B1117C4AED32B2FCF5C93F4831263D2684A434F73AF3CAD99DBD2A6B46332A
C294B7F178E89FD622D777D1DE84E8F25FEE49F2BC6C3A459F36877777868F2A
AFAB4ABF10E6A48EB2BB6E63BAFFB149B730F5007596B093D507A56F7488AACC
1FFBE07456E085EEC1943FE0F1F17D085FAEA2D0DFA1CDF65F94D778894C6466
D621DA14840717FCFA814DEF2DF7C5B43AB92A9A36116DA2AF548516AA60A437
569F0C3477106166CB7752E46C30908B72F23BEC54CD956333B95DBDA59DB9C8
5B7B8B751E9EDE78BCE6C8C4B2E3824EC213F545708E4A5AA46473165AAAEB4F
F09F3FCBA24CCB2CBC8321289A229D0D4D1B5624CF9575B9A74C3221B3B9D141
622B54CC5F9EC337F0E67B9ACC04B2DEBD99A19A7D6714C0FA493A5C4209598E
2AAB9361D7789614B709602B967D7641F5823ED548E81C12640FB0B06B04E2ED
120FD4E6B8EC875F16C52B3285CA1B151ABD917360E3C29F73E10179F5C77E70
CD540D35A6055A56FD0727DEA7BAB8B569FDFF211B5730859645191EEC285165
59D6276B10B1CF6047DF92D5D7E749CCCE82228E8E1FEDF1C8348899129CCD8B
C2ED8B5D1D34CFD9497FC577033B1E73F26158660671E5B3E204CE5D79D0F048
E4F22BA2141D0F7714031B579640612EA3EF22FFA2AB827653893440AF25D4D5
614DB683530BF9AE05B267534C5B4AB3C5A5C645ABF0BA83701C1FAF26620174
FA985BDB799C3307AD0F5F79DFAAAF662B5E5E9A8CA554F074084B00DEFA7E87
F0B69E83A3326BDA9D653357D18C07C5B04C7D04438D5701894543FD5A01B89B
0705BC9C2751F12BF1C117F98EF32D5F4422F746A935367351AA90B785FF9C3B
D001BD43B724C85B75D6DF819F411DAAE587688217AB08CC2E2CE35D8C4E923C
B97476426A7538C6C667D0B7510D2AB6BFB5AC7B10E1F3A0DA4106175E63F4D8
8FB149FC72167F53B865B70FE3205336F57E0E4192A797B1089558A008EDC545
33F6BBA22C2BB341AAF33763CBFE9C3ED4021A9949C4CB9A89EA0AEA08A8C5FB
9B45F62700853E7D46BC21216CBC48EA4F74B7F0351F7AF2EB2B5BC7D7F0C6FE
C4C5A2DDAA223205392456FEC1ABDBD00B7CB01CA58AFEB0808989FA92DAF2D6
72DCE68464ABF49EB4D8C6F370ABDAAC6E802FA518A81705F1124350CDFC17CE
334C35C48D82DCFECFC43A835B2823AEC788F2CE03B899A1A0A83FD319BF5DCC
3E8D49E23C5984B44FE8C84DF97908E3D6F9BC081351EC9F9663B49A5397BFFC
CAE70387D6420950F5C1728EF973F310B783B1AD870CEF40D2FA7E5C37B56A95
DAFB2CE54F6BA39B2697F9AD646EEF4B8A747D037CE92DAAAE19B104F6B26B41
8FA113EDC233F60D0785FE5A731414658390F2B14B755253EA078CC1797CFD8F
CF8B375348CD6BBBD6E08557C5671030C245B53AADB63BF7DA3EDA001CABA8F3
8CE6BEB514A11CC4BE3A72E6A467A742422AE93F358D4BB70FC7AA6C950F898B
DE2137B4FDCD932AACAD4F1B0C3E5A348CDEC910000EA14DF054DCE58340910C
0087BC9F4284A23D7DF7EEC9D81207FC70F3AE0A7C32741D2F9C9CDAADAF4000
FC868F2D897E224B94E383190F0591C4B5339CE844B6D07F4A09A85C47758573
27EDE15311DDA7D56D221B9E86FBAC12EEB42D3D30FC34B13C56517D16A4D53C
96667CE5E104673353658C0BBC53A6A173BD9C082A33183C9DE3EDF914F6C252
65D9D88E5AF8A6ED8507895F3BCF62B095E96D17545D917B0B8CE9C90E84B08E
1A4F7257B352E1FF87F2613C442DA4BBB95222BA8B4A0B5F552E9C6A58D3B2AC
729B4DC51E99EA9D3C79F493DEFDD6AD2400F77F3FE79B48615B5A5293974E7A
41C769966420FC38E40A3B6E107E776D6DE06D81D8D5C947FD50C75D9141CDEE
CAB27E17AD038C607EEEA52E8B5ABDAED879D2D93F67375C275CDFE534C3C1F5
FDF4071D2FA1227B2A25C19FD14DAA62F1E9A6174E24EB00C70DAD7ADF963175
9AA1824F606388CD3A3A6A96CFA40E86A063309F0776EABD2D79E8A2D88070DC
D0F5792C9925B70CD387B41F35E1648D135B8F2A7B51E1A863EBD9C971EF8F34
08ABD861F5032EA72AAEC0E3F48785C5BDC37CFC2B989B9D4DE3D27CFEF4734F
B967DD651BD4259EF563DCDE74C87303FE95DAFBAA944542D714C2EB6A8FF0D2
7172053B24B4516A8877DC6C4732F8BD741F09A35AFF0191D850A693F14A374F
8198913AE8AC808EA0508E2EF96D36491265B3D71F65D3B071C7BC679FCCBE92
27DE4E6CD78C4E869287F25BF661CBE1BF5D645E517F6629DDB9416B3A8B4799
61172A4939542A95560E842110F3CFA7FCC79257982499B9648A986A12EB6092
56CED23B1795D25FE6BC7FE20394BC777532EE7AF2AA900861C31DC74FDD6BCD
3AE7D3ACB39E0955C1613DE2758189A8C183EEB3A1345EF48C16E9E64442F6F6
2F1003FD69FC9CC266BF96B1907D2EF95C392C9F8625C908545EA810774E6974
5DE2836AA79608453E4978D46613C9104DC130C418F8A02A025355D8FB4E1645
6B61294883D9E85065E227F2582489877A4FC2F954BD1DF540FC47DD207190AB
B5D0EFE2122ADF2B9247F20EE2CC6545CE3BF3A4A3360835226EC803903154A1
9748C991529C9F658010686C071E7B4E36A6C39469D18FD62D460CA68258B44A
08705D6CF7717CCDF848AD78E9E38ABB51B49F146F87
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1728
%!FontType1-1.0: SFRM1728 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1728, tcrm1728, larm1728, lbrm1728, lcrm1728, rxrm1728.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1728 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-174 -318 1347 949}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA4DC69A02016AD2E6C71441AF87012AB28D4F0F6
05A1B80B954FBE39F81BCEE3BB01BA5C5E565B5AA6FC97C7B6B67E84357BA44C
2937AA743FB277BB74912DA3E25E67CB130405792F93CE2E46116C19329DE8BA
EE04B792CB05588004C5CE06F43DA6B4B7A32927F2C6F890A67FF20BB1365D06
3253F39A8AE19D733468E9F5471E11AC6CCD6414D32B064FC8EBD4AF9566E2A6
EEDC38EC94CBA2D168CF68A2446460BEE734A3DBA42E9E603A42A39D56C31B65
CB46AFB15FB6173722CBB1A11340FD4D60C9C1E5FE87804590AFD4CFC5BE2708
DDBCEADB09C259533E430B4969688B9ECFF89E492D13C71C38F5CA9ADD1FF1EA
5616C0A52C7FC2599A22FA881C576B2EEBC0E178815E97DB82FC6C2CEEB0019C
4294AB22B62F31451ED2310FF7D31077065FA4DA0C578E84DC5B45EBE5910053
4705EA0BCD13654FDD9853F9B32E4256CE9281C2A01C858D43FCD28C34BAD1DD
A9438AC1802E3A2F18A13FE940B948290D3423E7E8BB8914B605290D931A5921
2BC316BA868C0A90877010683689700681E32A9F65839CD7E737EAB2B87C9A48
BC2DCD592E530EAD50C8F49FBDDB3E4720A71674E5FC179BC0D407B00919537E
67FB521FF5A4B32317C44EDC5EEB3159FB0E6EDC040841978A5D3210CCB067E4
75A43DF2B7106A8423E4C5FF6A84003A1BE40D879F6805380C89A7A0FD2DA384
B329C74A98351F8B9220CC285996BE5D96BA679E7E673E405F50224B637DBE75
627575F750101AC80E355A8A64AD4BE9FB767FECA90CCFC12980C2ED8C232AE7
812378FCE434163479FB95713E191379AD62E816A2CA0FC200886C93F399D8E7
3ECEE5C370A97A78A6DFDC87274692B7105649C253934138591372BAD90CEC89
926B614ED01565E2CAFA4372E014A669B5EEAC9D16C2D43E99D94227767293A9
F2CA64A5FA797068AB8EE8F3DB72667AA8DEE63EE5D56C3DF27BB14C4E93D0D1
262054F1343532E74B5C69138850D48616F293B715F3C1C75BF59B802FFF174F
4542587C63986A42B54453897489BD392E8E6F9BA6D267FB65BD962A7A9F0CEE
FC0E41E5B4E80F6AAB41B7D68C5084966C420281CC6EA1599773352351F8BB58
7E2687D774A0BBEBDC86146300E4A14A784DE5277A027A91E51C94C882443A36
67BF6AC4874A26CBE7CD05B6BE4DDBC6DF4768664BF14767F0373B02D60CCC22
8343473848BEC02304B79F1C222A3AAA903BA2F075BFF945955B10D06902D005
1AD66140461F97C7AEDD615B9256CF538719621A5C5E9822E8CCF950345D3E76
7F4ACB9D01276FF63B62B80EC04AE863A04DFBF625A80BF2A0449D2FE11F4A25
35E72E07C6A26E593FD47B0297D1B413584325272087D1106B58BAB9C659D71C
4F0786F1445B84139548F119FA8E10CEF8144BE4448FF4EC6D6E5D5F84ECF74C
8115FFA28B23FA77F42AFB0C183102150A98556C86EC1AB27CA50DAB15DA2B27
FC4D6E227A075A554F9FAC65064887899C110A23D2970B441E2C951A003730F1
5B790D08E28822E7347D3A27F9C8408CBD2F26BF5F1842A768776F51C22CBACE
6B2A222BEE7676D8ABC04F72E17D2242E18D23EEDD237344E595169AA0AAE362
31CA92D437129BB809BFDD9D49289F9FA56B907D4E496BB4EC02874B12AB3074
A7418C47789ECECE1886FE8EDEFA7D9B8BB80BD5DBF2BA765273868A1B849F6C
DB0C43B3590D1F350291F9B565C6AE73524708E76F2B889A7B91C4D45DBED812
FE368B717A6973F3BBE556E941F71ECF11A3ADA40E5DB9936C8FE74BC3FD7DF5
41942E0742E2C65E12B77DB6B54C920160633B59C2DE2E7AE4B24F24DC8168F4
7232C0BACE98221FB06025FB4382C8272E752137BCEFC109D831EF664B5F9258
6FEAFF2AF0451329383A216191BFECB1E11E22BE1943425A0ECE0514405834AB
C7308074735AAF319B80E289028B004496EA3FC50820796FFE54927511754171
5FF22CBC9321369F36E9638736E8AA93F3445F830504CC3A8152AEE6AEF20858
EA23C62ED023C011534577D48E858F96DA78DEA0D58E4379CF3DEEB5DE1A7A75
19E343CD69CD441F3C6B4DAB5BBBB38FD3F1EF900D8D5FB86FD9440003BEDCDF
0521B824926A41EF30F91B791B6F7D1EF65BCC732233874CB0849460D974075C
16716CA6352737930E0F89FC00DC0982F064CB6EDADB9CFC98C8A8C9C5F9AAA6
971857C0131A24241A0C3E5839FA69CDAC50C99DE493ED0DCEF137C83C168230
EED2C30678AE0F46A40361DD9DE4D68A8BCAE9B2206A14EB68CC5854E593A5F8
193B2FB0A7BC894B5D381CF175BF4A02A4E11307F6B939DF4E71403DBEECA6CE
AEABB67B5DA1A5FFD49F86D7386E2068818E4044683D59EC4B6A07A18A480743
57B76671CF2A93C77CF3B9B6A5732CD54201286F8FCB4C69B80B9C6D1A29705A
C4163A5277821E7C20DAA4E3FBAC0CA1E1FEE70F196319A811B623E7DB883B1F
2DEBE315567AC1B7B06404E61479138E8CFF7EACDBCA8A7F3C8F0C1521CD2BA8
3608C1DDA20C47B6BDD50D3ECADFC0ED0B9AF7F3A5F0CD1060E54DBE0040F5AC
A6EAB97FFA336F406CC91C048711EF040EDD5A66A02FE509C306CD759B2F6F44
3D3694C0BEA63E78B26E677BF9804BD0F19FDBD133BEDBB60109AE1F4BCB4012
96DD280116C1AE65B5769470BB43DE8DD9BE0E916BCC846FCEDD445FAD9F901D
26B925D76AB111BBE6BAFAC4B35EBCBD82ECC93399F2378E1AB02D7E11E78CF5
EDC8CE8ABF3F247F1EE9335E4581D1D2EF99AA6665F063D0E8AF1E4E777C38B8
39F79D3EB87A0AEDCB65F8D40C743CAB9B48F5D366082E77405CB38C7A634460
38AC10A9087E1E4585E2A6ACCDF43883865AC1C1DC4AAAB6C452EE90D2B38294
ECFC443320FA066094F341FBA2130BA452FBCDBDD35056513B84F74D7C167DE7
86439FAB51DD48344E9DD19EC876CEB1611209D39D38384AF424D69A724D4BF5
E67442EB561D4C1DC4EE507F79A3A776201DBF5848EAD023DCCB9EA474CD386A
EEACE95222A130E97E6D408712B81F790BD5F5E1831922A7172973A1A4A64437
107F8E39D130F15FECC354CE0EC01307C7FC3F0B78BEB3B6C103F633F3FC889C
A314A5D35BCEB6715743F0AEDEFB064DA4BD4BF030D8F3BB97E3988D99878E0F
E8AE9E0887E13D0D965AAD25730449352FCFAF1EC50BA2BE98552911AD5ED98D
F3323A7BB8B711BC075B116894C7BA9316BF20815A75CEE8A0C14CDCF2879A0F
45D16C05A5A7D17103F97F11F9144A0109F7C60572E01929AF1BBDDFFFE449F7
AD9BBD14E39720CD5FFD2D36840A68398FB360A92364C427E102150AE973E128
0C2D1B69EC79E2F70FA5AF7E57AC8EEB3811BE2BC948A926FBBBADD1B7D40219
636D2D1BB7AC0E8B4E338F1F8AE37490C13D19BE00ECAFAE936514885EC58DB2
B04916739586764EBFF4319C13B7C8ACE5F6A072F168B075148D4C3ED2C0CA9F
A172E0551A37C55A715742BE83214E03DD8EC2E8F74E061C8482B0945241080E
19A94D632BB23F86EAE1B0295DB72601D2417B8847590F9EC86E2B28FAF168AC
45A4FEE565620690C78A3DAC4B7E091DCE521CDA21FC0D79430F7F3AA71E7D52
01D312860886BA133EE260F953266090733BA17E46ED19423DEBAFF33E879B05
C584E536D03CFF0EEC9E5060FD20FCED2FD021B8CB1F3E28B02E7E587973C1DC
A5CB5F7B296BCFBED033580A1432B6A5733F2843807638D116FD74FAF826D918
2842260AB1E11B361B175BD9496F6190BEF2632A955EA285C94FA1C6AFEADA04
4ADCC1E1AD42918C8C67320F6395F0D8BC44A1BE58EF810A613DDA0C42204B71
558B53559A8EA91F4E34AF897012B7500FCBBA6DF033CFCE77CDB4FB7E107E1E
E2E5E37D207B168F14EF5BCBE54593D56FE38644E29263F1D44E0332588C5AA6
C52E0F365112606804D0E68D704039DAFC5A920686D26647AD32CE4D234999FC
5108D5EB921566A678954C549E7F2F0E53AD0E88F2420C54576EA7559E6B6114
267FC316FE5FA1B41BB9AE822465013BCD5B69EA89644E364234009EC47D4817
BBA49922824A46BED7EA827FF69D90D0697D7858C28A24FFE9FD610D0DEF5DB3
8D83184BCA6CEC10B494B854649D642C43C1F55CDBA7992AD3888209F33DB6F3
17B9F4AC0A9A99D550366B8B9ED65C0DFE3D104403B4F469068B96F7A8A1F611
76E5ECC2A0BD0EA85D9C7B2418549F7503F6D2E4A09B4F6303D038DAFC2F7A7A
E346DEF8433E93FF75ED0635D5874A354C7CB1E7D98B2C5336772153B097CC1C
26A2A920CA26BA1118B4861C9900C092C3CC9CDF83822F2CDBCA87A1533DB0ED
A641E42B1458C0FF846CAEBA5FBEE789B157842A1DABF99E00178F2D7D52BFFC
01B4B0E12DD9F3C61779DE2D857FFF9BA6167EEFC14E3CA3DDE2C62A9EAA7B5C
AC4A2E427257D4BA6CA997ECDC75C8394C05AC0A20E4A18D66878900B1E50D2F
A8AB9C41181A1A400D3E6F81124F49FA708DCD302D6A3AC106A00DA8E6FC5345
FB9E3DA949129F0F2E62539E6D3B1CA8E2A8BC13AD0FAD9BFD353ACACFC03364
C7CCADC3CD919C54DEDA6D8B06487154099A1C24F67E53DA34DE10D9966F1E0F
DA64CD94A8DBAC6B74F6B4620EF97ADE3EF0D9E495C71C16E8F2201CA9FDA901
47E7A9C01FDD1CAFE089CC39AEA4A2F02E9F1AEF9F795585D5FBC9E8A17FFA5B
8025C729C9DDBF3DE42F97DCA39EBDABA5F3F902396366C48AB203BE7DE00AC5
7C8E984E3D4C399C4903ACB7D82A16D2AB62148A91AF46A71AA8E3D186FA4071
3C2AE046ABC1E67C93D30DA9D450F67B7FA14894599077A92B39B9E306D730D7
1EFFAC02A91ADE9BB638CF6C497D0D1E75DA0DD648A764B9DFBF3BCF6A010D9C
2F9CB9F513EE814AF4FB7A1805286596FDE8EB0520FFFABB84BF7C0744C05802
FBE81074457339B1BE26C031B27379028F3543C4308635E3BCAEF764EA473DFA
88D07E573AB08ADAF6F2D7D9F37C799E68B130781E1660F125AFFDE220C5A25E
1E1FFFB8B1FE4CEBE7C9F250F58B05BCF4189F52FF5723D85F57344BD20B1596
F1AE70CDF44119BDB4EECCD9EB07239AC61762C71784982FA43B4D0BFFB7349F
60E4B349B33A04338CF4144D61D939425066E8CDC4B86D3B1612191EDF088D1B
EFA38DFEDD1682B1C24D95EAA9A52346877976C12BB7A9F83235A845A9EB1DE5
00A42D124B6E86330A5261401970E95C970D7F3EC78BA017098E3EC6B36D2B28
C06E98438154B6054165D1B18A4445F192668A0F4AB8C27EF1DF81905CE54905
2C3BD503061CFDBC321474E63FE271F432F37EFF28D667F72EFF97EAAA7A9ED4
B5921A5C4B2B0B8786052C5E859A52E4BBD8688E4C9A891D0DD80A5A0A0B76C5
7438BCEC02A76A08AB6D73089973381451D49DE799BEEBB5C0AB14FB9BBB316E
DAD6BA02ED8D5E381B0E3ED8525202C1B7D86D151FCD90F0B8FE8868C75E3951
789F2E9B95C82B7CCC2EBA81F8AA33822F095963921F2D5D46BAE10550783523
9CD822885F583A3D862796F2AC06D3AC042AE92652AD5D73B202F32B4021E2BB
3ED6E5863798908013ED3CE631E200296EE741F16B12624008C6DC073673C30F
5ACFE803EEFA09E4752A187C45D80938E44C4004A915C10CE56E2B7DE4BE7E87
F54ABB7A5793953E26EAF91ECFDF555D5ADDC8C06DDF34E806EABF9046C00916
64403524A1C6FE77C016E24356EDEA215B206F6D88F9B651B72955537000EA4B
CAF6C85994F7F0482520A84966502E8436E323A2B45D40F20BC6985291611488
3432F3D294AC6098581E7137627406EDEB635AE0A3C17C821AFFD4047BC31478
092D05A2FEB46984BC19BF6E34E5623D6B111AF277E52D0399EB6F2622FD2F44
F72BA48DDF6C9841236414199EFB82B1D1E2E1210180657236FA7479E8DA89E2
BF9537374299863C85A30A293320E3D2C974E14B87484B9E0AA452F417D2751A
77AB4F090CDB32AC736409162BB25467C1357038C11FD0925003116E7B809502
0065992BC4F548ADBB4AB698BB31621F8B0721BE8C62E847B46BDBAD49BD7043
A0E3C1D6A45FED7F1BBDBD3E727AB1FB411BC698610D52324A9D183B81DB880C
FF2F528C7790816A4492021D30DDE7CEEA8A828EEA6ABDDFC0554329115E4545
F47C4F74446EC03D6EA3220A9C5A55D41C1689C403B5240B78010627DC7E2E43
944A9D23FF9C7B9CC22D63DF3DE93620265E25EA62F758C167B68C2D99A28426
063BE7EAF58F925FE100028D8F4BE63C08737A83BB0A73BAF5344908D15F2707
716ED39E93C8DCEAF27B8879514DD90D7635D08FB4B51621BE4AE110EEE32375
4EEA55375D110A72FE0C4E26078ADF1F6C0B3FA787F9B3B345FF864D3E03C58B
EA6DF13574096C5C946498BF36E7E40E18031D6FAE7F025D40FA70963B02012B
ADD690158D7D0F16B27583666C59C1E145C841EB7BC57EBF15E2760FC4D09904
FB5A656657E642D0A5579D01B5BE8844E9ADD0E992811D407F1FCDB420312E7F
FD19F5ADC52881671C022B3F45EF2D3733E23620B810E0B769E8CF67A88F1EB4
FEF00087922171338CD73DE72BADB0410DECAE5946D988CA737A91244CB15350
D3994CF983115BB100E072EAAD02143212935BEE6D5D134BBB966C93EF303046
0D9BB955D7337DE37F6838E6FF5E435A5FF108DBD2D458E2E69612797D093E9C
97CF96E6C7B2ECB410CE58E8362D50C2BCEEE3D217457420E70284EA60D29599
F68D6C77E1F3BBBFA1E2A6BF26EE6C72BCDE27DD7A49618286C6ABF3AB531AD1
62889822D92210EA339608E8AB2CF9BCF4DFFFE95A3961D1D8FB359176FD0724
9CFD14A0FEB70AABB0647B421567586A3FD002A6CDFEA8E16EFD209CE7244B48
4BD50E28C7F14FF052C1AEAD8DB405CFCCC868BAB1342077659DCEF32AAA5462
535CBAC9F149D25A181C9D0885B4E1F28717E4033623D723AFFE7DD48E28BBB9
879AF889084297202D898B39D404B647F2773160564A67B0089E16D6E968465E
4070A6B4123BDFD06CDDE8F4C207BF769381698DFB0597026793A41DDBC7D4CD
3117102F1CD64A2A0FCC128319D2F36022F725EEADB1703140EC33A6145AA3C3
F87C9E32A373D6F74A7532854D1E5D64A8B60C2432BD7BC94BC58046441D2774
C668055061070A53317F59A78A9A1095C3DF185F8830B56A7190DFB7790AAF4A
68C2B902DEECA5266A5CDB4E1800DA4F7509DBCFB8FF285E30366CB432167EAF
4F39421A86853281967E0C9C9060D4C833585FE24BAD9AC5E7A9EA14EF663469
DDCA7363D91F774FE5E5666A79F4F6D7F2C6FCBA8CBE297EBC75E0FBCD949170
2057DA8FB86D3660103C55BA67E45B92D9FCCD185C226F596BE41FDE89B8DCF5
C8EB047E2673CC92AF7CBBBCB3470F1ACC82AA152D3695785745046DAF5FC147
68EC88ED2EF682789F6AFF887F64FBD8A5128C6275411FC8D65715B4A23118F1
5366D02D1DA7279E36351D3D97F514950C4C1CB1C5B200109B9A48798D8B644F
A5F877828043FCA502AFC5DBBC1ADE0304DD932C9862F6AD65D2C561FC9E77E9
4F79AF02E159E62FAE2150390B875EF06676CAB1E750E68B814C55D8230A9F34
DA3B414D5C0537F687523FF84EFEBE5AB42CB3EF0FECEA1D8477760BCA0EB894
240D80EB4F9B075BAEEB9AC846018D625501430304043CB66EB2AC82CB0B52AE
F71B7291821D9115E693803D3CBE2124F32F49FCBD867611A6E3929022CF4DF5
332D208C39B0E1D64E52AF2DBC2268FC9064856ECF533AB4F7305E4A3B693A8F
9FCDA5A0B96886BA02D247255ADBC59A5038CC6353EBF2A0E2F46AF0972CD2AE
2999DCB4311EEF62105C95D0B450195B0176891818CB6448638875E9B009E4FF
CE4207B2564C680DB85843E589DDD0AC6C1008F8AF5EC26B9766EB93E0F1C8B5
8D5F61586089E0A8105F6122521E5ECBF3249E28F3F24CCD2CCC0C389EA2134F
46A35B1374EAB8D2C009EAC8CC04C3AD73987EB5B2A0CF7C3C7A24ACE7F86BDA
0B73435D593F4C9566A103A9E1F967731DD32BE1CA559C43EBE755BCB7573F05
EDE3DEBC94BD9352DD5840A87563B2F382482C1F40AB47E7859C95863DEC8CF6
7B56D07EFB6F3B057ACD2522E7F3897C4CC1E42C6EDCFB742C28D815CC5A3CCA
3E525F7E48B24F0EBEDA087C857A5DC71379D487BF099738A5446B0561D9FE7B
C5B68BE4BFA8CA0D79ED8176C2B6344532BCC2B1BA6B302AC14F588ECB7DC0ED
3945480A5D0F24227AE7A888925F31552A73F5A2462319549F325D7C2F9DEEC4
E50EC3A41AB02B29AFF4199972968AA40373E93AA24E8B2E4B69AF10FFC5D3BE
49B2BAFE878A4F6F53A9884EF0A99F4E58DFF1F3DF03AB826959C144E60ED6C7
8F70F2A5EA48F6022DB3C603DA63FDBDB05F37B5B660E1C8A2A9027F73D91F38
6F86567CFF660057A87937C2DD1779920766E31AC283073EBEAC4E24EEF1BB6C
5B781629E60A915217863BDE8571A65AC1EBC7AC85B17800DD03F5203AC6BA80
DA78AAB2A5B7C34E8A56D409C74761D9F712C6041EFDC1EA14532F7A63DCB5D9
58C2025A6E924A5E3EB61E19B7CA3B2948835C051BC2B65AB7204EC5F2F5A90B
D6F928E1C86501C4F1781FC6E950F1ACCFEC2E585D805A86D504FC32C764F0BA
C0B7483E85AAE4AD6A7A01254876B3B87516BC0DD59BB4C3E0A321ACFD209ED7
DD4D1DEDF989BBE8FA550C06E47A18D107616F38A274EE657E38EE3E5DB0DFEE
1E2D5030793ED7AA935FDBA5BE7EB6928408FEA3258263FE78083F6784ACFDF3
AFE4C7435677DF4B85F4E06CA47F15CDB93A7BCDA22510CEF2A117448F45324F
685207F6CE0E1F80DC9E395BCA9DD8F145FD2E7F93C7F82FB4739F659AAFEF98
196824D8234E6D9E9A88AA96D088237BFE9708942FF6EEAB33EF59A1D62614FF
245910B74B2AB9DBF7A62AF9C0DF8185628FFFB2D97E5E875224C16657791CF4
6964C40CB9E972A86AD186F4B7D14FA10767D2811612C70AA79AE9D84BCFAD1D
6E7EF1CC0F01E22CE628D0BE48D6379F57D5BFD8479E18AE4A97E94B3AA05CBB
E9CA60F6AA261AE30550859108149AC8E32BB07DB9EBD7CC048BB6DC3F80B8AF
7DBA42C9B95B3E9CD26DB68D1DF6E7CF60E6E199DE83BC759FB953FF0C39EDB3
143BC3634A845E034A67E01E5385D5D595422661CCA3E3BE8FAB58C05BB9FE54
4F009FFC66AF6340EA08CFC6119DE1D74ECEB61DFECA38C41CCFD142D41D0E4C
A58CFBD39730D15A48B921B82F5BDDE6F2940D378E0121047FCE0E91
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (rapport_tr.dvi)
@start /Fa 130[44 1[44 1[44 44 44 44 44 44 44 44 44 44
44 44 44 44 2[44 44 1[44 44 44 44 1[44 11[44 4[44 1[44
1[44 13[44 44 44 44 9[44 3[44 44 44 44 44 44 6[44 33[{
 T1Encoding ReEncodeFont }39 83.022 /SFTT1000 rf /Fb
134[44 44 44 1[44 44 44 44 44 44 44 44 44 44 44 1[44
44 44 44 44 44 44 1[44 8[44 3[44 44 44 1[44 6[44 2[44
44 44 44 19[44 44 44 44 1[44 42[{ T1Encoding ReEncodeFont }37
83.022 /SFIT1000 rf /Fc 136[60 2[32 33 33 1[46 42 46
69 23 2[23 1[42 1[37 1[37 1[42 12[60 22[65 3[42 42 42
42 42 42 42 42 42 42 48[{ T1Encoding ReEncodeFont }26
83.022 /SFRM1000 rf /Fd 205[33 33 49[{}2 58.1154 /CMR7
rf /Fe 227[36 28[{}1 83.022 /CMMI10 rf /Ff 199[46 1[46
1[46 46 46 46 46 48[{ TeXBase1Encoding ReEncodeFont }7
83.022 /NimbusSanL-Regu rf /Fg 173[98 4[125 6[83 86 101
17[66 66 49[{ T1Encoding ReEncodeFont }7 119.552 /SFBX1440
rf /Fh 137[51 3[38 5[27 2[27 4[54 2[49 13[54 72 5[61
76 1[35 7[73 14[49 1[49 48[{ T1Encoding ReEncodeFont }14
99.6264 /SFRM1200 rf /Fi 139[52 1[52 2[67 75 112 7[60
75 60 1[67 12[97 1[99 2[105 20[37 2[67 55[{ T1Encoding ReEncodeFont }14
143.462 /SFRM1728 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 TeXcolorgray 0
TeXcolorgray 1202 432 a Fi(T7:)46 b(Ordonnancemen)l(t)g(TR)1647
672 y Fh(LAKSIR)33 b(Rida)1701 867 y(2)f(a)m(vril)h(2020)0
1225 y Fg(1)131 b(RM)125 1910 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 8.94774 T 6 { gsave
 /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75  setgray
 /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 8.94774 0.0 8.94774
  /Lineto /lineto load def 0  setlinejoin false Line  gsave 0.8 SLW
0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore grestore grestore 0.0 8.94774 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  8.94774 0.0 T 41 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 71.58191 0.0
8.94774   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 8.94774 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 8.94774 375.80544 71.58191 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910
a
tx@Dict begin { 8.94774 8.94774 } PutCoor PutBegin  end
 125 1910 a 102 2002 a Ff(0)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125
1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 26.84322 8.94774 } PutCoor PutBegin  end
 125 1910 a 102 2002 a Ff(2)125
1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 44.7387 8.94774 } PutCoor PutBegin  end
 125
1910 a 102 2002 a Ff(4)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 62.63417 8.94774 } PutCoor PutBegin  end
 125 1910 a 102 2002 a Ff(6)125
1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 80.52965 8.94774 } PutCoor PutBegin  end
 125
1910 a 102 2002 a Ff(8)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 98.42513 8.94774 } PutCoor PutBegin  end
 125 1910 a 79 2002 a Ff(10)125
1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 116.3206 8.94774 } PutCoor PutBegin  end
 125
1910 a 79 2002 a Ff(12)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 134.21608 8.94774 } PutCoor PutBegin  end
 125 1910 a 79 2002 a Ff(14)125
1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 152.11156 8.94774 } PutCoor PutBegin  end
 125
1910 a 79 2002 a Ff(16)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 170.00703 8.94774 } PutCoor PutBegin  end
 125 1910 a 79 2002 a Ff(18)125
1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 187.90251 8.94774 } PutCoor PutBegin  end
 125
1910 a 79 2002 a Ff(20)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 205.79799 8.94774 } PutCoor PutBegin  end
 125 1910 a 79 2002 a Ff(22)125
1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 223.69347 8.94774 } PutCoor PutBegin  end
 125
1910 a 79 2002 a Ff(24)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 241.58894 8.94774 } PutCoor PutBegin  end
 125 1910 a 79 2002 a Ff(26)125
1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 259.48442 8.94774 } PutCoor PutBegin  end
 125
1910 a 79 2002 a Ff(28)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 277.3799 8.94774 } PutCoor PutBegin  end
 125 1910 a 79 2002 a Ff(30)125
1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 295.27538 8.94774 } PutCoor PutBegin  end
 125
1910 a 79 2002 a Ff(32)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 313.17085 8.94774 } PutCoor PutBegin  end
 125 1910 a 79 2002 a Ff(34)125
1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 331.06633 8.94774 } PutCoor PutBegin  end
 125
1910 a 79 2002 a Ff(36)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 348.9618 8.94774 } PutCoor PutBegin  end
 125 1910 a 79 2002 a Ff(38)125
1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 366.85728 8.94774 } PutCoor PutBegin  end
 125
1910 a 79 2002 a Ff(40)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { -8.94774 62.63417 } PutCoor PutBegin  end
 125 1910 a 102 1978 a Fe(\034)138
1990 y Fd(1)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1910
a 125 1910 a
tx@Dict begin { -8.94774 35.79095 } PutCoor PutBegin  end
 125 1910 a 102 1978 a Fe(\034)138 1990 y
Fd(2)125 1910 y
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 366.8577 17.89548 8.94774 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 366.8577 44.7387 8.94774 44.7387   /Lineto /lineto load def
0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 8.94774 62.63417 8.94774 44.7387   /Lineto /lineto load def
0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 53.68643 62.63417 53.68643 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 98.42513 62.63417 98.42513 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 143.16382 62.63417 143.16382 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 187.90251 62.63417 187.90251 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 232.6412 62.63417 232.6412 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 277.3799 62.63417 277.3799 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 322.11859 62.63417 322.11859 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 8.94774 35.79095 8.94774 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 80.52965 35.79095 80.52965 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 152.11156 35.79095 152.11156 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 223.69347 35.79095 223.69347 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 295.27538 35.79095 295.27538 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 8.94774 44.7387 17.89548 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 13.4216 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910
a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.89548 44.7387 26.84322 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 22.36934 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125
1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 26.84322 44.7387 35.79095 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 31.31708 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 35.79095 17.89548 44.7387 26.84322 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1910 a 125 1910 a
tx@Dict begin { 40.26482 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 44.7387 17.89548 53.68643 26.84322 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910
a
tx@Dict begin { 49.21255 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 53.68643 44.7387 62.63417 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 58.1603 44.7387 } PutCoor PutBegin  end
 125 1910
a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 62.63417 44.7387 71.58191 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 67.10803 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910
a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 71.58191 44.7387 80.52965 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 76.05577 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125
1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 80.52965 17.89548 89.47739 26.84322 .5
Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 85.00351 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 89.47739 17.89548 98.42513 26.84322 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1910 a 125 1910 a
tx@Dict begin { 93.95125 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 98.42513 44.7387 107.37286 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910
a
tx@Dict begin { 102.89899 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 107.37286 44.7387 116.3206 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 111.84673 44.7387 } PutCoor PutBegin  end
 125 1910
a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 116.3206 44.7387 125.26834 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 120.79446 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910
a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 125.26834 17.89548 134.21608 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 129.7422 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125
1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 134.21608 17.89548 143.16382 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 138.68994 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 143.16382 44.7387 152.11156 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1910 a 125 1910 a
tx@Dict begin { 147.63768 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 152.11156 44.7387 161.0593 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910
a
tx@Dict begin { 156.58542 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 161.0593 44.7387 170.00703 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 165.53316 44.7387 } PutCoor PutBegin  end
 125 1910
a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.00703 17.89548 178.95477 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 174.4809 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910
a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 178.95477 17.89548 187.90251 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 183.42863 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125
1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 187.90251 44.7387 196.85025 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 192.37637 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 196.85025 44.7387 205.79799 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1910 a 125 1910 a
tx@Dict begin { 201.32411 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 205.79799 44.7387 214.74573 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910
a
tx@Dict begin { 210.27185 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 214.74573 17.89548 223.69347 26.84322
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 219.21959 17.89548 } PutCoor PutBegin  end
 125 1910
a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 223.69347 17.89548 232.6412 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 228.16733 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910
a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 232.6412 44.7387 241.58894 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 237.11507 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125
1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 241.58894 44.7387 250.53668 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 246.0628 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 250.53668 44.7387 259.48442 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1910 a 125 1910 a
tx@Dict begin { 255.01054 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 259.48442 17.89548 268.43216 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910
a
tx@Dict begin { 263.95828 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 268.43216 17.89548 277.3799 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 272.90602 17.89548 } PutCoor PutBegin  end
 125 1910
a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 277.3799 44.7387 286.32764 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 281.85376 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910
a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 286.32764 44.7387 295.27538 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 290.8015 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125
1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 295.27538 44.7387 304.22311 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 299.74924 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 304.22311 17.89548 313.17085 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1910 a 125 1910 a
tx@Dict begin { 308.69698 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 313.17085 17.89548 322.11859 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910
a
tx@Dict begin { 317.64471 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 322.11859 44.7387 331.06633 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 326.59245 44.7387 } PutCoor PutBegin  end
 125 1910
a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 331.06633 44.7387 340.01407 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 335.54019 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910
a
tx@Dict begin  PutEnd  end
 125 1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 340.01407 44.7387 348.9618 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1910 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 344.48793 44.7387 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125
1910 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 348.9618 17.89548 357.90955 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1910
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1910 a 125 1910 a
tx@Dict begin { 353.43567 17.89548 } PutCoor PutBegin  end
 125 1910 a 125 1910 a
tx@Dict begin  PutEnd  end
 125 1910
a 0 2109 a Fc(T)-7 b(otal)27 b(completion)g(time)h(=)g(61)0
2208 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(22)0
2308 y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(7)p
76 2587 4 100 v 96 2587 V 0 2557 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 59 w(r)t(m)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
12 w(-)h(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray 76
2687 V 96 2687 V 0 2657 a Fc(2)p 0 TeXcolorgray 90 w
Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(m)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray 12
w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 16 w(,)p 0 TeXcolorgray
63 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 16 w(,)p 0 0.4 0
TeXcolorrgb 63 w(i)h(n)g(t)p 0 TeXcolorgray 61 w(*)p
0 TeXcolorgray 63 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
11 w(\))61 b({)p 76 2786 V 96 2786 V 0 2756 a Fc(3)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
298 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(F)h(I)g(X)g(E)g(D)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(R)f(a)g(t)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 13 w(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
13 w(m)i(o)g(n)g(o)g(t)g(o)g(n)g(i)g(c)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(s)g(c)g(h)g(e)g(d)g(u)g(l)g(i)g(n)g(g)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
61 w(*)e(/)p 0 TeXcolorgray 76 2886 V 96 2886 V 0 2856
a Fc(4)p 76 2985 V 96 2985 V 0 2956 a(5)p 0 0.4 0 TeXcolorrgb
299 w Fa(i)h(n)g(t)p 0 TeXcolorgray 0 TeXcolorgray 64
w(q)h(u)g(a)g(n)g(t)g(u)g(m)p 0 TeXcolorgray 59 w(=)62
b(1)6 b(;)p 76 3085 V 96 3085 V 0 3055 a Fc(6)p 76 3185
V 96 3185 V 0 3155 a(7)p 0 TeXcolorgray 299 w Fa(t)h(n)g(o)g(d)g(e)p
0 TeXcolorgray 63 w(*)p 0 TeXcolorgray 63 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 64 w(=)p 0 TeXcolorgray 63 w(r)f(e)g(a)g(d)g(y)p
0 TeXcolorgray 15 w(-)j(>)p 0 TeXcolorgray 11 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 10 w(;)p 0.3 0 0.1 TeXcolorrgb 63 w Fb(/)f(*)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(C)h(h)g(o)g(s)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(f)g(i)g(r)g(s)g(t)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(r)g(e)g(a)g(d)g
(y)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 67 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(i)e(n)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
76 3284 V 96 3284 V 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
507 3254 a(r)h(e)g(a)g(d)g(y)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(l)g(i)g(s)g
(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 13 w(*)f(/)p
0 TeXcolorgray 76 3384 V 96 3384 V 0 3354 a Fc(8)p 0
TeXcolorgray 299 w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray
63 w(*)p 0 TeXcolorgray 64 w(e)h(a)g(r)g(l)g(i)g(e)g(s)g(t)g(P)p
0 TeXcolorgray 59 w(=)p 0 TeXcolorgray 116 w(c)f(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 12 w(-)i(>)p 0 TeXcolorgray 10 w(p)e(r)g(o)g(c)p
0 TeXcolorgray 9 w(;)p 0.3 0 0.1 TeXcolorrgb 63 w Fb(/)f(*)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 65 w(P)i(r)g(o)g(c)g(e)g(s)g(s)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
61 w(w)f(i)g(t)g(h)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(e)h(a)g(r)g(l)g(i)g(e)g(s)g(t)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 76 3484 V 96 3484 V 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 508 3454 a(d)g(e)g(a)g(d)g(l)g(i)g(n)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(*)e(/)p 0 TeXcolorgray 76 3583 V 96
3583 V 0 3553 a Fc(9)p 76 3683 V 96 3683 V -41 3653 a(10)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
297 w Fb(/)g(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
11 w(F)h(i)g(n)g(d)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(T)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 63 w(t)g(a)g(s)g(k)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(w)g(i)g(t)g(h)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 65 w(t)g(h)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(h)g(i)g(g)g(h)g
(e)g(r)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 67 w(t)g(h)g(e)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(f)g(r)g(e)g(q)g(u)g(e)g(n)g(c)g(y)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 16 w(,)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 10 w(I)f(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(i)g(s)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
64 w(a)h(l)g(w)g(a)g(y)g(s)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 67 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 76 3782 V 96 3782
V 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 508 3753 a(h)h(i)g(g)g(h)g(e)g
(s)g(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 62 w(p)g(r)g(i)g(o)g(r)g(i)g(t)g(y)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 62 w(t)f(a)g(s)g(k)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(t)g(h)g(a)g(t)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 65 w(g)g(e)g(t)g(s)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(e)h(x)g(e)g(c)g
(u)g(t)g(e)g(d)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(f)f(i)g(r)g(s)g(t)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 10 w(.)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 10 w(*)f(/)p 0 TeXcolorgray 76
3882 V 96 3882 V -41 3852 a Fc(11)p 0 0.4 0 TeXcolorrgb
298 w Fa(w)h(h)g(i)g(l)g(e)p 0 TeXcolorgray 10 w(\()p
0 TeXcolorgray 11 w(c)g(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray
66 w(!)f(=)p 0 TeXcolorgray 64 w(N)h(U)g(L)g(L)p 0 TeXcolorgray
10 w(\))p 76 3982 V 96 3982 V -41 3952 a Fc(12)295 b
Fa({)p 76 4081 V 96 4081 V -41 4051 a Fc(13)p 76 4181
V 96 4181 V -41 4151 a(14)p 0 0.4 0 TeXcolorrgb 924 w
Fa(i)6 b(f)p 0 TeXcolorgray 9 w(\()61 b(\()p 0 TeXcolorgray
11 w(c)7 b(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray 11 w(-)i(>)p
0 TeXcolorgray 10 w(p)d(r)g(o)g(c)p 0 TeXcolorgray 13
w(-)j(>)p 0 TeXcolorgray 11 w(p)e(e)g(r)g(i)g(o)g(d)p
0 TeXcolorgray 64 w(\))62 b(<)d(\()p 0 TeXcolorgray 11
w(e)7 b(a)g(r)g(l)g(i)g(e)g(s)g(t)g(P)p 0 TeXcolorgray
16 w(-)i(>)p 0 TeXcolorgray 10 w(p)e(e)g(r)g(i)g(o)g(d)p
0 TeXcolorgray 65 w(\))h(\))p 76 4281 V 96 4281 V -41
4251 a Fc(15)504 b Fa({)p 76 4380 V 96 4380 V -41 4350
a Fc(16)p 0 TeXcolorgray 1345 w Fa(e)8 b(a)g(r)g(l)g(i)g(e)g(s)g(t)g(P)
p 0 TeXcolorgray 59 w(=)p 0 TeXcolorgray 63 w(c)f(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 12 w(-)i(>)p 0 TeXcolorgray 10 w(p)e(r)g(o)g(c)p
0 TeXcolorgray 10 w(;)p 76 4480 V 96 4480 V -41 4450
a Fc(17)504 b Fa(})p 76 4580 V 96 4580 V -41 4550 a Fc(18)p
76 4679 V 96 4679 V -41 4649 a(19)p 0 TeXcolorgray 925
w Fa(c)7 b(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray 65 w(=)p
0 TeXcolorgray 63 w(c)g(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray
12 w(-)i(>)p 0 TeXcolorgray 10 w(n)e(e)g(x)g(t)p 0 TeXcolorgray
9 w(;)p 76 4779 V 96 4779 V -41 4749 a Fc(20)504 b Fa(})p
76 4878 V 96 4878 V -41 4848 a Fc(21)p 76 4978 V 96 4978
V -41 4948 a(22)295 b Fa(*)p 0 TeXcolorgray 11 w(d)7
b(e)g(l)g(t)g(a)p 0 TeXcolorgray 63 w(=)p 0 TeXcolorgray
64 w(q)h(u)g(a)g(n)g(t)g(u)g(m)p 0 TeXcolorgray 6 w(;)p
76 5078 V 96 5078 V -41 5048 a Fc(23)p 76 5177 V 96 5177
V -41 5147 a(24)p 0 0.4 0 TeXcolorrgb 298 w Fa(r)f(e)g(t)g(u)g(r)g(n)p
0 TeXcolorgray 0 TeXcolorgray 68 w(e)h(a)g(r)g(l)g(i)g(e)g(s)g(t)g(P)p
0 TeXcolorgray 6 w(;)p 0 TeXcolorgray 1929 5400 a Fc(1)p
0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 76 113 4 100 v 96 113 V -41 83 a Fc(25)86
b Fa(})p 0 TeXcolorgray 0 TeXcolorgray 0 407 a Fg(2)131
b(EDF)125 1092 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 8.94774 T 6 { gsave
 /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75  setgray
 /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 8.94774 0.0 8.94774
  /Lineto /lineto load def 0  setlinejoin false Line  gsave 0.8 SLW
0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore grestore grestore 0.0 8.94774 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  8.94774 0.0 T 41 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 71.58191 0.0
8.94774   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 8.94774 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 8.94774 375.80544 71.58191 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092
a
tx@Dict begin { 8.94774 8.94774 } PutCoor PutBegin  end
 125 1092 a 102 1184 a Ff(0)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125
1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 26.84322 8.94774 } PutCoor PutBegin  end
 125 1092 a 102 1184 a Ff(2)125
1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 44.7387 8.94774 } PutCoor PutBegin  end
 125
1092 a 102 1184 a Ff(4)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 62.63417 8.94774 } PutCoor PutBegin  end
 125 1092 a 102 1184 a Ff(6)125
1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 80.52965 8.94774 } PutCoor PutBegin  end
 125
1092 a 102 1184 a Ff(8)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 98.42513 8.94774 } PutCoor PutBegin  end
 125 1092 a 79 1184 a Ff(10)125
1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 116.3206 8.94774 } PutCoor PutBegin  end
 125
1092 a 79 1184 a Ff(12)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 134.21608 8.94774 } PutCoor PutBegin  end
 125 1092 a 79 1184 a Ff(14)125
1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 152.11156 8.94774 } PutCoor PutBegin  end
 125
1092 a 79 1184 a Ff(16)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 170.00703 8.94774 } PutCoor PutBegin  end
 125 1092 a 79 1184 a Ff(18)125
1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 187.90251 8.94774 } PutCoor PutBegin  end
 125
1092 a 79 1184 a Ff(20)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 205.79799 8.94774 } PutCoor PutBegin  end
 125 1092 a 79 1184 a Ff(22)125
1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 223.69347 8.94774 } PutCoor PutBegin  end
 125
1092 a 79 1184 a Ff(24)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 241.58894 8.94774 } PutCoor PutBegin  end
 125 1092 a 79 1184 a Ff(26)125
1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 259.48442 8.94774 } PutCoor PutBegin  end
 125
1092 a 79 1184 a Ff(28)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 277.3799 8.94774 } PutCoor PutBegin  end
 125 1092 a 79 1184 a Ff(30)125
1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 295.27538 8.94774 } PutCoor PutBegin  end
 125
1092 a 79 1184 a Ff(32)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 313.17085 8.94774 } PutCoor PutBegin  end
 125 1092 a 79 1184 a Ff(34)125
1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 331.06633 8.94774 } PutCoor PutBegin  end
 125
1092 a 79 1184 a Ff(36)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 348.9618 8.94774 } PutCoor PutBegin  end
 125 1092 a 79 1184 a Ff(38)125
1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 366.85728 8.94774 } PutCoor PutBegin  end
 125
1092 a 79 1184 a Ff(40)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { -8.94774 62.63417 } PutCoor PutBegin  end
 125 1092 a 102 1161 a Fe(\034)138
1173 y Fd(1)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1092
a 125 1092 a
tx@Dict begin { -8.94774 35.79095 } PutCoor PutBegin  end
 125 1092 a 102 1161 a Fe(\034)138 1173 y
Fd(2)125 1092 y
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 366.8577 17.89548 8.94774 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 366.8577 44.7387 8.94774 44.7387   /Lineto /lineto load def
0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 8.94774 62.63417 8.94774 44.7387   /Lineto /lineto load def
0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 53.68643 62.63417 53.68643 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 98.42513 62.63417 98.42513 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 143.16382 62.63417 143.16382 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 187.90251 62.63417 187.90251 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 232.6412 62.63417 232.6412 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 277.3799 62.63417 277.3799 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 322.11859 62.63417 322.11859 44.7387   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 8.94774 35.79095 8.94774 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 80.52965 35.79095 80.52965 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 152.11156 35.79095 152.11156 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 223.69347 35.79095 223.69347 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 295.27538 35.79095 295.27538 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 8.94774 44.7387 17.89548 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 13.4216 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092
a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.89548 44.7387 26.84322 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 22.36934 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125
1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 26.84322 44.7387 35.79095 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 31.31708 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 35.79095 17.89548 44.7387 26.84322 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1092 a 125 1092 a
tx@Dict begin { 40.26482 17.89548 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 44.7387 17.89548 53.68643 26.84322 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092
a
tx@Dict begin { 49.21255 17.89548 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 53.68643 17.89548 62.63417 26.84322 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 58.1603 17.89548 } PutCoor PutBegin  end
 125 1092
a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 62.63417 44.7387 71.58191 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 67.10803 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092
a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 71.58191 44.7387 80.52965 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 76.05577 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125
1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 80.52965 44.7387 89.47739 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 85.00351 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 89.47739 17.89548 98.42513 26.84322 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1092 a 125 1092 a
tx@Dict begin { 93.95125 17.89548 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 98.42513 44.7387 107.37286 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092
a
tx@Dict begin { 102.89899 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 107.37286 44.7387 116.3206 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 111.84673 44.7387 } PutCoor PutBegin  end
 125 1092
a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 116.3206 44.7387 125.26834 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 120.79446 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092
a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 125.26834 17.89548 134.21608 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 129.7422 17.89548 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125
1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 134.21608 17.89548 143.16382 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 138.68994 17.89548 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 143.16382 44.7387 152.11156 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1092 a 125 1092 a
tx@Dict begin { 147.63768 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 152.11156 44.7387 161.0593 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092
a
tx@Dict begin { 156.58542 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 161.0593 44.7387 170.00703 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 165.53316 44.7387 } PutCoor PutBegin  end
 125 1092
a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.00703 17.89548 178.95477 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 174.4809 17.89548 } PutCoor PutBegin  end
 125 1092 a 125 1092
a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 178.95477 17.89548 187.90251 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 183.42863 17.89548 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125
1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 187.90251 17.89548 196.85025 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 192.37637 17.89548 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 196.85025 44.7387 205.79799 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1092 a 125 1092 a
tx@Dict begin { 201.32411 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 205.79799 44.7387 214.74573 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092
a
tx@Dict begin { 210.27185 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 214.74573 44.7387 223.69347 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 219.21959 44.7387 } PutCoor PutBegin  end
 125 1092
a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 223.69347 17.89548 232.6412 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 228.16733 17.89548 } PutCoor PutBegin  end
 125 1092 a 125 1092
a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 232.6412 44.7387 241.58894 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 237.11507 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125
1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 241.58894 44.7387 250.53668 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 246.0628 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 250.53668 44.7387 259.48442 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1092 a 125 1092 a
tx@Dict begin { 255.01054 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 259.48442 17.89548 268.43216 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092
a
tx@Dict begin { 263.95828 17.89548 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 268.43216 17.89548 277.3799 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 272.90602 17.89548 } PutCoor PutBegin  end
 125 1092
a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 277.3799 44.7387 286.32764 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 281.85376 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092
a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 286.32764 44.7387 295.27538 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 290.8015 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125
1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 295.27538 44.7387 304.22311 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 299.74924 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 304.22311 17.89548 313.17085 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1092 a 125 1092 a
tx@Dict begin { 308.69698 17.89548 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 313.17085 17.89548 322.11859 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092
a
tx@Dict begin { 317.64471 17.89548 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 322.11859 17.89548 331.06633 26.84322
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 326.59245 17.89548 } PutCoor PutBegin  end
 125 1092
a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 331.06633 44.7387 340.01407 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 335.54019 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092
a
tx@Dict begin  PutEnd  end
 125 1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 340.01407 44.7387 348.9618 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1092 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 344.48793 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125
1092 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 348.9618 44.7387 357.90955 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1092
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1092 a 125 1092 a
tx@Dict begin { 353.43567 44.7387 } PutCoor PutBegin  end
 125 1092 a 125 1092 a
tx@Dict begin  PutEnd  end
 125 1092
a 0 1291 a Fc(T)-7 b(otal)27 b(completion)g(time)h(=)g(55)0
1391 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(16)0
1491 y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(10)p
76 1770 4 100 v 96 1770 V 0 1740 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(e)d(d)g(f)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 14 w(-)k(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray
76 1869 V 96 1869 V 0 1839 a Fc(2)p 0 TeXcolorgray 90
w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(e)g(d)g(f)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray
11 w(t)g(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 16 w(,)p 0 TeXcolorgray
63 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 64 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 15 w(,)p 0 0.4 0
TeXcolorrgb 64 w(i)h(n)g(t)p 0 TeXcolorgray 60 w(*)p
0 TeXcolorgray 64 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
10 w(\))61 b({)p 76 1969 V 96 1969 V 0 1939 a Fc(3)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
298 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(F)h(I)g(X)g(E)g(D)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 66 w(E)h(a)g(r)g(l)g(i)g(e)g(s)g(t)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(d)g(e)g(a)g(d)g(l)g(i)g(n)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(f)f(i)g(r)g(s)g
(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 66 w(s)h(c)g(h)g(e)g(d)g(u)g(l)g(i)g(n)g(g)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 62 w(*)e(/)p 0 TeXcolorgray 76 2068 V 96
2068 V 0 2039 a Fc(4)p 76 2168 V 96 2168 V 0 2138 a(5)p
76 2268 V 96 2268 V 0 2238 a(6)p 0 0.4 0 TeXcolorrgb
299 w Fa(i)h(n)g(t)p 0 TeXcolorgray 0 TeXcolorgray 64
w(q)h(u)g(a)g(n)g(t)g(u)g(m)p 0 TeXcolorgray 59 w(=)62
b(1)6 b(;)p 76 2367 V 96 2367 V 0 2337 a Fc(7)p 76 2467
V 96 2467 V 0 2437 a(8)p 0 TeXcolorgray 299 w Fa(t)h(n)g(o)g(d)g(e)p
0 TeXcolorgray 63 w(*)p 0 TeXcolorgray 63 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 64 w(=)p 0 TeXcolorgray 63 w(r)f(e)g(a)g(d)g(y)p
0 TeXcolorgray 15 w(-)j(>)p 0 TeXcolorgray 11 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 10 w(;)p 0.3 0 0.1 TeXcolorrgb 63 w Fb(/)f(*)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(C)h(h)g(o)g(s)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(f)g(i)g(r)g(s)g(t)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(r)g(e)g(a)g(d)g
(y)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 67 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(i)e(n)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
76 2567 V 96 2567 V 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
507 2537 a(r)h(e)g(a)g(d)g(y)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(l)g(i)g(s)g
(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 13 w(*)f(/)p
0 TeXcolorgray 76 2666 V 96 2666 V 0 2636 a Fc(9)p 0
TeXcolorgray 299 w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray
63 w(*)p 0 TeXcolorgray 64 w(e)h(a)g(r)g(l)g(i)g(e)g(s)g(t)g(P)p
0 TeXcolorgray 59 w(=)p 0 TeXcolorgray 116 w(c)f(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 12 w(-)i(>)p 0 TeXcolorgray 10 w(p)e(r)g(o)g(c)p
0 TeXcolorgray 9 w(;)p 0.3 0 0.1 TeXcolorrgb 63 w Fb(/)f(*)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 65 w(P)i(r)g(o)g(c)g(e)g(s)g(s)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
61 w(w)f(i)g(t)g(h)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(e)h(a)g(r)g(l)g(i)g(e)g(s)g(t)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 76 2766 V 96 2766 V 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 508 2736 a(d)g(e)g(a)g(d)g(l)g(i)g(n)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(*)e(/)p 0 TeXcolorgray 76 2865 V 96
2865 V -41 2836 a Fc(10)p 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 297 w Fb(/)g(*)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 116 w(F)h(i)g(n)g(d)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 65 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
62 w(w)f(i)g(t)g(h)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(e)h(a)g(r)g(l)g(i)g(e)g(s)g(t)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(d)g(e)g(a)g(d)g(l)g(i)g(n)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 61 w(*)e(/)p
0 TeXcolorgray 76 2965 V 96 2965 V -41 2935 a Fc(11)p
0 0.4 0 TeXcolorrgb 298 w Fa(w)h(h)g(i)g(l)g(e)p 0 TeXcolorgray
10 w(\()p 0 TeXcolorgray 11 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 66 w(!)f(=)p 0 TeXcolorgray 64 w(N)h(U)g(L)g(L)p
0 TeXcolorgray 10 w(\))p 76 3065 V 96 3065 V -41 3035
a Fc(12)295 b Fa({)p 76 3164 V 96 3164 V -41 3134 a Fc(13)p
76 3264 V 96 3264 V -41 3234 a(14)p 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 506 w Fb(/)6 b(*)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 65 w(S)i(e)g(l)g(e)g(c)g(t)g(s)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
61 w(f)f(o)g(r)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(e)h(x)g(e)g(c)g(u)g(t)g(i)g
(o)g(n)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 62 w(t)f(h)g(e)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
64 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(w)f(i)g(t)g(h)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(t)g(h)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(e)h(a)g(r)g(l)g
(i)g(e)g(s)g(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(d)g(e)g(a)g(d)g(l)g(i)g(n)g
(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 76 3364 V 96
3364 V 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 715 3334
a(*)e(/)p 0 TeXcolorgray 76 3463 V 96 3463 V -41 3433
a Fc(15)p 0 0.4 0 TeXcolorrgb 924 w Fa(i)g(f)p 0 TeXcolorgray
9 w(\()62 b(\()6 b(\()p 0 TeXcolorgray 12 w(c)h(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 12 w(-)i(>)p 0 TeXcolorgray 9 w(p)d(r)g(o)g(c)p
0 TeXcolorgray 13 w(-)j(>)p 0 TeXcolorgray 11 w(p)e(e)g(r)g(i)g(o)g(d)p
0 TeXcolorgray 64 w(+)p 0 TeXcolorgray 64 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 11 w(-)i(>)p 0 TeXcolorgray 10 w(p)d(r)g(o)g(c)p
0 TeXcolorgray 13 w(-)j(>)p 0 TeXcolorgray 12 w(a)f(c)g(t)g(i)g(v)g(a)g
(t)g(i)g(o)g(n)p 0 TeXcolorgray 7 w(\))g(\))p 76 3563
V 96 3563 V 1133 3533 a(<)61 b(\()6 b(\()p 0 TeXcolorgray
11 w(e)h(a)g(r)g(l)g(i)g(e)g(s)g(t)g(P)p 0 TeXcolorgray
16 w(-)i(>)p 0 TeXcolorgray 11 w(p)e(e)g(r)g(i)g(o)g(d)p
0 TeXcolorgray 64 w(+)p 0 TeXcolorgray 63 w(e)g(a)g(r)g(l)g(i)g(e)g(s)g
(t)g(P)p 0 TeXcolorgray 16 w(-)i(>)p 0 TeXcolorgray 11
w(a)f(c)g(t)g(i)g(v)g(a)g(t)g(i)g(o)g(n)p 0 TeXcolorgray
7 w(\))h(\))f(\))p 76 3662 V 96 3662 V -41 3633 a Fc(16)504
b Fa({)p 76 3762 V 96 3762 V -41 3732 a Fc(17)p 0 TeXcolorgray
1345 w Fa(e)8 b(a)g(r)g(l)g(i)g(e)g(s)g(t)g(P)p 0 TeXcolorgray
59 w(=)p 0 TeXcolorgray 63 w(c)f(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 12 w(-)i(>)p 0 TeXcolorgray 10 w(p)e(r)g(o)g(c)p
0 TeXcolorgray 10 w(;)p 76 3862 V 96 3862 V -41 3832
a Fc(18)504 b Fa(})p 76 3961 V 96 3961 V -41 3931 a Fc(19)p
76 4061 V 96 4061 V -41 4031 a(20)p 0 TeXcolorgray 925
w Fa(c)7 b(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray 65 w(=)p
0 TeXcolorgray 63 w(c)g(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray
12 w(-)i(>)p 0 TeXcolorgray 10 w(n)e(e)g(x)g(t)p 0 TeXcolorgray
9 w(;)p 76 4161 V 96 4161 V -41 4131 a Fc(21)504 b Fa(})p
76 4260 V 96 4260 V -41 4230 a Fc(22)p 76 4360 V 96 4360
V -41 4330 a(23)295 b Fa(*)p 0 TeXcolorgray 11 w(d)7
b(e)g(l)g(t)g(a)p 0 TeXcolorgray 63 w(=)p 0 TeXcolorgray
64 w(q)h(u)g(a)g(n)g(t)g(u)g(m)p 0 TeXcolorgray 6 w(;)p
76 4460 V 96 4460 V -41 4430 a Fc(24)p 76 4559 V 96 4559
V -41 4529 a(25)p 0 0.4 0 TeXcolorrgb 298 w Fa(r)f(e)g(t)g(u)g(r)g(n)p
0 TeXcolorgray 0 TeXcolorgray 68 w(e)h(a)g(r)g(l)g(i)g(e)g(s)g(t)g(P)p
0 TeXcolorgray 6 w(;)p 76 4659 V 96 4659 V -41 4629 a
Fc(26)86 b Fa(})p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1929 5400 a Fc(2)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
