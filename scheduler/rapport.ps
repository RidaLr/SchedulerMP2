%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: rapport.dvi
%%CreationDate: Fri Mar 27 14:35:54 2020
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: SFRM1728 SFRM1200 SFBX1440 NimbusSanL-Regu CMMI10 CMR7
%%+ SFRM1000 SFIT1000 SFTT1000
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips rapport.dvi -f
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2020.03.27:1535
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: SFTT1000
%!FontType1-1.0: SFTT1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ectt1000, tctt1000, latt1000, lbtt1000, lctt1000, rxtt1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFTT1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-208 -360 1374 838}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1ED6A435B5950D131BC48179F5BE3191944DD
8626DE76AAFD8EC4DC8241F2ED33E10698DC7741D6E45CF5A02FC6D2068AA205
EF3C4FDCDE803F4D1D4FF03A079CD4FC4BAB3C558A8FDDF53D34AABB7D89E4E0
CF76F77ECE57575C27718A8074CE275DDE4AD245220A8236400BE47BC76DE13A
9EDA4BD5744C71DB407BCA39DBC9D857122A1DA969E6D0915FDC1622AB8BB88A
93D2EE72E9A2FA73193D6CDF254252980674DB644EEB36A2036E04DB649F816E
E70C4C43E88609C8E8B8B84A920CA933FA00F41F2FC3C867825E2AC658FA0F7F
331323E22BD193A0A8009B3F0EE6D55281CF1076F1631FE509E79941FF08D0B7
ACFEE566C76FBC09F3B4AA57959D4EFC34413ADB46292ED99CC8EC4436DE2CAB
86B8B48847353E826F5346762CD5D353727DBB502E08B934DAE4E99894706BCA
DC35AA52C8610137C7E336009D564831E1E7936600CC3891D3A58A539523329A
45DD54B8D76F43582CE621F74FE7F8FB06E32612FB06B66CBB3096C0DD63D097
08C206A620CCC9ECB49CDC17295CD0B3C9D2DFCAACE46137490589D72A6A57BD
FE97C0CCB9087CF31EAA7860444C0D2A1B230F1879B1CD80CED3863680AE37F7
39A117963BCA696B1EFA8EA500DF5B1C5F6F42EA16D46CC0687DC684B2AE28CA
8511448362E82092B10FE5EC94ED5667ECBC015A6817A57769EC9EEAD9DB20D2
171DB059E96BD97ACD9D5EF4AAD6612EB7D1A0ED6DE0C7A5BB6A1796DDD98278
F2222F94C2D9FABB1DAD4E9D5260EE9B7A881D2F26EB1EC11D1665CC06FB71F8
026DC8EE4278EC008A25E4F5C4D5D5090888E2A1732B36220758A2DE86A7E5A8
6B8B6249A125B0BEFC25A4A5795647E45B3BE2C9DA00E7EA72C25CF8C7E10810
995360EA2FAB43254E2F2B858DBC35ADD9A094154193D0526C198FC570C89C3E
209513E8D5268B987C05C0B9114B3F340503E3B35852776303A1FA1AE15E98B2
DFFD072B9A0B00EF0A7082AE4B7898B953E96400983B2A476965445B33C16B92
8D96469645E90DC393ECFD1F0D1FF1A494D7774DE8818BBBB81149773D0DF63D
5E2BDD7F55340CCAA2C29EECB5A9AF76FE1B7195F7A89A4DF974AB2D341C70A2
A97C9184CB81320DF07DEA87EFC6AAE69F735565B9A279C94711D7350422FAC8
2C374D5DA2920460CBB67DCFDB5A885DDDE88C9BAC3F458A51932D7AA774B281
2D6090FD4B1D4EDCC43816AD379AFFDB32CBB7DD7BBE902840B0E696B909C937
323EB4D4D854478CD058DDCA8F6F19DB4EDEF832CE2A982CDDFEEE1C519D6230
37D39EDBF54B68FFB571615C0EAA8BE59F75A9AF83248D170CDDA5C1CE6E9161
790F05A8FAEE3A845A1C9040D6F16668DAEAC582E46E13447122B95093F816F8
94ADD420E1B5749C3EB71C4EF774A5D79874B743292E0E0B6EDC2A19EB425740
49DCA5FF3091840199E01D25E908E4505E84517C80983C0D44BC29B509DE4C9A
4020E0C99E0D74BAB0E1025C33C1A6A17F95859DC19929F34995728F4B225616
FC555CD94593804226B0191860A062EA1FF4047A2705D72210735BCEA5735DF3
16A683E49F9334D7F1339D898038B50C0E552040F86001CA4EA354E74DBBE94C
AC3E80E5F5127AAFB961C0BF1CF18DF16ACA8D20DC033451BD6A6A518777CF2E
2BFA2AA697F27FC4CDD600A8B30CC8AD97D85580D34B6D844A30A5CD9A2B92B0
0BCC6B4C6F1E4B622AFFE3B187395EF316196C9D4FB2F587BE58063E5CE124B6
A09DF443DB066FEE28F67CFBEB2EE4AF7AAD78A37E8A29152315F5CE6E364D5D
18B9C5796A7BDA946D33464E7EFF3CFCE4A3440770BCEDF28AC65210C3652D58
9681C058059DC2EFC61EEFC10FD101B48FA7CFA74B5C88F53908837FA899E3FB
8440F2588CA7826435CFB937E6CA5478991E3259C878F260DF0DFBD65171980C
9059C488192AF1FCEA7C2E384AD62F4436EC6E9E515AF333A7E2C594F568B0C2
59DFEFFAF7CA831A87E00B4D60B2CE8882889AB4FF6866C81C444AC83D31838C
15C70405D9C2C0886337D8AAA2B6937BE5560D808C9D96D0D7D51FE92D52DE09
8194D4C2A9E505542ED950A6D66AE823D871F2E83D7D3E1F216F33D02958474A
A95A68C4F2B71336FE2CD78F24CC1B72CF4BE7BAA7B108793BA95659C2679B05
EBAB7F318DA3C65B7B737669EC0272C7BE8C807525631A459365B7FD44E96228
E2CB7B463B77FFB0D7A5AABDBA6E65A7C94A8FE239D01F59EF9D1F2A12D10CA0
6A9190F656724239EA5AE88B7C73FAF13FF8D90CC02040AD4102EC84DEDEECFC
D5E0AEB7E228F211E5786CF498EB271C57922952B5B7576890D0823E35D3600C
FE96CF3CE7F41DA9ADECFA259D1ECE055384331171DE95D29FBB84407FBEA91A
5C1849A85ADE38E1160368778A557ED09C2D3375EF314567EF7B00886ED9D52A
210969C8E350CA0CDA66B5FAEA03843BB4FDB905112EB251E08434CD1FB81B89
61F03E096889DC9024509183C63092B883926A3CB77DDBFE0100C486AD8B8E00
270682BAEB6C8A987D61514F6DF3B26B7144D84CD719A38F17FDD7BCCDD5EAC1
7A0786773F9120B365BC6033066A1F98CF444DAA16F66285778C3E2CD4BB631D
9C72C599B1D2CE99909C468AC98EE0E7270BA9A20E60B8E13F999A8DC745DF4D
00713E149B33B185AF2472E5C865FAADFA4BFA5AA1B6CB8CFFDCE0332FFC2A13
7FC9C9A850A7C60B8B4A6F4504FA9F8BCF9EB99084E8462D20F60E926E8A89D6
B76291894C0FE6433CD52E6731324FDA332655A716F859CA887CBD806310E1AA
F04B2FFFCA909E51811AB88EA5B505B5F326E0FB05FFC0DC492F4D7E318426FD
7CDDA75A3B768BEB3F2A33A63F5AA84626BFEE93BEB58046B83D590B463BCE00
9A580D00CA8E697ACEFF707C5CAF286F4322314DD5C21065327393CDA41BCECA
4E783D502D1FA1E0C5A1493F36FEC0709D6C33F0D17D9CADCC9D128B77574C00
6312B2570F43B154DB14220C315FEAF1B7B910D78CF9A22790A020865CCB496A
756436E98DA00E305CC7017EF7A7C42886C1EBBD183C0573B0CB9C97209ABFE7
D49F806F12DC7717560F9DAF72D09F8A5DEBB9CD4753C97BBA78C35D75E934DC
24A3D079F74410EF877C07E8A77B371B2E51404282845D720CD9A15C53B2A644
FA3DCFBAA6C5342A93321ECC688DC91D6A1A26CF64F60AED726D4253B1FAE43C
4BCAE40A8FF65CDAC34AC084B6AE0200252AE48BD87582EB6C88467D8244237B
CEB7CC260BF3D314DE03E8E6F42E7E490993A234B2DF61C2740A8EAE4450B763
5C939383F822C9842C5D0C6D95098E23536CEE02E71ED78C3F33FEB612111842
8CE6A1F159DBFF07ED4DEE51ADCA94A329EDE034A926A37B440D0A65A6C56CC5
D185F48FF161952FC9B7BBA1E0C9995F56030748279871E0171FF389EB30C3CB
CD6EA6948863F98AF49114133CC430BE71C9771CB880E51D42E4773BC9FCE759
46AD1EF858DC7CBDCB8F06BA14CB71FDB322ACD2143B36A5A0F80B0E1C5EF252
AD1B1D89E5835B0DD4B8AD25EB1EB36DA1A87A2B87A6A577651BF998F965C694
BC0C532891D2007CDC6DD09BAE86195EEF7264E6122A16D517E8C75200E44A40
AD5E73AFBE8CEE260B85C98BEFD29BC5C9085AAF00D000ACF7891ABB0F75E169
6B9FFFE0D1F7217AA400E50BBCA640F35896FBCE2E543520C013A368FCDB3450
4F017FDBB5322656862DDD7C3552C0B76FC6532659CF4EF37B0349DBFE5F743F
FDA8A8C167223A82E9239921FE58CC0B13B522B9F96977DFC55219895CC982DF
737EBFAA0D75CCF76C27A2D8AD61CB386C420D073AE8A72E5EB496665AEB27D6
DD3839DCF6BD5546C277FE4EE6E04C23EA07681C391F7CE0BB3FB9B0943A23EC
7F45612CC46E07875B27F853CB24E335E4F903E2BEC959F88C7FB945614482BE
E6C96DA9D0287E9C2421C1BF1EFA8C970B99310912F82C15F455167DED9D3777
0EFAF4DB59560F078DE4CF1E923CD41AA80955F86226CF381C72291EBB15610F
02C9986116DD0BFC419F724349DB4BCF0DFC91C23B8FE6B993CDE3133136F8BE
ECCEFCD41E7BA921D367B0F308A0BA859BE590A4D7A19F27444F05DC7CEC6D1B
B14993FEED7FAD9B7D6034EC2EB5E8B293C2B02EEFBEA5E17788F8D3C4CD4D1A
67BCB8C799089916303832B169786F2D749F10479516B3AC98E3C7F55081E4D5
F5DA3AFE742168EB971DA5FA37D5FA489977374C6F891A45A5C491B030C40E1C
727911FEBE1F165416FA9DF533BE64F594DD09F82CEEAFFFFDC70F4612AE90A5
3B0DBB1E882AE82292FF237556F04E0FFF033637639E26F1AC1603E753135452
46CECAF3EE1260CF3AF1721FDF376285B1BCC769425271A5E5B2F43DE4E302C4
4D08884689FFFBC3A0F74BA87F716315D0372E051156392E5295F207726537E5
84D7D9A2E145D1D0961BE703278B2023F9CC59C7D77E8CC2C54BFB8F5BC45BA8
1B0A8A00AD7FA9FA045C41D5986EB0A40B5CD95503478383863D4B218E597A37
B05787E100FD3C54002FDD1DE1AB5EDDC5A75360379AD865341C849E24353EBD
8A0B47FE17C0EFF2B0525CA523E6133B2B7CC7BC55ED73AA86828C9D45CBC37E
59B1DA90C247898549D3F36F6578808AE6489B9FF8C8C495C812E1BBB4E3B69D
DF28B55563D721660682F826C4E399F7B9BEB0B0192EA36BECCB4FAAEE690057
725918DBC5EAA17E79A2B3872A369DA7C5EA4653F83CCE1C184163D096D44981
1B8522B71513DE5D75116BBDA4B92CDD78FD3ABF42F521ACD3E8F45B56587CF8
25E7A60319C24281580105AC3D461EF59E7A6619D1CBEF62F82D0B50B7D79630
EB1BBB88603823EE8094625D5F7DF0EE61C185EB5D6C1CCBFEE4EAC0A5DE4ACC
F88DDBDDAE335E5073B23BEA0EBCF391BE9C945E7C3C9F9A46B04078D23572F8
3B2966D435FBEE582D0048908980BB7419C397B0B4FA4637B63C47C0AC7CE269
02FB565176F6C03190B02AB80069F7DBCCED8901F90F6CF2952F1238F1703528
1FF5EDEC9711F4EB08F9ED7D287D34A1CF9A6197941B12553F6462E95474D786
C8653BDE44F361E78967BB388E6BCFD1970E0DD4CB2B87834E45898C89330BC3
3E551987556417071CADB861D08C2F4DABBFB9BDCAA486B13F1E17BB4725B467
535AC80C18F244ABE9F2A95589EBF6B45D088CABA8D7F062204B651E83B1CECF
7227BB9109CEEFD2232849FAB1495E0C5EFA06069181AEB9DBC6F45C8A2EB583
47F31E3357071F763654680C500A09579E63EB6087560581E095228F59C50C5F
7E3119B289F072A9B114AEC1CA30A07C4C11B816639107AF64E711723807BB0C
9B27AD6231DB5A6CB507C48E6A998DC7088171FD000B792F983538F5B8BC1F74
F77C197D9B33CA1B37462510339BAB89732FC9388D006F21AE316570CDDD3AC2
32CDCE87348DEEF720324FC29CB9739D86DB5EC1D5A7A983D5E47621F1C2A3EB
22E3422EBB218A2B4006EF59FC53249905D4C102DFC6537DF35421D00B090A9C
6DC9A7FA5FAE294AD7CE56602C0A9E73FD678734863351A9627A8810558FBEEB
7226ADFBBC1DFC0471FE4DF170718BDFCF0D19ECA73FB423A2AE31C78F8F2EED
99D23A99B7C4EF582139383F1F3508EE29C347FE66A9C759B61B21E7CDD4B14D
60BA085C852E8A76A43B9F9759D05409940D603107915DDFE571495B3AD11C08
55C1C53A0CEFB9EC018200D5EBD32BFC296EB7F150BB34640A4A9B10A1D5DE29
9565BC46825B83A4BB0236824DB68165D899C0C3F02F8B36BEFE7B4199C9BAE9
582F0927DAABC018617131BE9BFF3959F92E3A2EAB15E8A3EF162684C6F579D0
4DABAC6A8F13ED4CC1745DD5B41005419BEE0A87E9CB8DC02D6AA7F8E6E7FF71
A4A0FF645C72818406F962A973477B2043F6C605BFBC0125C3CF1D6E61512E50
5E3C95CCA984D99277C33F08F563F95D5C1FED40BE32D14AD45CCBAAB8BA4A23
745F1A186B257078A4435C982A8B488C1C6641CAD95A2B7A44BFA04E42E7D82B
72DD8725B9138695EED5944063758D3530A04B9254DFD4723A21A1B35104C8B9
E2E6686C75473131F54E6002A48055951DA722DC4C2E53BFDE5A28210BA74F79
3FAD7FA9FA045C41D5986EB0A40B5F68237FCA575EC3FAEAA3E920C592414DE0
4F8D64E05FA5F998CB9EA795E6FD08B08B7FD11824B2FD210D635E848D318073
17CD3357DE4F944B29EDC8B303E1D51D57925EF70E952B5B1E3268A58C27BFCF
1D5B4E0D467873EFE74BD32E7F3E47FA5B0ABA0F4E236EDEB175E2A08152E666
1195C76A6AD46B2230383519BD10232D61690B31E8F6E32EE606A4359464A718
2A1222965E2FA5AB9E4AE9FA0FE557779402C184A4941811ED3C6E5C8A2E2209
6CC51A9098113FDEB968188BDDE58052870778C74E8933083F0AFB0A56CEECCE
954971E0F80A500E410A707B6F95FDE8F78B5782616386454D40FD1177AF59E7
BAE2E4A0D38B2DEE891EF3A2A64CE3628E8EAC4845F31650C2CAF200E1F895BC
449D7C0C2C6126A1A526ED120263120447F949C8BF48398C2BD3295A425583E6
67DAECA8518E434B9C6ED706ADDAAF0877959BACDA01FE55175AC439F1C0056B
A48000B75B5C22E4F97F0E7745B6E7E377278A34B363B4F1871B50ED6BEA4604
3DD8A1EFB2241F8FFB894BD68AD0BB35BF36A9CBBBDCA3161E222983B1C6280D
69DD7A6C6B173AFD56637EA68A9FF992607FF78C6F639F50B3F0EC02A1E755F1
60F4E8DCB8DF16CC67668B0CFF61165D2CB140D249765296D30E078A88DE0B5E
89DC62CB398B021CFF57975CA5C89BCEDBEE593C678C3D2EFF80D460128BC467
60DEA07559CA60EA821CC5FE7C1B346256259A858F706B6AA311D5E9443DCAD1
1AAA407F3E0678C703BA5F08E67DACAC002A4F33065C68458D28C670CBFF1BC0
570B65F5BA5230097AC8E07B5E8140DC0451529518B7D2509F710753C9AC13F6
12CD31C02C77A3774555B110537A3607969ED4E2EF1AAFBEA5F5208F539AFDF9
361520D394A6E245DC7EDCA9DA2A7E2B98CDC99028253CEFC15BAE3BC88EBCD9
0CF3D97EC8E454F9D6E70A6296F807558EC45930779B7BEBA7EC14C45C290B88
B6CF62192A347B6199C5DE31E4E520360DCB5829CB45EB3EC9C6D28DED24E434
D98573336D5F16497CF12B88A3B4450D2E18FF31B9CE2A7DAAA94DDC648036E5
BE7DAC98C4E946942F887B099BD30DCA47FCBBAE51192E4A5DBD396F2F4A2720
292FB0C0BC1288C5C455A6398D785524D48916E6A19FB998F518A075AC7F0CCA
6E2AD23A8B9F06254740F4B18AFBCBAD00600DFA7106A73FCBFD977DD8311164
3CD7DF17986D962099921DB40F7880873FE4151F77A1CB63CCDACC8FCA97B5E0
C1A476715D0954E529BBBE22782929A466C6A317016AFC652EDC347D936C96D1
F5BEB2A17E88AD187F7C3699464592574758249035E3EFEBFCFED7C21CE3CB4A
BE0686F6574C8F6E030357EF9F5845AB48A84A757BEDCD023A8380FB6D901187
A6BEF1599A38B3E3962F146AA02C587E820CCE0AB8BC8E30EC6D67884CDE4FB3
E430C46A54D7D90B037A78A57A063CFB0EB3C6FF697509736BCACAA7FBDE901B
80DBB525C3467D21EFD5D365D0D5891F3D44A1BA2AA9D22313A772ABD2F009E8
27566854C6F8A68F80EA54B605DA297FD5FF195A597ED1A516061F918A31C577
E9F9F60445268DB63E948E317A4C2D8A8775BDBE4A742936CE9DD5E2593C8E6A
44DA27B7DE007AF380D2632DF5DDFDE71208AFCF2CCA8773758D8D9C2872A401
DB454BCC9E4F77679D65AD7D1555E9C78C7DCAB3F647B7196C57B881D5D0462B
0EE7B1431E12CFC3C678F4A97DC34E5E3FFA5EB82DFB0A559092747656E6C1E5
6AA366FDB635B6D8125E2943C052C94FFB34C9AB10A28CD219850795F9F4863D
ECB744676914A674BE9A549AAD4A8D20B3AF0FEB4C4C59CA01612597D054282A
55B106FCA0EA4DA15F0FE86D24C70422227FAD9C4C37FE51549B2FE9F73DB581
B5BEE30ADB2D54A26F1750A2379F134BE521FA2B2AE66D02C9F77ABE35B2D236
0530F0BC284C2495FEE0CF62D091D522647BFBBEF712E604BBFB2A1C147FB5FC
176D0DB84445E85E8D8315D0A0E3E26DB60A6125A0C909C48DC1D96BF078100D
FE9727E717BA7F5D54BB399F7AD87556AC4B2DFE5E8D391D877CD8F2DB849E06
FC42AD1B3AF6D1665A9E916225861275A7E33DA0671E12E16BD967AFC5489A13
6238E27654D2EF38348B6A4F413A566B7424AA836C2B4F5F473922C32FC7933C
927E2168A4B89535FDAB27A457D101D3704CB68AC68B84EB9051CB9CEAC9622B
0972CA4B56C33A81947FACD4E6B7BB128280C049B07B07032333B21CB76E7B9A
17117BB508A85E34AB0C0FB1B0DFC1F03145D0EBF96AD373B546D16B2968752D
112B787CF3E145F8E4C41FCF68538E07258F434CFB044DF60E68B023385A6B99
415C2913BDBC1A3E21DE66D0B05A9F13D86AC6F8F9BDD8DD0E3BD3C58A1A9B25
50BA733181F01B8CBDEF15EE526112B78E714224D49598FCC751B525E31B3424
D4B8BB7781C0170356357B3542790EBDF134B4BC790959990DB0106744B80FB1
086D98C3C8628430B5DBFB183DCC97477F8C211E88384D2C37E9A6126C4F0E48
5E973BAE126A8D7C0B8E2742E42C132FA6E083BDDB9F2EEDECA0C520A7470026
C7CEC560B2C88D1CAA484CEC36CCCB1F4AAD18BAEBFCC471F5B2B99B06AD03B1
CB79DC3DE6C212FBDB2B91A65DC30E01C8B94804AA8F3DD3F0BAE7F1DA0335B5
D81A35BF5A9A5115F7BFDB6FB41232AA66B914EA64F3698FAC50F412402DE5DC
8C40FCBB2BB86ACA3D96BE9DF240915CE364A6B74ED53BCB8CE43C221BB72F08
8673885A643CF7BB832217C2CAECE49A409BF76BA43D376354802EC4684B0A43
C80CAB461FDF22DD7FE3FC1B514C17ABB4CEF77382C6017FD23DD38A340A0397
F731CEC0889E9CC2DECDC4B5D32AA948AE738F34F66C9774347D34704B77FA49
2CDE638F6C4C2B82EC04033CA63A88159F644CC8DA764AE9F90C07D5F2749B65
5E4177466C17E840B5EEDDA79F01013F4216C93E9B1184646E6E2141C7148476
7D47560F3B3905C62213C2DC924DA4AD92096160F3B8F2684C8488DAE97E0817
9532AE10702A48C722ECD69DE0AB49CB67CD43A0683927443CE0E47E06EA4D4E
2BF509062926B55E7F75E7F8A1D94109073210DB92D6168DE1D9C331320F4740
9199DFF5EF7D8D7D998C3ED886220AD6DC2F24AF327E4998BDB3FB2C085ECBFD
4C3F9E163335F9B3729CCBD175F000EEA95812C9338E62DDEC1E1E54A9DEF9CE
73129DB358231F2BD6408ACAE74BE7E3358A60DBE5BA317D8968E00B628E30A9
CA12F2DB427B50EC4EE878DCDFC47FCB83408D718C3FE2C201587140D41E82E2
1694223DF5E7CCFE583BB52FECA268F0CAB7F5B7AD1D3C6501D488296CE28432
B97C5F79B80DA0D9F9E73C4A53C193A3E1729921C7901778B5BE5A77701782CA
E4559008927B936A151EAA1BAA7FFFAEDEE7979DF757694CB3AF41A732598CB5
FBB897E4316A7ED11DBA8F2D252D585BD15E9AFD13422D16E9493A2ED8B46C0B
8140A92B6C9D37E4268D2ABD63B419723D5092244E49336B0C7009C3933F197C
D2A32254E20A8B3A9C08FCFEF55C2E2717756AD8F129D952A853399867841797
563BB5F542C08B8BE51CA65422CA6E434E5BAB844FD3416099D5142C53B1064B
CE19468761059544990F98520CB64FF37AE7FBFD7AA696FDA58A03B0C9ADE6A9
5B05E9285F1AA6C0FF0B351AA04074FBFC45E14F1F3F10958EA8848EFDBAD1E0
155CDC51FEFC6EF52B2CD6B149B7B1C569B6D3A3EAAEDAF9C72D216222F85239
32E1FACA71BD775819254A1667DDF49535E8EBC069C46B465FF1D1640593C852
1C2217BCCFDE3C61BAA412677CF8FE7488F9FFBF71C893C92249FF5AC6A5FB67
502C05B884A151C05113E4D9346D127EFF6640D9EF57B99CA83BC9B3F6F49D18
96E78B61B266F833FAFC446056510589F3D4B18FBB5C9370D9363899F97A92E0
9E445A56FB5838C01C595EE7FE0A326C949CBBA22B2600E4BE8584E61BCC2DA3
573269534AD3432832B66CE1A4FE3F10AA435473CF909A20045A27C28AEE8B8F
BB54F263B7283FAE9E4BF828F0C2E9EA10B3EB5B14F96D8E4A98E83F7320A359
A0CF417AED1C83276550F479CF9E56A1430EAC3860AB914F760A5F757937A08C
217375B95EC14D2B5EBC736903D5EF0735F2E290F4391448A527C8E5694CFA9D
42CE9ED2AE83991540485C031741DEEEE8ACE1BDBE056026C8C3548A6D253D75
9F30E37534743210743F07A44E53D34BA8D3323B847A40981D306CE372B48BD0
9F7CD15FCF9C28228E74B02B2BF2D29233C4903317D173CDCC9750DBB35D3BA1
F3E1A2EE1F6FCC07D3ABA2CF401E5B24367A4FFB8C5473CE07CC433307E5B685
110D305D49ABCB74DADB328332654022633C65193115E722B95F322DB5BFDE96
5C74494F7C4D82D938E554137254638555229FFBCF45AAE209705D150B04389E
3A3A607D606582EE7B1EE4628DFC6EE853DE286F4DF29CCECB0E5F5BB872D7AC
278FB9B8E128381FEDF0117ED3946C67C49A0CC83FB6A2A168C402F737EC89B3
61A9FD262DF82DD0F902F1EB12E99D79E01811154265A22CD5D8C477B069B1D2
20E16524FC2F4C014C10DC2D2C9D07B749B9FA63B75E6B1B69E4E4A0D59F6039
27269E7A3919DD57C23D90AE48153EE03A61F051AFA2C2C79BE670E36B24757E
C59946B08EF4B8212A30C907A4B300D63E52C35B2B7F739A7E062BF9C1F7C018
3C1B5F223E9C743FEA0C3B0F9995EC0DF84E017DEEA2E49527BFACBD40CFD211
A94D73B0C9A481C36B95D9C6F4D42CF6A8DFF36527D3CAD458EDD9D2C645D895
9C5D6CF6F0F16DFAFDB92A1B45361A68C4191BB96AB19147065CBDBF42C977C0
EE614B5D147F8C44F7F6CE6249A6C34B3D0140393D2D7D3D1E8CF8969D8D37F0
6C0A3BA5D6D7BF1BA999C25408BED02EB7D6B01CB47BCDC898EB4807BE9511D8
F2D78AE5FDEE28D416CF93000E5A53B6D6CD139F54C22FAF542E1FE7CE86EF54
F229CC2B09453753A46D5F146DCC6B8A9B7B9F1F284A8B6E1F5151D161A8123A
22892B52146CC322DD3AAE8D190932235330FF76850CCC432D15F5D60F21F491
055B1DE93C4CDE2E12D22B08D256D7C3442C427DC7C43DFEA873FA4F3241FE1E
2DFD0B3EE28DDD9B321D244386844FA4FC1DF1ACF4A1D162512FD1604BF062EC
5F4D1148E492AFD20270E12D1DEEDAE0D53E9367D2C9BA57D81C9F625DF20CE9
88491CA30BE8B534C21A1B3426AF9C77C744CB7FBC6E976BB486871FDADAF480
995D35324DEB1BB0C583C84EE7D36ADB450E1AD2E1C899B3A6A7EE7409F108E4
C3DF5733BE741E394CBA328AD2924D97B97858FB3508D01F3C20CDC39622FCDB
B945543ED13027D165D7EB69DD573C2E855A0E6047AF629AB8085B3E6B69040E
50862D7AC1F1000681912B15DFC777E3B1649361EA82132FE1FFDDCADFD7538A
6E0B1223100DD2FC2945DCBA64EA57094F3BD194CDC5D8E7D0D7F73BDC406BC0
CD8D00B3DC62E6AC2F06BAEF03EE07C49C2CF365412B509BB5746F7D44706674
D0053FD2E2CF588003BC33A7696722D1D5639B0E35758B3B9AF230B1C2226397
F98EE6476EBD61C58CA8DEE16608A930E6B542D831D8C098A943F8C330CC36EF
B4E69ECA90C7E183E15133C5B60CB0EBB4BEA87D0B1F6416F5B8C7C9C2CE1A0B
B156FA0A9EC09C40BFA29B3D1612CCAE572B540B3D0A896522DDD0DAA90A78BE
B3B6C103F633F3FC8D829042B6C7CB8959E01C55455FDD227E64A0BA920E8DB0
E6B55EB3362970F7C8A643E1F5220B1B569D60627641CADA9751CA523E263D3B
0B5645FD12419224B691FB11A7725C07011FA7E06D460B3C819388782A29BDC7
EE2A946B6FEE986FA6BDB446243B74611C8C1B8256CE65253EAA542CC2D5F3EF
8E01FCDE1906F858790FD0A427D2A4536777F752B6AFD4CD716A4C5F5EE0F40D
261EB48522EA30D1DD0EE6B51A1675D2B472AD0D37E2C38243F162F02E5DA17A
71E849D3EC943DBAA71F511865C30171769340728137071365F2863F24F3F69A
1D69BD45526EAACDA5466367A223B751CB40832014D119947EACDA4980F86FC2
DED5B483A4DB3B365ADB962AD9A6CE80D1507A361BF7F77455430BCCC39718B2
04B48310D8D9A6BD6654997A136C5B7C3FB0B096CDED882DB34E1588B8AC9BE9
F18AC8D6E777689D316D3D3018F0775C70B21CDB37C62BD779D9E64F1D0EE6E8
10586CDFEF3BA63BEC6582059C05CFAC5A906093B5D96C9080EA874898A185F2
2B197003EE8F207F548C92DCC4D49B139BC0A0C54E1F59886AC35C27648206F8
9553B86D3332CB2B0A6DD53F16CE6BD0EE3382B0193FCD802747EEE3C87B92F8
CBA53840B98EB1ADEBF0BBC7254E31EF8E5A18B4467CF7122BA061AA1EE7B721
1985D09A3A85ECAC41A03021D7695791168252F57DC20EFFC9E66BCEE5B55D32
2CAE91F48B7FC1F22E05A2FEB46984BC19BF6E34E5623D6D842FB790D7F12A35
575FCE49A6382402358AA1B3236F3D88E079699973F30339A97FD7F41D071CCA
458B71EF1E9B698729A632BD05181FC39871EC8653EFB4B9C8B9A0EA266D4F5F
31B45AB4B5D0A179C0582A7F2D3E871C21741B1A8BD06D0C5C8291E76A3A069A
EC1C7C4854B6FFA2B300E5498AFBFE10166556231FD83B4E1DC5471674E5EB3C
A1E06873A387D27D42EB30F9644C28F3F1D3FC01216EDBCA97DE0561B376D486
1E84A19DDD4BD9828C28C5F16969A59D638F4641200EF96C8E56A8631EF5E293
5768B1849413C368D758D62626129A81E7ECBAC9BD9E8D8281D942B390692F6D
DC36E4FF07A16C7A758FB998DA57E01D3827028465C03808D7BAB44E9EFDF217
856B33E3B857A5EF927B2AB90AAA07D76C91648652BEEC39168154231E80DE83
CBD658004E3C2722BB2BC68C4C7193A2A3A75F986B999760A7B34897827EF1C6
A5DFCA240A5C9C5B7E4386A38B789F5E843630284BD7B49674111A60352C780E
B6059D18BE0369B0A13ED2AE02B3F3FC7351CEA2E0DC1F575D71FBEB6E8DAFA6
205B06563992449CCF21EEA5B45583AFDA265C90D1B145B38493CF67C524702A
88BEE43E39854B8696DC04C8997BBFB6AB9F35594C14E287157394056CCFE698
1CB8B0B5A014A095F6D9E0822C5F3B371BF3603259746153EBD412A0056B836A
358EC93A761BB5E0A78E0234EB24527A306A3E2B5F6EA770B5E0663DE8B2ED83
FB4ED153858C2EB5CC7FC2DF37883FC2BFD3C6E338390625B60AD78E8645C18A
C3865F18C152697C6F53B24127DBEB77436A590EE5A7D1DABF7A40E8F9BC743C
0CBAA1241D3DAC963DE59B38C587748BEA738AF00BBFB0E47F5012D530BBBCC9
C385E66162755D196B775C4AB7D341B69AD4C51F95603B8D35E9C9F21A4CD81F
350BB4978464253F8E0135F0C73C49CFB57F4ABA4B327844F4A7A2F82A8A628D
B43F96E322C8384A25F2DDC1B19AC7CB867C55C01122D18B276BA8E8B4B8D446
0962DCF41C2B2344D2D031E97F899CAA8CCD66D9BBE7AFF3000A002ACE02FFAB
67E3CF8E4481467C96A1A6056D66E1F57750DE134A881482FC221BE3093C13D6
E2C86A1A0346DEB53BAE45F76EC3E7DD3EA4104156A84E04E1D5270C6CF74ABE
5E77F61EC499EBFBD7C6B554666EB618477431E8919B9F5A5D30CA97D3F5E34A
E3763445066B2139F4B140B7E2283FA61818266342C514D418E4ACDC49BF0C3C
B2E2AF19A6EC7D2CCA6C0BE14E322A5E9DB0897FE2CA7E60B9827E6EC39DAFC7
0F1CB9BC178F130B3D7BD0EC942B859C91EADB78CDE4A9F6A40DA6E47D33982F
31146C5A181C0C4119D17C560CD0AED00F3E21BB22E6B2271613DF7982E97287
94B911AE5DB0761E36DE6A5D622D0A07E8845724D73471C771FB388DEBCE8AAE
26FC93AE5843D2FCF133CE2EB99D4FF676F11A4F97038095C2EB2CAB65884F3B
9866031EEF0F22042A5983E44B77F361AF2B18BE63F52C68BFB683965CE94D62
578825B774B16C5FB1D2CFC66EDADA30D5A17A5954B974F83595A3FF24410BD6
0A8D4189D2DA0BB5BA01A7880E21B530C3A13D9F59A6DD573EF9461E22981EB7
4341E013E9681A6D7C5F703860B9A769DEF6CA9FDA0B21620DB180137A7EC02C
B3CB4C20C883AF025004585BA5BD5E6845F1BED0EEA915C8E476DA4B7C3AD050
BF077E6799589EDDB5BE6BABA56EB05C487B50EC4EE878DCDFC47FCB83408D77
A6A8A7EB39F33ED89C01DB68EFD891834837242290E6F139F88B264A896C90BB
3CE0ABC351B2F570EC34BBA052170AB42F95FE279BA7053D232E0B8E27323E31
4557860C7F0827BA1006A4EDB1D2CDA9A6055C1756E156CDE1AA1646FA00A2A1
ACA0475A655F1A69FBBF2A6D2BBF92A3B82F98C02657D25EDCCCED9E14B908A5
D6053506C391705D6446A1D7F1EFD169E73D7D1894E8900D7AC18C9D57907830
E60C817A460AA7F620A3194E8BB7EF455C242812451BA9E1F3857707FB7274C6
725DE06E8716B41E835231B450AEDBAAD309619A2CA7C68BF7AE91239F1863A4
2E771F67736310628BD00C08A27B0C590C861EDBD4873680891A23677CF06C13
74AA5549F5A4264BD84D7FBEB1868539CBF42360A328545303C71BF48EEB999F
CA24B93EDFF918FF0F7AB7C22E5610EE5F4DEC41BA8B670F63D3E047F8EDBDA2
6B381BCA27C06BDEFD5725E05379DA8AF33E9B56C3B11E04A32D687A3DE4528C
9E61C9F6B211A65B6E3999324EBD8D12BF6194A28C811F604C2C38CDFB929537
3D918275E17D944CDD39092DE2BE0B7B3AB3337B2359B096300E7585CB981167
42535556A06F2F0A1168677F2463F7D6050CE676F06EE0CD971361843E81025E
3415FF7F9745A93A475EB911C40B12F2B693749B2E2E2136221AC3478D27E026
BCE753BE1105F4CEF6A8D68263A2C18006FC8F9CA9609A2718001316F0FBAD75
9AAB9A7271767465AFE981394C851D9049EC2A2345535D6E1D1359221410C174
DFE233DC55F2FD1305141AF04B49F1D874D6D1E6C965746F064B8E6FE1879C37
A1E08471C4E8F3C79819648E59DAC0EA3CACA99C1C792823471BF6DB8222E287
9F3C8452D4FEBBA9EC0FDB41D0A2BB7384B96D8463CF652F6878263A74ED1561
1FE6765657E34CCF4D4424D5D2050F696756036A7143F2048FB7001CC77E4A04
9F7172499519BB1160AF2DDE6BC1131EC7C1162573F54297D94F6DFFC6B4B1BA
4525028A5BB417EEEE63523D6ABD8035302ACE9F88A1DAFF1C0953C70F5BDA2F
10A9DA25260CE492C02A138CC7CA617C235562BB148FBF9B4B19E81AB5B064F1
0C0DEC146055FE4C5815E0FFF7BA8742C98E6A5F5184ABF5C298060E47C0F420
986CDCA14DBBE4A677BE0AF1B361E2A9AB3003678EEF852D7940E850451C550E
E27670399F29A063E1FBFA88BB7AC68A266439875129ADDB0CB28BCA4E8B6809
C79D5C0B6C87548099AAAFDA263AAEF21B9D499AD044DD8FF6AEC6A3CE18C6B3
C79BAAEFD69E4D3B952CAC3869365C275DCEAE9B929950A54CBD289078EE33EA
5C2F0BA28FB2F350D10BF43207DE7DE70802B98B9C81A168954F1C6259400D08
E20A7891130E312ED3B22B9A09C979A56B8E2A92BD4D7006A266D4659AC790FB
9EEFC002FB61AA0478A60976EF3E57F30CE1B9E4400F08AF01513D83BD65FFC9
BAA376A98B1EEE9EDBE9205C39FC29EE015D58031376B3D20F06829558B3DE77
6B545BD3DB8C49A1FDC842E89EB774295414E185744A69985AE6EB4DC19B2081
E630DDDF51F8C07B6436B7F94363EE9662C255AC63E22669025DB695DD6E94F1
A578B33EA2B5C7189C9C1B6FCA7003A22251C1F382467ECE18A054078391772A
98DBF49392C0C784BD5B47926C685D6301301AF688FE6A1CAA7FA8790AB4BF30
9B6067D287487FEEDC41DEF73CE3D7B529D57F922B7F2F64D0C1547DA09F3E79
9B1324CFE6F8EA741903D6C34344AD33EA627787C3A0F7EDD5250371CA3BE72B
042DF848E1FDE8190F91218AF915E2D53E923D1A7B9D373539E8A81EDE904A41
95CDC50A72CDCC2465A9480151BB00EDA0C710CC1F3CE8FA652354994A9D4097
6C7180525DD889C4BB064779C7881CD23F4F3D0AFFF21114721A2BFFD0BB023F
8955FE06C88BDD881581D85A2B273D435A8BDE70920B952D1CBC5E40D2852E8C
DDEC5AF8C20A78B8E5333D1FCEBB85B1388CC4EECF13B53758A3BE19B922D16A
67574F257C9DDA5A95C556F72F4036E9CBCA5A911E69DD55C5D7526784BB4992
45514FB4813270EAE7E80C423A01506063D2D2200711E0C5C9D4C85F77BE4DC0
BAC4BF214AEE030365F042CDE0FB79221DCFF97A6B18CD1450EF007F73A55F7A
99286DD127CEA81A0825BFEC470DAD523D09FE0F2088B67BBE95A0302E1BE401
32BB3AD6E600A47E7C02D08EFE5397266D27BAAB09FE62DDCE224ADE33410C82
A2921943FED17A1E3AB5F5AB08101EBF46B81CB362B87BB87E9552402C3045D2
F452E9EC8609F3A9544000074F8ACBCDB46A52D70C2D3B9446E6DCBC1491ACFB
1FA8EADEC08AD8B61695CBBE6677BEE12E6AE7B62DDBEFBEEFCC6D6706337662
B94C911BD3967DD4DD109985EC7179FFAD206CB5041977C4F4FC48D900347A68
54C768BB679DFE6227CE5386FDFADFBA8AA5ABC54273F905FA8308A8F56A6331
825F1372C739AAAC17D25B0B556571DD7361327EFA5AA33DBBC3E975BC30158E
9328710523E45437557F74C4AB27AA731536312DAA72F7FDE402F21E7EAA38BA
B09936077093D785F43AEA30B240DB14FD88FFAE2C7509B3DEE24B4649ABD09B
BB634E8FD30A6B82E5855BB6B2260C7166F11062985E2AFBCB6A6B137A8B2A53
8CB8B7CE69E2FFAFC93110751B5B4CD2DD0DE22C313CE16B372ED2FE4D0EEBED
4E909C135200D249CA0472980E67CA31148F28E164F720509CBABF8C4F0D045A
09D1B90DB9FF24EA3CDDE47642CB96345F32D97E77A5862B34481FB2BE7A5394
92EE4409D3DB80CC0D5BA5C1AA9B63C354E801794B62CA14BC0A2183BD9BA444
3C8B942BE4ADA0F86B718348A9E8270E78DEF6B3A251517B91862AD5F968D8E8
13A9E6623030771682BEB70033CEA463C3C9EBFE0934A0B9F4911ED750C05EFD
2E4F579623A5F31F086631281A4858FAA6894D92925BB0C43821F040000EC807
571C66CBCFAA97BB1570AD58E141DEDDD88F70564DCD8D03F8905BAA1B6ECED3
32EE0771A4FD82326AE185C477A9D67EF059D8F91531FCE23245071CF2D0CABB
15CBA3701B0430450F96B2F7BD5AEFFA0DF81D5BA3F60F28DA7DE21F45221695
665FE6E5801CDA2C70E9E5D3EEC2776D4DDE217681ED77E88D2CF94C3C25F6F4
11320059869D30DA6008CFCAFCE32B7C0B2501E3EB32FBA22743FD30822B66FD
58535F8DF45AB72B0FA21D59E8456073945B10B7644563ABD0BEC01611741EA6
EF546FE87094992601D8CF4DF4BED62AE20551845A3706D05A7EAE30A3284154
65705C6AB0224772F8134A1171DC10B456FC5E8E14E22689D398BE528EF180F7
D92EF581C3FF620FD9DDBF7B9FFF94B11C9F8EAAEB1C01FA9C2B9E0A6F875D61
28DA858D558BC52779A8EF9AFDC4F435E270D51977C31A5F9BB7A43566311456
335FD6703BBC2F3C588C42CC8FC0A8371135F06C87398381ABF73F1DE408C2B7
E429C89F6931A3F8B9B245FA6724E959D8FB6D42D38F0A6A260CB0C2BE3D5CC7
46A42C096F40D6B935E1CC0F1D31D3D04EB580E03ECBEB163C653EE79C2F1579
4CB9F4EDD2750C770DA4E413A9E5A69C89209BC71928599D680590BF576A5A9F
BEDAE7C12F2BCA7CA923A10606056DEC25449E2FBF58CF0E7DE7CE3840FFAEDE
E7979DF757694CB3AB0FE5D55496B8CB907220ED014A091DC95440A8F19BC54E
E197A6D96505DBB304B08B049FAD19948F0086E62D23D91867BD212DD2406457
A56AB135635519F76EE1819C6DD6DD687E16835141BA351F1CA9E4C9DEC44B7A
059417A39666022592025E51E44425EBA726EE5B5B450E365530763213CD781C
770311FD26DF2F60EDFD2DBB20744511E74CD98477454B3C680F90A7486D974A
71CFDC3832D368C2080CA8069C6B0CDE19AC96426BC68601287BA8DF67B346CA
026F44D247DBD94AE84C1CAE3739D925B0DD4480944BDF463C682991802075C8
AE72E7FB4BF6D4E4B4D8FF55167F6F2601E9462DF4721B24B7A1D1B0A4D75934
F8443E9AE3BA1776C8BE0477ACC0269874464E57BE1B7BFB12910908BDCB7CBD
C9C0FC006E8C4C3F2D110111A032735D2A6805ACF5F4FB0387D88B3601F72A8F
0DC40BAF3950CDE241F0C257CABEAEBA242F0E55AD5C5266CBE3728B6A647FE6
F8DACDFD1305141AF04B49F1D876BFA36818E92EFC5EBEA9C27006073134EF0E
432B63C971607E59B77B033A1752FF008CF1AB9D21481B060EE70F2A3A1E688B
83F735081D70AD9D1D26D298EC84EC4C9C12DE5B45FBB1B6FF6E6A4F0A8161B9
A03DDAE11C99F3B57AB66439E998EEDB763C72F8851F78252EEF3230B46365ED
E4E8EFA4112A0C107C70EAF3F18B51BDBF4464D82C2AD48388DA0976FC112094
7F5B35FFEFA980189D6BD2AC5D6F77AD5026B084780EBECD76D599D17920056C
56795EDCE10321CFA3B2FD7A9825CC6C6389300DC9562CCC201440929A170AE8
D85B5063166D31B11B2B14E277BBCF3AB60147B9C6F202369C03C964E7E3BDA9
871185CDAA9FF79DB9A792961906DB71D4F9AE6441427E41D12D948114EEAF51
E12789B00B4F7AC6380FE2890634946C321B32D8626C05A673971332306843B0
8496BD3E8432B9C651C1BC76B4B18773B9F6572AB0E5E7CDFD746AD553D5D878
CE18A054BD1FC0109D7840723435C061720C879A86F4E098BE37BDC9672D37CB
A9DAA9F9DF7C9A6F89A909547F9C7CF311F4821BC5FB9ACD4403E0EA7119629C
1A5597FF7ED694FDC3B720A9BF6E42EF554040094307F31D2F9463C93AC8F5CE
97D30ED34574EEA2B17ED3BE9399899C7BE315B4DA7E5ED0D36275119146C009
1664403524A1C6FE77C016E74E66A668A5C6E75AEBC1BE8F2E260434DF247F60
A92B2505B9577572CFE7238BDE682FC8F2E6D464201C57C3C6F9A8B5216B3946
50F87857A4DFC9382A5822BD311717E4C022CEF77B064611D742E6D31A30036E
5339F7E48F38919CB1BEC39D549089FC76A13E141C0F95E57D6C793AB2DA85DE
E4195D049B05F749D7798573F5D8A3CFC8C97FBDF55CBC72E88FFB64DB01CFE7
55FF986BC671C467D0BF22D53964D83EF5C41C3C5F85506818BF5DCB5A8B0AB4
D8371C933E0BD30E6B2AB2966096FA48409745A93A475EBBF2AEBD8D547C08C5
64186568AAE2ECB35BE974E508C3C851C0561C1951D346CE5AFDA10AFF4FD4B6
4778FC640962BD87EA9BA0F2151B3432D1B30ACC691C42C1CE13FC57C62A86A6
D21C4E407FE0FB41B994AD131029C4A51B6CB9683AE302050414C0D5691D7B9A
F3392C5D4E1265F2D5E1C843F00D43F849713BF0530FC35102731CAF8E0738DC
71F37038109D709CE353B96C24660DF6850318C8E9FEA7AC46BFC25E994CEA14
F399B571B8428AFE5D89FA4C7AC998D31F9FC2B6EED8B1290FC6853D88E9088F
9AD834A53A0DF31E80804853442F5A2D034F24646F17EEA9700F705F9B9AC30B
FA5FFF62F8FE26A02632ECDFD0BF957099088966254AA1DC42970A9D56E5EDBB
E2B640CB8B825B279962F0181020981DDB852D686E2ACCD5982D7747A41D0AF9
AEB8D1B8FA1E1C15121B26D460355880DD260C6CE38F3292950495C8AA9050F3
077109A1CD0DC0F0AAF2F083A3463721C0668DEA89C8257DF686E524EEF670B9
3B4B89397E9435685649CEB53C2A31F106FED25998FA62C966F342BE59CAFF72
3195089CCCF80F699495633BFD84CB2921D461A2637C80EF0FF38DFDA256AAEE
DBF510376176AD76F2D54179A801418D4E3BC350CC68E261FA07D283AD07C11E
9848170A39E20D60F86764C2AA73949A8C2F8087E91F6052CF8342120D0FCB37
3C12AA0AB340A8F616A1BD6B4FC88EA8A641F1BB55E3D8320420F84DC9A921BE
A624CD95255E3E09EAFC0E0F0C260E0FF6A4DC870A3E89D8D0F30DF7A93A3A88
07B6E8F12678DCDFE6DC59A64B621E7593939EA25D1EC4B2C6BC9069AEE2006C
3E2D0B4A88B8368CD52DF9FC1765940B9F9886D775840E61D84153E77CAC6C6F
8670398A8B4B855CF0A40B992D82E15214879E256902BC2699F110F36C6CFEBA
39E5A8437FB5F96847EFDD65793FD5244595F85A709F3A49CA746D4F166B3C92
300E3FDCDECBB37F53DA675076CA58454166AFDBB7A8231B97A3E146C23041C3
B4711E4B46BDA71FDD0C502B760709827CE4D83B5F6CCE30DCF48EDF96CE83F0
5491267179FCC9A8ABB84FC7AA94D3A4EAB1B2C4740BD72D25045DC76E9A9B80
68D5D3E8EE1957170671A5D9C955A4EF37239AE1E9D8AB475041029980B044A5
8F18B9A6D866D794D8528BCB437CFFCAF57789C184F2DC97ECB03EC1F61C3653
46EC966FE729A9569CC28E5E3234FEE60BE0A4142803D601B4C2212BED103EFD
D22FA22E23C06C725799EEBCF067782A70CBBD683CDF8230B776306F1EEFB665
7269A3579552F54414C8FA70537BFE48DF2DBB69955D54A019DB3EB8541A435A
AD1748832099CB36FDD4BBD271CAFCC9EBBF3457B5BCBC2792DB64771B00D253
0805ABEC52409F1BA974D380750404774E0B19F8E058F8A28911672B7D85B1B6
53928DCDA5CEB0EC48A865B846C155A70B8FBE7F3F77333AF12A3C0BFA726AC2
2F3222D564B3C0D3BD5165F758FC80A98E0A4D45BDFEB49ACAAB754587F7C0D4
2E9E10F5D1CFD1B577CDA4D7E0676CEB8AF1F0D2B736572A20B8CC7B4786FCD7
DED428DA1F1F0FFBC20398167850E1AFB74D2712A90EBA51058F489A76DB9F07
875578ED9FA3972AEEACC0F301F9D5C3AE6F12B2D411D0EA973AA61BC8AA7E97
1BA91AB3B06DA9E03E615A60ABEB4EE9FDC847D1A7FC826CAAA9635A1EF8E7F8
52B6AFD4CD716A4C5F5EE0F40D2612E7A7773A4700D4958CF746B2CB1440EAF5
F3A55A93D8DAC10C6424D80359767B2BBD1D6DBA50A73077FA12430EEF507C20
69E0D61AFFD59DE618859702BC64841BC9B7B81B94A2505EC3CA2A4C0E997852
B119B421280290A53BD4FF514FA2E7A04985FBAFCEC07177A67D7D718C6AC003
084D6BB74CA1A79BD9416D67F68ECAB1355C50F24601154FE9CE877028654DD2
C1218D4CAD602100F0ACA32E78634D198C8E527709BD290321AEF465C94DEBAA
BBEEF11736FA63BA313394F0F0DF307B0947E7F4C640816B2D839E88E43ACCB3
CF94A7BF97173F4D0F890D6F2FA08D55F0E27A7F4F0973C77760FD5A7EC1F16B
BAB98879C1D56A67517645CC5CE5F80BFF708E4793636E5F69972644E9C53091
F219F98BB2AF77028D97121D3B83F8F15688251FF382F6EEE604BDDF3F50B971
42495BC7EF66401D74E6DADE419CA77C367651F74BE1574ED03852B34EA58985
7B19BC87D3BBEC8CA607EB12F348B92071729D3CE3E32AD1A48DD1A6927001FB
44755E085DD627628FF95AF625B6E23403E118E84ACD5635E36FD0832B5BD7F5
53F7F9DD798F3B2663D5644F52BD782B2971AFCDEB7D6EB100853BCBDD1CD0C7
68D40F77F772448247BF09D6A0E49B20CA3ABAB64C14DBE6EF891E4D22B39F49
B4C86293C40A95CEDB254C8990B3D2545A90361EDA9FFAA4F94A60B091FF098A
8349BAD891BB19EA5D887CF8822CB94B425FC815FCA612770E188125BB5AC7A5
7F25CCDCB1BBEC55A9EC5816DDE1EFF2AEE233BB901818E26008DDADBA357493
5FA15A2AEB3732CE44E15C6F0D5945F9B0D72E63755270A17619930F01A054DA
9FDF51984AFEE4683F76EB7C59513424CC016CEF741CC32E2D7F2F8A0D76FE02
0781065DB3350D240836B73D148EF4314284F23AF9BAF8FC3B56C5E37F1C62A5
0C356982B7864555B8A6B915A689368275EC2D76F0ED88048E0DAD98F70313C0
BCF7A131602175732D52AAB6149568986379AA5243CAE1FBBF5CA8416C53CB94
EDCD2751E82A2601FFB05D90A5A82312990F4512824A25EFC13D8F0C60F55FE7
4E649F5038A8F9E13136D7021D818A876F1338710837511A912D08A76D478714
E973ECF6F6BF7508A968FA5F1D2477E5123ECBC9328090D9E351082CA3CDDC27
E83A3ECC9A26157983C747E4CF5E443430DD29A58D195FFA85F345C2850125FF
3B85286A86539211F102D06A40A62A8DC06D0F8D4778C9B469AA6D3FBC11A562
B579A3F59615BB28B04F50B9D7509F1957F990525B85A4FD24540AD713A21FCB
4F7B3C625D0030CB226F672089043FB9E22CAE2232C24B64C8408D38C8E6A0A8
8E0DDDDF32C7ECCDF030A8B004C7318A9970D3812D65E595932E83F8A9A81458
948BDB6F9D656F304D974336186EEA1CA1B05AB9F53AAFFDD0AA9C81F8AF7B04
6D11FFBF7BEEA0C3FB8DF531E3BF960485EAB57DAA8E245076AC20DB35115D6A
DD7B571EFA34CF3FB6EA6EDD6984BAB0B56007BF7CCC67DB9F9E33A4491F2194
80D7CD327CB21A2ED27FDA7694AED69F8621C034DAD9C19FAAE49AFAA6FD8316
FD7C3669E792093D1214F96A40D33F525F8D7F43EE7C901BC890573303CCC263
2092CF95D6F12FB07510CF10172A17289F07B9A74ABE91E2D3D1626A6C452DDD
5D9FFE17C1AB0E7DD1EDD4C7169AEFC55B552A0E36816AEB372D92689AB4122B
BEDAA06569FDE524CC2B2F84EA5B7A837B880ADE432ABC8F601E52881F5305D3
9FBC27C9254BD09D8FE7687BC14BA523B80543E5CC16B03A042F562073E79054
AC094617887B255B45AA8C0FE4561A01D78B8FAAD5D9538D40D2173D5B8D8EEB
7C0937484B54C3EF7B3DB6D8290AAC56F4B05B986B0C6CEDACF572324DAB9A7B
6FA2998DF5245AF8C3B8B6DF7235D869924573D541D71E6461500471693B9129
92BC817E7042FBD8727C7DA9A8D81CB047B3AE8446D1F720889C7FC5DD1953CF
3116849EB440CC7E8E5C9B28527E679B4FBB61ECFB18E5B96BA29702F98221D8
97052BED6354EDF507D110D630C98BD07CD232DCF46AB32DC91F675B7D455596
BB13E7F33A2ADBB523624046D27E7F3D3A277056A9E08A25FF4A75F5BA2AAA64
FBFB95A7D0257911DE1E389CB895DA182689B16CD77F36A5AA76BFFB1C07D83F
4EAAF6997A01D7335A08B8BE47F16C029D09F97C12D90452DF1DF9AA2CA014EA
E5A4CA1763DD2AF6646AE3A16A2A4388877B2A035EEC50728984BF50DDA0B83C
B645B5D71CDE5FB380E5F5AF8199E4476AE72774E3D078BEDFD40049340F96DF
DB7D2779110343E56E0424A3A7602D68D194B7454D341FF5DB9D818C58066B85
3487B44A5D17FACFF76DB45DBE9B496C4B8EF4AAC69DCE837EF400BAB1C6F6D7
C6B353DA57950467BEF17328B65DB9BAB6A49FE620EF629ECB29C6D8432C36A3
C34738E8830BDD53558A941640FAE5CAFB1E25B8B7A26FF50458EAB34B0AF099
8A92C18D8AE1C56554E3A91038EF29C178C0A82E1EF5332C61623714AFD8CBFA
83C6C5A5AB819CEF1B325F6A65432F22D774804A38102629D9EFFE4BF9859596
6304AB31D224045184E81C83C06135E89D2CFF17FCAB94C48FBCD88B742086D2
2C7EA02BC02666A5F28E0937D4B4571ACD4E67556E14E3CF5CB04E490E3A6911
F3288CEC83CC64406DE5D90A059D561BBB9FF62EED38236A85FAFB8E2FAF0597
6D898BBCBE9E2AEC78204449A841E4C47689BEE6AFEF3A8A1EED73B68826B154
A93636AE4857093BEED8C005289F6CAEF80473FC7FBB43A297C72C3CDE7EA7B1
3488864A56B1A1BE99B1B9853A8B013892BC82628C3460FD3FD20D97D6144592
AD70FFBB7BE49652E4C7F50215253E567DFE2EACCFF04A2777F39A945259D073
0493F2B71BC7BE944C027EB4402F1FF1B43CAF435142594384FA715F79C0A2A3
9014ECD34DCFE90A70620B735F2B98D2745187C04AB7DB52ED7643198444E417
AFE89580D6E9EF0C86895E1D9CFB2722B485B72080A2360BD5352DE6A0C160EE
1312C979D9DA9EAEF9AA8C5860EF0B56DBF73EDA1044F0CDCC54E726DDA26D15
0EA5CE2B0CB673854B8478A465CA5F355EFDF0B2FA0A931CD17E83707ACF0CD4
04FCC2FB312D4C049FBC463679A22F0D52E3F467B74DAC6AD6BC184C2882FDE2
FE0DF452B8E78FF4CDC3303057F0A516BF0B56E360FBFD10B89D0E8AE7041F52
C6FCF1277924A7466527B590F577B51608D3FECD3028AB40DF6F4C52B15F5FA7
EAD1994EBFB253B972E926BF2415201745C36FD67DC0B5EC29AFAD535876DD15
C315886DFB61E94397EF1188ECEE4B6B88ABF5B5C3DC10D9087A71326167A34C
B960C26B64702F3F9E07E06235BE8502FA9E4B6E6F50966B571083B0F647F991
590DA24B5E3381B62D0FC59E38771FBA6214E4822AE2A122A36D71CAFF3909A6
6A23CFC11D284912F6D7A5FF191F3B03339019DE292B384503D8020CD26B622C
2F7CD376FFC1EECDD9114D530140C9599F125586D80E38BE4AD2A892E8AC1E90
B174AE40C8EFB80E8815726BD5521C4E92CBC6AC3F1F7532E1BC9C9BEF4E54D0
E7BAEAC7B609D77BB285E3E4814232047F81CE1DFD06E3A4E9866A5B27465BD0
A6BBF886439B13C0CC247210E7507DA4D377175054175A89C04ADA9BE53A8BFD
1AF3D53DDE97BBA5AC76842EC705585C924F2774A09964DCFCA47C9AE725E5C6
8BAB6DEB22D4D12B1C3AD4F5094B6D96C9E545C9A6BA5D1BA66287BC17F06CE9
1B83AFFE1EF6B7EC58FADEB73175256749F478B3B74AA6FAED4401056DB1EC00
03BEDCDF052D1AE929DE6E1268E76FF616DAA51DF3B1B9CD7F4B642F747936BB
11E21AB5B13A4DE22A72029221953D0A0426C5357F7F712BE171AB549E8E1ADA
7046FC28D4645BF52AAA7D8779DBFB42B66D6A50EEAECA993FD694ECD01A7A3E
1EA0E3B79765AE51CC8667E6435C24ACF7C455F52D2F29003370A63CB9F598C2
F559C7C2CA5E78CED41513B3EB22A9DE02D14D905F484AB8B0CA2414C2B1AAEA
C0B22BE70E0BAF849544750046F60315D88DA17F552F930687499925245B8299
80EA63DA27FCC1DF2A50C14A177F200389C83F2EDA962B49E90633AD2DE330DA
2948667520DD7BC2B29CABA9386D3C81B051C44D1CA1D87D4A147C8F7C56591B
A554EF5D79B9B9CD1B2EF1232FA3151EBBFA361593CF107B618737885194490F
2D722E8360986CA31707F5C2E7376B7BF06321F4026AADCDB29E248482D2ABE2
FA79D170DE44B561B78EE0B611BC5AC6069566DAA19066B51C25FE9D78B36E5F
A1B84B0BEADB59314AE0F3A9EE1246EB7C76EDA0659742CFEEC2BC659F17961A
ED9382E1314AF8EFEA168F36C8ECDEF54C6B5DD4F26BE7E5D75EB726F416F424
08B657DA9992A8DB8E5CDA66C7BFC39DF180E256DEE1190C3E0D55F6C8C1C85D
38B0F644F3E7934610C5FA4C656EEA8A41B5EAAA82C87D9283FCF90C4EAAE6F2
3C168148EC4523EC6696D1BB8A36588F082C19E6E1E81DE7BC6F706E0A57868F
3AEA2DDF44717B6B2B66B750A97915AF598727B20178DA4F05258093A86569A5
B8F4E042D1D0DDF0A49EBDFED31E48CEB3CC53880610D70F071597ED3797B5DE
E0864FF2F95B1A8F65FDC80E3F594117F50786D716F334248CCDFD8508705EBF
42EC47EDAC5EB5CECE43B5FFC71B9654C0CD0D5715AA72B9B2660EFC447ED123
AC4CE9B33F5087B04C4E93D0D1262054F1343532E74B5C6BE13B33CCB7B380A6
FAC9A2EA4F990890CDC67CD832EC824E03F97243E97EBA78A4B34FD63519E984
C5EC7CA3EA2DC880335E0F5ADBEE191AA08030B750CD7EC74D10BBC1A15D611F
095149E90B47B7991C032E3F0B911BA2946C9B8E05F087180FCEF26B8C3F9BC4
CEF9E71472AB086AB80689C2C00EC7226DF86483BD2438FDCB6DC1BCFF81CF03
3F3A8A826BEFA86AF9582DB19155776D311C47FF72D385A5FB7756FD36A2A278
4558510FDF7FC059FDF17CB514269C8E1654D1C2DA5E6D5FF70F0BF581386596
B63C7922F21ACC3CFC8CA53AFC3C56AF7912CD36FCBD29C2E569BFB53399FCDB
0E24C0CAB19B59CED0C3C74C8D0C05A9672D2809683C3B19CA4F6668B5F8231B
1B18AFA0D8B7B85A08CD504E139862EFC2E9BF2B469ECAAB4651E0EE325204D7
621C78FC5CE6CFD00999285D7E9891F6D4CDC0F9A7AF87F553DF1DAFBC09A361
FD3F87791958F60444405DB6A52484A897F0FADDC671CA4C3A7C703D76BE9757
C0211ACCDB26AF068DF6632DDECD3D907D607C74A20F3D4082DABAD6BC5337A7
0F25F142C44B43C05966166B0C0BA4C762262751C26A0FE6D6B543B1CA63ACCB
CF2673F7190956CD187EDCDED0BB512BF7AED3B59A6F1A07D391ED7618BBE2E7
E965234575B63E74FC255BB674EAE67A82CE6C2C4B87C4B93B734C1CA45C435F
79E1781A9E1FDAD12E2FE4AC2173B73C838B6D5949FBBB1E4AA379732957AC35
E2C2D4F610D6A820147999769561942B30CD8F4BED3AAC0131065CB500385362
C273D4A01A3D6D50483D5A43557F139B879CBE59EB4D90A539DD107A52491A2B
E386A518E8357808ED1E9504F5A91D094AA8CD467E9E59FD7FBD09D37DE855B5
1DE6F7CF415CC734D5947C9F8231CDE171E63CADAF734579AA11E3607832D378
E2DF823E1B348495B77B58A847723B61553279121D66140874153114B81A52D6
91640583CA1DC978F11CF1F3C9E24DBE49E96DB2FB941DC7EA3F004DD85BA322
571F48D6F2123063BF33A0AC208D7366D05A7D8E2BCDF099DEB628D7438FD654
8EEC8D41C338062D4EA75916CEC1E3329DFDC3DEF48C103BDF468C457D087BE1
5CD43BECBD46E339E95158DBA2BD4D3E09D691D409BD639F1638F93051E9BB22
067BDB36527AFD3B8AD3FE05A8DFD048A6FB52479F9CBCCDBED76F95A8D9116E
E821549AD4E634F4466738C666EE64B1AC50BACD724015A8B00F37FDDF454E7C
79565507AB1C2EF74DFBD15023E3EBE9BEA0F81818783960D641FD280736662F
4BD9F84AE3E98E99E8106180DFCF001BFB1B948CBF14E9E37FDECF6B9C182013
AE6F985C5234C45D53C144EBDF1EFABE4CBCA2C816D9D0B6886496EB265AB1B3
0E1EB47949716187E9AA2442043290EBC7271938C93C18EA9F6576FA90501335
49C913AA54AC09B9EEAB7A9C4F1F0EA6473D0E76DFED27FA10B525B7D1BEC0A9
D7EAED8FC6EF2A79A4B3FDEA831A38BE6688432CB4BA0989A7A0FD2DA2E52878
655E0DFFBE0AEC72D53CA24CEA8F76ED064AA715DCA6CC49EBA72D304263EFF2
F2554308B9EF0FF9AEDCDFE3DFAD450A63FFBF38952B1A9B23B06E0893AB418A
F962394552CD4DA2AA4FCC3D5CAEA4B4ECD9BDB91E392190E1A5DEEF21582A64
AB454981FD0F0738902DC386E7659616E018E7E2EFD9EEB415FBA888C2380B1B
EA33070791A9CB5904A2D37200E269024C26F81DC1CB798BB13FFCEE2930147F
679C2CB010E15A84AE30E4846980EC5C16646031A6A05C5631674D3DBF548B50
8AF12A83CE6B29F9C77C6DD413BEDA2A09D70000B3BFDB0081F171E0DBBBF9E0
7B66994CD71001DC16BADA17DD88590311DCF8123E00A6BBC4C3C746CC83B647
E54B05D3357D4A893A5AEDC42A238B87B99789377B2FCB2343AD613C0FCEDBC8
B837B899548C30FFEBDEB9B2DA73CB7D8E2E6B7E13768CB0FFF33452686CB041
E5459B3182F4AB8654DFC013A368FCDB34504F0226E8ADEA67F55F01CF6AB6EC
BDAD3753FE183D3A74B6AA0F40B53A665AC49BE7F2AB70D9D183B8DF71CD39F6
10905271985920DE128DA6B292D0002D8F9D3C44EF68E4E09A0E265A289567FB
ACE974E46D03ADA08AA153E57A922E6CD2DAA893E9C79476E8A489C3155C56F2
70CC02BD1C701DD9BC907232DA7BA7C54705292C502D69E4CD6001F6D622CA64
54BC163A309133BEB62F8D1691C523B6B445208E22E4E44BAC7FF3482845D902
B1685A9561E9CBF76A48948DA60A2F6F67CFCECB31137B0D807BFBE73515A028
56D8655653D399CC47BB260666DA892D270E4DF700F1ADE983F653DD963B807A
43EECE9B0D610D6DF54ED07F5F983DBED8A66330400816B9EBB8200F2AB7DE32
1122619977567D125E058B3DFDABD7F3AE4C922B113B7DFBC3B937AB9ABA695C
17BCA32CD15398220505DCCB313584AB3A708D2BE2CA003064910B6B37AD5F8C
604E7B52C45EE8EE68DD6F8A97F9F2590B83B5DEE95E650295BF3DB6403BCC05
1D2E8086CD4BA67AE9B8A5610708A08274F5D60A62F43913871A921E3786DE1D
A3F1D56AF5D4660BCDD4369882D4E5880D7AFEF6CE8130C516FDD63BC4247574
5461CE1F15BBEF2B15FF13A4C29FD895A6B5D5A01BBF11084EAB8338FDD49D84
592E679F729DE11AE406489CEC00B48A98BC361710C6CF862A60BD780EB481A8
C18EFBEEBCFF88C0DE48E7969439C42BADD944195E01409C220B8A6645E22486
CB506E276782C992DB9F8143589E602B3FD0B7A3FC3843AB38C5F2DC1E3E5836
3671A1261CD20AD7EBFBB371B81F69BF1CC34172542B4560851F4EBC981F2CBD
2F0A59D3C459C1EC185931C7DC99BE66801A26DBF07A97CC245DDF7581346B22
54CFE2AE6F4E4B0F7687F77B85B07F502423CC2F4DC63B7BC3147B92576EAD50
FD0DB7809E8EA85193EBE4AE0B3D5540482607441E52A0F2B667CF75A4C82937
8DB61CCF20EFBC6A6A9FFAEBB5C4DC13B152361957144D0A379E1EF5FFB4E64A
8D0B2C9D06A6DA01FE55175AC439F1C0056BA48003DE821BCCA6FB8546796B6E
1ABE8BE912F5996FC8EA34884C13832466823DD8CCB8AC705A2C2AD1D5F2ECA9
2F53611145CEAEE80B1BD60573A2DD4599BFA4BE5C1E048160160A42E4C21E6A
5C88A93B0287D13E26C314870AC4D896CD04B43C7A55E843EC307FE6B9688648
C19BAFB77606305D978A2318A18413A45EB18DE0CBBA9BE15A9CD41E80135AC8
9B41DBCF208A73201A9B23B06E0893AB418AF962394552CC9F237BC16C2ADC51
17F025EE75EF233DF484D3C3757DB075231895BFEA46C6CD3518B762A5F30DA6
68A7805B352B9039F5FB23526E5D4B7A25315399BF60DAD04A72F4FB24AEFF9E
5AF109EA5444059BDD7460BA7D25DD0C40ED73B11ED746706DBF75FF339487A7
C4B3F95D7A208F434CFB044DF60E68B023385A6B9B21E093810AC4566110B0B3
677FB4BD0946A0F7DDCFF030C38FF24CC0210A0111B763692DD54D79F059602D
8B97296FBA91DF3AAC55B5BBED234ED56004802CECBAF3D0661D9FD2FFB2CCD0
1ADA83F1ED768959A6107FD11D6C0012FB6B85EE79D111426CA19AABE1C1606D
EB6DB2CC8DD2D5EEEFA6DF697ADDA60AD2549A0ECAC510C8C142BA24A42FA76D
167DFD3C57103C9E30DD663AEF6B61A0B581AF8EE6A597236EFDBA1EF02347B5
CE65D99A38C4418DC5B040E35E2DD3676A8A81A1946ED28DF8CAB40791BCD8DC
9B6CBC52C5CDE02BB9ABB47FD96286553DFD8EC23ABB68A3C795A88E93D136E8
BD6BA50DB610D50B43CE4CA78F87D3790E098968D66B29E5BAE53DB33906DDE3
119DC51B8AA465094EB11D4693D97779D31A52A9D74F68C6A77E83D1A8044567
CCF509EAFD6CD7F3C410568DEB404B9D8AEB24C1D87CA715566BE26FFA2FBC55
83E132CB0122FFE55A492AD242A1053CFC1235AF90051CDB190E4D004306FF2B
9B6301CBCF5D508B0A4D6B6437127401C1635860914B248D43349D659B547E43
5E03A6B6903781810B4238A2F6675A4AE36F04EC6182C821AFAD335BEFBC695F
2746A01CF6C12DB8975468EADD0088CA4D12F0C60416532EC7579F1957F99052
5B85A4FD24540AD71A0BA9F56320A138B76191B06FEC97AE759538931A6E491A
97D932FB94D9C5E8A65FBE05FB1551CCAD0E67D4EBFBED9C7575357562C9DEA6
BBF8515C77D78490CE6B997D699E5EB829C056E22971B21C5C64B9AE98CC6628
E51EBF4843A46333463A350C18C4C0BC997193BEC3DFF23DA2E3D238EA59C3B5
CFBC6677F11BA45C8A749820DC1FD444701368608E6AA9578F7E5BD8A2FDED61
08BF941C27E086BB23FF79979B2BF4433EC880CEA71A4BA78303623728A99F4B
C8945AB17088ADAC17D94230C074F4F304F0B879ABFDD3FD2D9DEEB1EE7095F4
80B6C55950D0226C556BB06CE21DC15165D0CD5215D2702780B3D56D13405C5C
B5581D00E029C4E5278D6CD43B35EBE1B1354266A57D3A52B1F1450F45951D4C
D3369847457E0C03FFA5EB35504066C0422B5C2C731F42165F0D5447370CC4FD
CF5439980CD80E1C4D03BAA1C8966024DA9A35EF64C6505AA73F91C02B6F1B00
569EDEA5116DC00A533B9E331C9C08200BB83132601E7C4920D64C02CDBF0B7E
35DEF4CCF4316EA814BDB66FEE9AF91CE5938B121C4D7B323A3FC9DFE67AB5C5
6FA11127279FFD0D882CDF4E127C55862C5C7B089968DD4A6A32D4C2EF0496A9
358BDE5A2EF242DF0F81E6D5293250F5DC4A4776D464A72D3548C5EA920FEA43
516B1397AA1DC47DC49093792E921A2C95F8CF2A4A05A397C039A1DC277E4101
01A265735BA7B1F4C66739DDD45FA7B62AFD40217A2EBAC29D0A6F37035588EA
515DB7EB284D5C545DB393D6E0EBAD606A41171E00413C79DFB43B7EF5B14E4B
56E13C67417FDD31346B27AEB8D401350EECA6246E4DC59853EDF25A81E0EE24
E262B087FB0031D90BB7149E3F477B9FDC5089643986EB635B3386E362EC7CBA
53B76B11F1E34583E8E102E8622B3B97C602CC3A8226C5CE066E09CEBB4DED57
3B688E896D24689C35EFB70E7B391AF96354CB97442E256AD2AC5D6F77AD5026
B084780EBECD7038429A605AE23E0F19AE6233CA7CE575BC41E9F0BF23D5515B
A63C2AD07E13F93391F24DFCDAE7C46D1395E393A8DBD856899AB09027F1855E
0AB3CE68642CE6C07888B890196ACDEAEE2EB6B6D5B0C82BDAC2B0D3BF8AF70F
6E3085EEDEC924E2694422BB6AB465E68F0751BE49C0CD958B1546FB9FBEB2FE
497CD26728C459CAF395D1B75BDC9288ED9FBE0F93390CA7B842A96A27BDCB21
D8A1820F4E426160BADC0E0573B1394479513741DE60091BFB9752F612FA86F4
A875CDE26058C9CB36F29D511208B78A192E60CA4AEBFEE15DEBD5C99957283A
F6C90E43B3872A72010FEE32F01C9EA88D16EB98E24E5767912837B1C1076529
14BF0514620FAB1690C585E00ACCEC9CD911269076BC897A63D6C13840CB92BB
A1F67D1D889700C084A2D984D6E114BF29664F1A66036877077602FE4CABD224
8C5CF72BFC266395746894AF2DA83EAD3239B20114A5AEEDC690DB077C7B6E5F
2478F97600ACB5D57EC3C9F1DAC884AE22A2A6F526685D98ABC0466F8151BFB2
82927E225D8FDDF9BD9F80780A8B1306671DCF80B627E6699FE61F8F937F044A
8F508D04F0C7F049A68BCE7CC3F785BEF436C7B0C5711385232E7AEDA766BB99
BF8EA3FA067F43F0E301BC0546393509D9B19392CC5C7F2EC283F550F4EAD031
16064442141A44C6ED328C4E3C3D4EC7C9F31867780FCEA31201ACF498BE936D
83135A1D40F55792F4C6C49533F0B87BD96FD007773CA357328B3549352820F2
16911212C745D0218C278A8DE53E7DE24825EAFEB94F7AFFADBF41EAE8E185F6
05CBF2016245672B8988D6452F9316E8EE28A480584B053166B5BBD874DD442A
D4722786E6B82FDF42DF85834F0763D98800C17BC7F3F3684FFCA8718C0BE0FD
C1E75833D768CA112505D18841DA122921AE6F355B850E6C0E31F21576EC8AC7
4A0EA558F818BBD6FF9B6CF6EB1314015DA1F5FBB4EE31A0A2DCE69CB1316997
685670CE20783F3FD5747B244413596EE3FF3CD7F97FB7C17429E4F900598B8A
33CBB27CE8673540B28BB0403C78458B698B789C0F309713CBE6D62F237653BA
AB21021FED154483BDAA55B13C3E14B01EE157D3E44BF06EFDEBD4821F4BBE0E
5C454C6A1134BAC9E15759E1B630268DF607EE7C4C9FEE9AA2BA8D7CF02A561D
2F19ADC22DC160CC0B8F83731AA440A81739B13615C375F33524084C2BFAFEAE
723BDC8DF1CB1B0AE307B390A5BD11A16A2B7D2A5888BD8C0062BB6B86BBAAAA
B401DBDEBB51E926A576F206EBC7959450D41BEBFD060E1E240C3B3631E8C3E6
6ADF0B96ABA38340D4BB8B1AA2C7F29D56B5DE4FF9952C3C96F15AB6AC4D93AD
928D541C84F1AF390CAC209FBD0BF55DD1B68D738408021EBD637EEDB19D252F
32C06D17DBCF0E2568BA45DABB553418E20EE24BF63051972868A7942756B0DB
AFACCCFEC195273CB43B57891FB8DA241A2C8B9CEA7F36FAB66BA5E443082528
1DE1D7F4D555468B23399A9277009BFE21A5D1DBF5F054E74D98BD9C17F099FD
511F9F495D2F84FC8E74704683B9AEC5BF27BAA185E13893A88C5F5258BB4914
01ADB3788C1EC4AD9F70ECBFBE69516C14084D6CE69FFA3BE5139733B14ABBE0
67359FBA41235861DAD0E55044059370AB14DD16123BA54F7CDDADDEA2BA65DA
14EC8DEDE26A9B8719DAD45FFD5E66A1774C5A888EB3992F27A1341964A5057B
DBF984C82C35BB1D29243430C23F7843310A75D22E8C83A3CF6FD7045BB7DEBF
65F4ACD3DDA23786C8E4A3193E6B4314E3F981C9FB683A261144AD2F4861A36D
F6D7667945D29A041B09D3E8E6F5FC248654D75BAC0456D7980E3B296DBB7A14
A3B40E7D07CED24EF88BB64B0581F4743E86A7EA16C377369CC57BC2235E6F2F
715E3602CECE47097B95E24833436D29F8B1C7D414CF687F1412A4B4924C3829
A4AB61C3B04FB4CF4C12044A084D11A86A6442C78EC6CE5E897B77415C61488E
46EA462D4CCBC1F8C5F4247E6A71327FC3FC1F13AD93793FA021492CD85F651B
175432639098F6DEDD6BE233C45E1216284913AA98470885E54A767905B2F463
BF33E7CD43E84E86F6CD8DFA8BB2E597C67258025745F4626D42D8F355C31A54
B3762D4C406FA410B9966ABD2260EBC593361F512B95CDBDFED7A0747AD1877F
A74E098A93C710140233A541634B9BEBBA7470BBD082148A6726393E38EFEB35
994A1D42056633BE9279297266382E1ECFAEFE48421485E275040AD4266D9945
EF8AC00046D5C2147AC71CDB946D4C3B6F1C3F75F3471D2F851BF8F416208A03
1244BCBFBC6D351018FE91AF0BEF1BD987A6F580B7CBEDB53379AD12AB5B389A
15A4727EAEB41392A5EB5E4D3F8497C2B08735F5261DDB3EFB3DB4165619AC24
BE4DE92260146D6C2F7817F2C1666F608D532A3FBD1C632DCA45A9BE084EC2D9
7C0A04473A9D240845B78478D5A8B09B55015427F06FB0541F3939730472C172
0371FF75A6243F1D8DE7864519D1832058A3FC36B8A14A6F3E2AD52927572F60
77245ED9DF5EC92186C8E9F07F6FD9D0696208EE33840F68EC10758F155C976D
C69E4188082E34B0CE4B23D0980851811AF1B39CEB1938A78DF6148496783AAC
08345386F69739742E48FE72D82BF226CCDA01817C3BC0A14B71A08C0F5C9490
774EA98D8052323381BB98F5F28CA3E1BCF27B5973E3D69A7A253E2D1D4B4E0E
A1A3531250B52A127C2C3661FB1744DD1F801B473C1D73017D61349C137BA94D
AB9BD746B7DE8B32CFC5E5020660727B74A2568C094681EFBB59C4C410F0A44B
32F48495B6A81DE70B0865B827897D12D5EA64F65D9DA2F5914AAD4099A8F11E
709906BD59E2A8AA2BA4A292ECEB00F9D801A2BA02F96DA1FF16DE9F8F2B0DCE
A7B11241A16C6534857610D34D61C298C425005A6E825912D255FDBFB266C334
50B6695179AD52713919794C47B4FD6702A422771323D6143EE9A56B52D7F1F5
24A0653098E3AF603344FCC4A76F2B7E5E4494B7A0F6E202AB6B1E2EE9B4D2C6
868D6550B31E1490A216DDA09FB4DAA02BFA61D7484E5F8707AE1574F09E24F7
8F25B95BDF61308582EB3127C11D910FCF2DAD5FD093C5E229A06B6A877E59D5
8A691703E00D973333395B4F04A0659549875ECF98C33DB84E6A514423E2A5A9
A1799DA775A971F509FF9658BCBF8D68FF4980FD3FEDE081B7D917588CB578CB
50380D93642AC2E939A10737D1CD83C740FF4D001673738A7A7BE21A6B8D81F3
634DA92562D45DCE67574109AF7B65CB7A64F8A64840A29D5E4C1B2314151EFE
B5FF7000DA27CF1B89D94C6EE2E515CEA818DB62788EBF6F658C52DEBF2CA828
C3EA4F83F8E70993EC39260307B8F7EA9B3A1026753FFF628BAF773873CE315D
5FFEEBC7C5F77DC474FE4935C5A5D8B2B5C440E75E471955C36FDA9CA36B7FEA
A88831974651E9F97C0BF308678DA2B08FA67EDB687DACB2B4588F7BB19087AA
76FFF8C5E3C269157F61CBBAD81CC8F301BAA28C1A19B9D2003A3D68B918FE54
B700B8D235185943B0C4651041A57496E505FB80F00F1925BDBA615C9DCC5422
448BC215E3D5484AC314D31BDEDDA8F5F88CADF5F1B7C2A0F73FF08BC49589B1
42DE780A02F6BAF6AC32C2094DAB7A454478FE728ACC48F0A4058CA3ADF15572
AD33CE3E85B1B023DC613F6105213799F45DD8B46EE73E6BC65E9E5B7A0FA07F
CA8071F350A91A32235A090930C9F26AEF9761C33FBD4ACDD31B3D88D22CCC2C
DF8EF3FC0A2E64C61931EF3CFBC92CE6D2B5F25A563DCA1AFB83F2C4F687A6BB
2EF5C3E67C2AFBAD1BC00619A6213ADF8C11E472F5461CFCC0B10B440C07FB54
E708AAA63C9FAD23329D636E27CDDA1B6F72018173E04E325605BA6E56D0B379
4C8F50E3236D0E151249E99E65C75EDBACE4CFA71FAA2F7C348D4C76839EB392
728666EDF41443BAC8AEF6F853467798B9D92341B2C8A233B138480BE561B04F
F953DE4379F48C86747C392B59F5029EB1CB7D0B5D062915E7C0889D4750717C
657CD36391C7FC01C85AC1D8B0DA79691519D1EC05DD1FDBBBEF3CB0AA2CF5BC
EFE3887089C27EC20F11851C56FF3125006CA7641E83DC60DE44750A1957A84F
8E7123D63BA5B32271AD930696EF2947FA337455C410EEEDB88732C28CA81F9C
2129111B8A4E3B6C6229E2EB88F6DB608BBFF67816D1CBDA5BFFEB5FE9A04EF8
5DA53E9B835D61F20CF65354A3FE6C67D5ED4624A4AAED48ECCD60D5AEE1A1CF
81BBAF319AB5C1E7A3369C6458ACEA7D081ED259394D1B92458DF583498D3423
31D8E3522C39FBF7553CA980113EA1D6487BB4C7421A3A30530AAC1408BE0051
C48FF9C71079996F728D1C051AABAE522EF7C516108FF72884ADD73BD0E5C896
725DBD7BA0B1EDC97545CF7E3E52A1DE3CEBAFEC86D76AB1B38651B8C8BF3FF7
F00AE1FA3E7D1612977C6A900B0CE6C822887147685AD5CCA1BD84377929FD0B
AF1DC7B2A2D7239710D39A40A62DA446A238128D93C0D2D92D463C70CA635154
2A80FC60259CC20403FFFFBC170CDC87AD5AD5C665184D2BB95EEEA47D2353B3
F0A4BB2F7D751713E15020164EFC60CB93914B3ED879094961AA5504EFC33851
A2F07063A1D1D8BC7BC7FE1C4E6A71A9603EBDBD75312CD9A68FF2F68A96B41A
84E16F2C7790642BFB9ED58093FEEE6652D674218418976DF13532F0DE84FE26
B0C1538D9D94DC1DE394F0711A9536D37565B0E2F273E7A3E70AD01123E240D7
AB65900977F0E34A24450F01B952CBAC89AF7266830778B1F1F52F1169F204C2
605BC0CF728493D058B29E96B2B0F6BFF4F348A6661B951C89416CF654CB305B
11B6847FECA0E4E5537322C286079DAE76A0779FD88049992F024830DBD5ED05
60F5A592042FF2296D1E6114FEF0DCE57F537B703E73175284CC6F94FFC4B33E
00D4D76E457244DE4CA6665DFDA8BFF966CA1CB7E689D85AD61343889DFADF01
257652B4ADFAF0C5529285BCFC4D7C4428F8369E0743440F39B1CD3F80A37C34
0BF46DB0BE49F4D4D69EFA0DB9B720F59F94208E48DE4D62C72476665D0223BD
6EDCB3F1A7DDABFBF54F6553F1063EAD9312C3EF5F4CD90CB656F1CDE09F2F0A
5612624414EB269E06111DA5902B6E48A2C31B87FD4D7D1A7EC8354710BCBEFF
6A1621B973679A081BD4CD58DB7AC58D17892F6F5C8780F2D27AF14D4F0F471B
45DF832BA2207AA122694A10AE6D21D752BEAE6D37C37FE516A90A9373697CAE
2E1033CB573E62AFB86B75BF284ED0B3B923747AB9B1E086FBF05C6BFE65E28E
FA728E6019A9199E899041B34EA5F644EEAD4EB572FE691C22F8EC86FAA0AA18
75D0387D99D6801B3736287C07A2D9B662DB4DFAB5DAE70369AB6CCAEAB3BE04
EBAE4E500C2ABA0CBC18C8FEF22DD181E66A97F225B1487DE4AFCDF105D8033F
48C13046B090AC212574D20EA18B1F27B12801F8FC32C50F69794B9C34D07380
695157AA0D3E70131EE6FD1F4E792F8F24BB7EB225F6998010F30AD5370DFF46
86384E16507D702946798B832A7C72E0CB0B14D757D239D02F387C24E682DA25
3D9757587C84D6F2E7B3A20552011513B2360CAB0D31BCF70021BAC5641694CE
24137C2C50E5C96E666D66C0BCE3E235C93E8DBB381B7CE0AC4169167129E625
7337A17E0547E24B266E3CCB4B8F6733E0F83D63349555FBD59FD8076B606B42
3F3A80C9D3D8B5C9E29BA73AADC046130E2AB1F668614D543223F85B3A80CD9E
315F5064D2D9127CCBAD4F7756CB5F98835190A7A5104E46EDCFED9C2440D433
7C9CC7EFBC1781884D7C6114A008C6028A1CC66044795E959FD4E1390381E797
E650B777F5FB1D5937BDB94806BB9EC25FF10810F6A693152427FAB5ED4FFDA1
6A79B25C18494CF2A379C05BCA56F91703A038E1151D1C5AB5370569DF0BCEBF
204F482AB4F89D94206F1612754B372A99B4333338D9F8B54670AF60D5E32AFA
50DB2539D812B9919BFDA3D68D342768B440BE79DE16B7494E7374B33C39C8D5
86C8459A26206C41B01CAA32969945F1EEEDB12BA92CEC1DE9B22760DC896939
F31795BEBB15E3B68A1C6F0F434BC09641997E773970962664254E70D45E2730
96928177205722E632F4AE19CAA875A72391AC0936465AB76FCC435985855269
FA6EA9D03917A41CBBBF56CFEEFACF2546EC8488DD3FE18D5C80574FDDF783D7
E55C6EE3CCBB15F50CBCB04DA8734E38DC2BE39AEDBE2E1BBFD7EE152A0E04D9
D1AFF6FF308114D77E82589A02C706347552CC38140B44DD390809503CAE00FB
EE7D6060E34A2E383C06E8D7E616C2429535017634AB95EE3E2120ABA02DD3D5
62688352F2C4966EBA0B4A02E19EDAF11F2A43A197D575E4A20FFF421E0DA966
26827B93290AE3955FCE017DCD2F21D8D3C1FAC09A188218A26377377C5E1185
9B8F5C183B0B287A1912BC46B46C01866FB0559EC63F2F7B05DE04F0582D0ADC
5F0994D59D505BE72810F17FC77325AF08E318531BA43914B3F5755E7ECFB94C
A691031E64768C4096DCA5B61A16142FE1771954282B39FFB52F40BEBAAEF97A
D17BDD2E2126668E82FA8F16C521B6B34E791C07A4CADF3438029077788DE860
88F3816BB9E59075DCC8C03F66272D4D38536CF4AF3C8E44CCE41AD8BC755CF6
A0E927F091595B1186743D779E5134995297676957364FC144D3B72DAFE734B2
1925DB9F35103B3422922284A441AEB4080116607FAC79A11C59649A4011478D
1B5837A74F3231A4B3CFDB95D464A07EE68ED81EC808048B4AC2C78C8D89946C
8DC1606EB8F9E00B4C32920B228A8BC3F710AE4CA82371E597DF463AC634C711
BE839B24E11878413E760D85CC4A1AFBC511ADD7B26FB00E7278CC108869AD06
8D59B064A18862DBAE2BD41C4DFC7355B9FB195290A7F4BB0FEEE552F329C771
9626FF54145FBD193BC2B7C6BF5A97243B0F1761E0E94EAABE5934C1ABA7FAD6
6DFD83ED8E5DE414A3EF17F6BBBE3C2472394CDC4F88FD91DDE747874E9DEB9C
3C255151777C934C754061FC2172B33BE4903BD9AAE5F9E3941A8B6528539207
E864B0A5D1DDB885280AAE4DC320B4DF2DD37AA3AACF5C0B54D31D2CB105D3C3
A53AE7165D93562B217C99D2BE9A313755A26E6C3E6E13C10CCD28A8075D18E5
5CD6770EB66D7A9B9178D99FD40AC36176549DAD12CAA77FCDA5D758F4C6B695
632EEBF1510C00C9D7101228939C741764D01C448743FD07C5952CAEF4494E1A
86A8AE1F247BA6DBA88CF5CA93816C89CB757F56688F669F8EE1A1662735BB3C
D2BBCC7BEB298EC0295E718F132B6F24407934F595EAA3828A1E22BA5BE1B509
DD9D3C0B39D11801EE9C3F285441410F6B70EB2117A9DFE2BF9EF88B21F01425
38F3D38578003255C6B731F389213035E87D648B5DFA600D90CEECB768D2CB3D
864BB4E6B9FE6870779E75C3F240081901E8DAC399DB508A9E60B3A7A9B91FBC
20E0C40B459F317A454E8BE6E681FAEE35E621B18E9031E88C95CE4DAF3560D9
E665E9A819B7896383F2DD90FE58D82DD01C4409DC4183894786BE039FA59BED
E3E488EB26D9837BF0797399E583D99F01F06AEF1F90AB886F86F02B9E65D9A4
4C9EF7BE736CB6BA132F605CDBEAAF1A9F40736851488467B7334FC2BA24229C
BFB7A5B9081A1BC92A81870F4FE9DD905D561B1C1AA1B6693B19A3561D4B9A8D
5B4DC768E4D04C5595932F093DA14AB91BE7ABBD598ECBA4C04B01B553834F81
B03BDD71F2E93E6296E45C7FE5A1EF06C114A1D373D5BCC9D37C774C8D80559E
6D4F2ECAA8C35A046C11556AEE2C0219F7ED6960F3B0F8FA30CDF67D8AA3B313
4CCF3DAD35D32601A7EB611865CDD84E4A84BA82AA9949CD5FE14BC426FDFF19
1EA9C480763B3D54FAAA452D896EC957AEEF1C6BF8C0D80283AE35823B74257D
36086DE84C68AD0B8815EB4B570F77C19FF13A5D8908B7EC61B295214EAC7AAB
886F1CD4D85D764BB92123E24B35B1BD764FBA1BC10FCC4FBBEA905529000CC4
E4FC6AD6E0C148310B0A4221956D9C431EFAAD12174C426BD36231AC58F876E4
83840B996657C1EDCC778D6ED735B034A787D0F8C25986E1A2D5A58EA3C79386
247233942FE566BDA5EF831213C5C5C219A51856742593500BCFC70D7AB500F2
46661DDE94AAA28A99FBD03436CE0DF81BF2E52F0BAD583E43FB693FD8E02791
7B55F5103D93EDE3F5F200535402D28F2FB630630EDA0CC40CB6BEEF35D647AA
A2B308C3370B6680C2AAE158DC850AABA5674CF617FB4005326003CD059D357A
DDECE300F9EF6C37B9226FE5BDE0DFC0560F471B6ABDA88454B69A0E43FC53C8
CC1F401CC6A6CD6A0B97FD5A528F7A2196FE985B3F7245F69A55BEF104524C5C
141C88BAEFBDCA541CB0DAAF3966FDCDE46025A8D3EE6F87BC83B559A3EC3F77
9507B321AA5CF2515FE0561EA00F9CA50C05E905423AFDF9159E42F3C3FCB9AF
AC188783879D04A96DDC95FA2A21D4A519A544E47F7E2CD0693B449F0D547022
9F4E1C889FAAD214960551113810BC81B4C967A23413C3F7972F80B71C6C441A
E7EC5833E9CDE01610E56C49E4A1E112FED2D79B0FD057B7098112F1D7EDB0D2
131AB1607C069A4A92E483E29631CDCF3952FB2ACE78DA2500F3B9E7869DC1DB
6CFF4A86942AE5E5E57CE25EAA8BB9919B441871AF60EE76945C7E31A8784803
9972B5B2DC056F5D662F28E861AF53BB7561EB8834F0F21A87940A3F44DB28BC
609B50D0DA2D653CAC97E6EBD127C66D7C164DF810E2488669899E955599F4B0
2CC7874E92BA81373E8FCE9B010A373620DA2611711EDA87B3C6D9A0B33991D5
1769A1594971B3678FA88C2E03CCE6DA2BC4498664DA5DC27D58A2963AF0B08C
61064274A51FD3257C8341D04D980B2737FD95A3CFF9299FD39DEF6258D0C454
9BF2828F465CC4937B0E05B6C8166151217ACA07E664E1AD5C5BC372FED872DE
7120BF9ACBBC4546BB98142725D412DA8FC05DCFB2A306A980231FAABD3E1E9A
BD5176F441436A7686782ECC58A56D8E37CDC06562845B514DBD6462593F17A5
C866F93E84F258F97BD2EF6212D635C99E496A43E6AC5252C6725F10A699211D
6FA18C5163544F5C3EDD8DFC3D8497BB82094D07A27FD41A2D63B456D9C16983
C25EE7F6D4D2AB04F8D1C5D86B80ED89817635A550C341F7B316C3465A98A70A
3674F0DB7B4EF2B665C10E906F6741CE13AC355A23AD276115EB0A4CA47697FE
07B55CF121742F554B22F11C40C425C17611FD3D50144D17D85367F224A03F3C
517E56AA1A82CACB49988EB742DE9C95770C3D190E886FC2A87D02A06F36052B
3D4C9F50928E3F3DB7013543685A4C23D42B2F70B31AAFB33161D173D6F6BD33
A2D6F68CA12311C6E38C69B36A89152B765247FFD44C0E9C089A19F2BA207366
B9695EF494BE2DA4F4827E47F7D61D0228F005534B08907D1B06F446F6AE6586
2AA9B27CCCBA4C0E71CFB018F308809914D03E245AE72D7C244C36D4754B5E2A
570994EB844F6949AA76DD1C3EB8E184B4CB91B910B624755CEA6564D3485740
43031E38E6CE5D4AF457456B30D72450C538ED8994F8CCE47D75FA18AD77306E
2A673968BCDFDC27B781E785680BBB33E805DB14989862FB80B164A7F36195D2
05DAFEA6F90A481295715DD32DDD107BF83A9822B811F5158F586C2D5BA93232
B922AC41D4E9E444C919DD675683ECAD09A95761CC7DC1AC1D0F15E5CCC8DB9A
9B4498CFEE528F493B227200F57062331B8C779805C5660FDA254318B1AE9D4C
A5F50B654A5E5B9CAE6B8C0DFC8D4C3DD83E79981350EA0AD9C3BC77D79D652B
A28007A0F6532C02327A4CDFB1B17AA237A58392AC5F27057143EDE56FF02307
A0CE28B7A5AB950F83CE587353F9125BA32E83B0865AD32653D3927EE84D385A
8B6C1DE9A2857F9B7DD92412314925A46FD556BADB5D16E80BD58AF3339A5FF5
4FC37A9E61AD8ADFACE46CC0992BCB1BE6B6B8FB61EC803FAC7DE04046CFF999
D855CE36EF146DADA6502567C5DCEFFA1381E242BBAF4F59655F44896DE84356
07DE492F6EF63DC67F6F875F228B8F5FA8E884C0A22A572FA0A7211E2534F020
F1ADCF10075F78520778F590F53CE4AF67B349F42D3EDEDD130708F27B5F899A
FE7F609111F88FCF18914F9EE65D9B4CE55FA40FD4415BE2C478DC9036A05051
253E5E8378AA72ECFC375368DBAFA0647457500972FEAA4A2D29754F41D5F7CF
E807A607D96FB3217708AC7333EEDE0D00D6DBF5C6984BD05C9E80F1645AB0CE
EF35F0BE3A5F486405FBC465B5B040C38625CBB2FD827C61F89C2F2E6844F3BD
6612928FD7C6C910757B0B72226BFE04E36132CBE4B2E1F195F659F956F73FDE
E9ABDCE65D3FAB952B889F8B1973AF12FF68697A17B568212EBE021E815A56E9
D423EAE1EA143BB48CAB9C9C28A4A4E755F882A56870018D3BF95244891CE376
9F68FB270CA8FFFF0258338A002E3EAEE9734F8876D563EF2E2730A7446389AF
881956E8205A53355CEFE1BAC32628218DEE1880C37708B455E02AC741F73E45
C0764E95B8076701BB28CCF31FCA27C0C673DCA8A5759E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFIT1000
%!FontType1-1.0: SFIT1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecit1000, tcit1000, lait1000, lbit1000, lcit1000, rxit1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter Italic) def
/FamilyName (Computer Modern) def
/ItalicAngle -14.04 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFIT1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-70 -360 1392 838}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1EC5CA76F3FA433922B4C840F1C54D4B410FA
232DA4932F27F16BF8CDB753CD6792A9900A99C9E3BD6F918ACE957247053A6D
CDE451BCC8152EC7EDF3B9CE759577DD04909FD40AB24CC6AA440A56F2CB9532
A73D218580C6DCD7E84886ADCE804D9F56F691CA8CF6E04FCDECDC50E89D7302
BB4D479AA36196E44A9D011AD1C00057557163AA01AA4B4C20C209D06ABB835D
1F5282F47D7332C6619F4935B9829E8079E6C4C87C5A575D0C55C7DCF7AFD6BC
F67CF36212DA945EDC9224B1ECE9EB6152E6B57F3BF4792E91CDADD900B003C9
38CB162E3C1D4A8A925425634B2B530A17B104E9A21ECC2F6A30B3231C7C27BA
3EAB9BF231CED0440B8597B3A35E21A3E66C525B80AB147ECFE4E152371A4334
7DBF05A7A1276CB46FB64FE8C2484AFADBBD17B2F94A506A34A9BA0352A91B3D
EFCBC9CA192F4D8DE86416ADB1869D73AD1A69D249329EDA2D1D461E41213E6B
67BC4EDEDB56018F4037D72E6541578BFDD16144EC5F060B95A21772C4119DE4
65FFB95D789B8CB67F10DE655754C0E291F5D1FB382E99E176828D613909BD2E
070F7DEF8E24A4F500B585D8B6CDC52556327CE9C1CC1340A4FE7C15A9E0DE60
0581DE277AD86FA6713EBFE15B8999EDD0406BBB0F061882534458E05F47E30F
9EDC56CB842043ACD4E4BA5C7E082994AACCCC572024A2FBC82DEFB47B9A7ED5
DAC997F0C96EBD73A06BD8216A3C4550E6174C2367BF8124D0B1DA92E27362B2
B9578F0F8E2742E4AC3390ACDFBBFA745CAF433C115BC700B365EDA52C52D99B
BF3C16AB5A6F265D4BAE09F326C7A3B460F007C1D9B1D0194F440939AB3BF029
4AB1351CB1E25DCCBA43A4382D16305812330D6A31662F4BD9F84AE3E98E99E8
106180D90810BC0412FF1AEFEE1F9903195EA4611A73F944A3E679CFF3002874
5114557DB3DA9711ACB1F3706630395894CDB836379761BD8EA30C1C1C415423
24E1CE6AFAFC38312DEC7C244F76C01585066C436A844B59AF0F0EDC11C6CEAA
D03A72326003802893F44209BCB6C2DF9F878F61D2DC3E24F275916DA849100D
47654DB837BF357514B42B6EE6BE16833773201AC75EF70DCC9FD9B1F3E105BB
E24E95B456F08060647C503886435AD51AB0BE4EE3AAD564336517B2A4366A5E
B757D41D6180AF94C6F9A6360E09596225C394A24089B4F6F95DD7C5940AC43A
A688B2989FBFA8758E494BB5B7F436B456D12C0A93BED4A6078F5C6661604092
F96B2C5B1453D337EC660906AF548EAF415153E5EE3BE7FDC61D4336EEAB8E04
F3263A89C956B0295E2F828217AC85B4AFF284A2980013D8FC4D17166AE6DAD6
5FAF63832C060D9D54F36B93E173D032F661BBFDF5E95DB261C8D808BF166659
83F4CB8CE47391412FB6F320C1459E37813E695C86791260E7506A57B72A77E3
3DE45A9FFE7EE7B8FE92CF64E7E6A79BD952BF078B41C936C3532CCCB5DE4956
F62712B23A1B8A7CBD7381DD71F0378DCE56EC24E395AE64902D9ED6E24ADD3F
8E45EB67CBBC53C00FC07240CE0811225BD86E71DC698A264E12933D2FD3C696
6F8AD28CE0790AA49CD2816D43E6148CD42CD0CCC2A45822B752AFFC111C4881
8FF0FB888DE57A91560AB51E8A856D787A3A4D11A74E052C760E40F9C11AB86F
C2E80D918A323808838C8ADC2FF687757D9A88A785B15D0E3F46B0BB09A3BF5B
2FC4959CC2EC7E9A2B6F693442B3E3F615E9B31A46EADAA4827160B800375848
797C0C32FBE96169D38F2640A68E4799E25033136AB9611838F29421E75DADFF
F96469B843B4909554F893C96A6B7DB7CD82091FA7201555A7E38AEA50796A9E
C01820469BEA6168445964C7A4EE7A3FD71D14F328E7823E72EC6C08CE6305E0
BD7B4884E36A477334067545B6EFE8BA2B9B908EAC353D6DF09977B2F9A3E312
6923877ABDD9EFC3CFFCFC13A1628B63E60AFC61724687EED3173E67B2924E29
3A156EAF88C4646B4B412AE6C02DD94BF37C84590C2A96513DEEA1B492D1CA53
7E21EC7BF11D727F55C22C4F7653175F8C4C62D3882B3BE0334D596E167FB5AF
52DBA1845E4BEA607B52C7980791CF2426AD70CC7288E1032DF92C9DDE43B62C
0193AEA64A29297E55C3179C3C6D2A7479B9E8388DBD8AF04BCA05EB10367212
1E7AFCCABF4EFD2A8EBE557A32CE4179F56C0DF96D92D8BFBB2426C8A6526EA1
477090DDF5573EF76D0F789274C1929A4F4D2D0BC7E27378E9094675061A2EA6
358D94E426B23B8103DAD5CAE80C6547EF68D97D4AC69D2B3AE1A276ED5AA7BA
EF2BFE426A768678819B070C50CAB47B1BF3887E795766249EA1ECCDC25C60E8
A5BB1561E71C9D086CE3A51D07185666E2AE347A4B784CEC1F93AF696D3E2E00
1F8DBC39ED24F507838D6E8930A8484AD769B6C360FEE676E9585380AB3606D0
287AB9D8AF36891AED0EBE5AC28831C65643F7B40AA57199681B46868F496710
988C4D69DEFC8B85A53FB7AAD44192B4730EAF03B42134373CF8A40C3D75B079
C00FB3DF74ADA30C2FA98F494A4E80FF1F8661035EA2AD57459F07BCF51132F3
82F27CA40241530D7E74D177F0F3AA9025EEBD19E2854EE88EC57710491A203C
94C05A54ADEDC383DC37312CD63449794905FFA25533CBA45BDEB49D8141816C
3FBA911002DCDDA2A93D4A868A69A3A55AEF801F200C82C2930188C769172BA9
9DAEA1A303A9B5A994D6A39199BD841DE6084B9F14026458D2A13CE875FFB37B
CEC5E4D650CD4C9685E975670347909A8EAA2D1A72A61D56B4B5722E12E00A90
0AA27783C45CED390EBAD6D89EFF4A20C67DEF29CF614B517C05D314056E57D2
C7755E0DA11799662C61BF17C93FCB493BD913CCAE0AE61005416A027BA6A267
F1A364F834DB674F3452249DAEDAB770B4451FFC18EE0AA452F417D27E5B06F5
C3C8F0BF8CED425FC3BCE52C1C253FA10C46EA1D3E609F0D09EFB60C15B5E2F6
E508F5C093509400EDC6B898021516764464A7041799BDB336AC4F5BA8A56FCF
C8540C069DE7B87BB1DDF4FC0C5F9767A5DDE1E2D6592BC3C82DFBAFB1E18A1A
029F2A7994FECA926E124E9FB1DCAC3D1E80C49622A96811015AB71EC4B75707
46102382135F7D094BA387A9C21A9F5D5DF5693B49530F81871BDBE2AB0CC375
A64D20D4C921EC68DE41BF99512921346A87A21939A8156BE4C2E1A8EFD9A5DD
CB6281B4914BED1DA34830286BDBF03E444C6F0F4DAA4034A1261082816909D1
1BA07A7067502C24E86A4B31DB3B445277E8A76F9D5C43167D4CE53C4BB7DC83
0AC710E57006D9060272CA1C1A83BB6AE25523048B4D30DECADB6DD1E5EE2FF3
9FC53A2E53B10E2384825C592B14293F12C99646DB524CE83A0DD719B28E88DE
0B5E89DC62CB398B021CFF5794CC217019D8E0996FE7EB5BB51CCB12AA5EA703
FCC083F534750BBF132DE70D992D36A2E1472DBC574B3A772CBEE2D1C6AD444B
FA2332DEDB4C0C42336A3ECC10486C74A2C2EA3B24F9B76270CD87F10AE3299C
87A640C635EBBD0411E336869B65C965D6911B6007677C92FC9CBBBAF3A1B132
A68C61AA3C902CB31693B3E6F480459AEA993B1A8BE52AB765851D873107A1BC
D4AA98F4A3F9F6754227DA8754203EF2E531389878410DD16AE9F78860F1F9DE
AD4C81F8D2385EA874AC88DA4FC0DDF2D98221C7B96CDEF6EB1D5642477DC54F
BE1C3CEED5B30A8AD85CED469CA12B203CF3A06153C1683D296A90D301038479
B4F183AC7BB3AF5C0BEEA7BA65D0DAD9A06569FD4EEE40C516ACD809E5856D28
9B85D93DC67A5DF950A1F61EDF7592FCBDFAEE44DCB3A666C49BE08571244D1F
864EF7A23A338B6FF13A9CC1883221A49CF394B11C9F8EAAEB1C01FA9C2B9E0A
69D27E8D7BED583B1F8FC12C4F3B4CB98AB327FF3CE62E38E0F209E58D71248D
2CF5C85E4372B13AA894419ED36676220272D54B7FE651489DD1A72C95AB97BB
407E0ACC51FB53BB48F273EBDBF0D261A347C0CBC91DA245C8C42A3C2B60BDBA
BBC4BE4D042DBDD0DD39D917D5C10B78C4A3466D34DF751FDC9EAF6FD39814B6
4AD84C537B2F7A94AC3B14A0643A09FE99F66586474FCF20136A7751E70D2298
B81516B213C039FEB875D84786CFF1473939C558CA60998B467A6F5313181034
304D80395DC9822998C2FD754882F5965469CF60C5FBAE2E0EE2840E81E9A933
FEF467E3CF54A375F2A969386F22CC09E6573C82584E260A752C0407B5F2CAE7
4B26112900203797B1BB9DFCB57C5F9919FDE5E789F6AA7F38C2D1D4FD4A5755
32AB48912CB2838ECB4BC88A2EC615B31D33B4157744AF46BAB32FE36922C96A
D6DAB07D991EB13DABE3D01D84FFEEC5616FFEDD8082A09B6D8C4C0FE130D852
D784CD11AD90736ADAF8491E3A8D9FD328ACF37246E554C2DAEE7A9E4E837A96
E75454B2E71D1E8E383D769B29714CB4BD428EAF47BA944517592BE1E2AC46CC
A3FD911D0CCECB52AA3F49DCC4561A17075F85976F9C24B23B7CBEEC99D11D36
DCC723D2F44766A21A3389CE7E8A42E6842DF9D4D8E41702662E694B316E7527
D161F717842C95BA04C0D9A3D926D5D0CEBC729DD7C64DC5ED72EEB29EF76A0D
E416DC6B475A7AE4F0748205D700CC7777CBBCDE4636F01EFCB9B5BEEE382CDB
57DE31C23067E7E16CEA45C18A3F29F3A4B1170EDA7B5A983AD99422A5A7DC1A
8F4A360254B72AC91B930B79BA62CA5AF862902E8283EA4BACEEF51633B9E1E5
A858242AC7138493DB18023D69A59A555BD25A9393304B414DF1A49EE81713D8
4F980FE0109EC357546996C65203B97C35C04263A1C53EEA1383685FEA73AE13
58172EAEEDC2A846BBB6A77D2794F0C4365CAC63E22669025DB695DD6E94F1A5
7F125F8B1A4F775297EA3C46DFB046742F744B9DAD170F112592672FC25A92A2
A4A5251D2446F033B8553008DFADFFF08BD037AD5313B374BF513AF1280237CB
E074D111AC0F8C87BEE47DA1C3069453F3333A761A8959CAD13A90441BBF3349
8EF2379C226744E49DAB21F02BF532833D83FCB4ED80CD06D21B381162DAB730
340EAD853589C5C034DB46F9208CD0A8CDA735B70151E52394A9A7F1A496099F
1F58E44F4754A19B21050692EAC13AEF0DDB06BFB7420356761EA45F49A8CDF6
C2A56D09A1B5D369611815E654844276A41DB65385C21F7040142FCB4042029A
830E74C19601957FEE7973E642EB6056314E6503A77F6FBC914A6FF0316C1056
8B505F8FD5A8C4F6D0D7FA8A2436C03E5CB15BEC3C0304B512A0DA55686A76B9
0B97CC5903149247297578194EC0417D1434B17FE63C3AD72C9900BC04C5AC88
DDFCF371A4EA21A0D88833D5099C6A2A465EB745E3CD1359255704F640E27990
D9B19C2F6160D1F96A5D768CE8784507F7DA1645135FAF99D9315278DFE48AA6
7CA359A29AC629C990F8555DDDC72F9E3653A4BBC795691A2531095E3ED4F25E
002316940BF976AD03B556063CABCEC6EF30F5492511B761A41D45531DE1D5BC
2030087D62B042DE29884A68EC455EA8D0B88AC129EEFFA62249F1641D299B57
DDB9533E239DF389F76E6789D23CEBAF3EA5FACA8687295B3F424007A6D4BEFF
9A3B8AB09D71704FB871BC40C4714E79FCD1EE08B5020837031D7FC78895059D
A361E1FC9E08180AC11099E2000504BCD8C1FE9325ABC656E39F53E122259F26
C3CA3508060BA9B027248367C85F813D5D32B4C82103F3792FBB1BECDCB23458
C4BC3BB13649996AE73E33CAB7CB286C9DB9782BD7686F5595F35E6E7FAD20D7
CFB9559CF59C973FEF0B4CC9D2B4E609E6BDF94D8020210924A7EE8CE1A0DE2B
EF34F7BB1EABB44E82CD17A1AC060A17B849EB24169987AB5072536C187CDFE1
B2D83574EFE95CA8031A64EF184B270FF8A490CE84D4EA02E7AC0CFFF6DD7B57
80B54EBAE4893DBA33E2D2396B25F47BF25B6428940FB6C19ACAD88307A98064
5FBD42F195F7585213259CF3AF9B7CF71111117BBF9757FD500ED23098BBB94D
811640B3A83A36DBB872A4249A06109FE8002E8949FF0CFACD9BD056D8E8B167
48ACD968871088C9691697822DDABC58907EF4045DB5FCF569CA2F96D570988B
D94A35F727BA81F787A97F47425B99F78347EAC4FC575291C455C8EC0A4F115F
9FC64C86820B4084836D028B149A4C7C807935AE49BB242B553D6971972FD93D
BB5FFED7C08B2F81E288E56A2B6341D637AA45F82128ADD8CB00F1FA2F3D0836
25FFCBB618821A55634B99CD57715540308E63E3D93CECC1E9694F31C0AE293B
0068BC64EE30E2BC3C27E50668C91E8175C35E37CC63AB33580D1A3C1505B7F9
B611B86171989E0383933C315BCBD971C5D5627A380A78F31255A1BA87591F19
BC4AD06151D81BE221223E00507DBD5258848CD96B9C5CA6F07EBB0700F6CB23
3E29161110020767B5AABD72B68F0E8FF856B92D73037407F9CCCF2C0F54CAE2
627E75424C83D66C2124FD165B7AA20C2A073491D7EF589C7E93D34E70BF0A9C
4846ABCFFB904C99F034FB96990972241E8841A6700659043B0378739F2B7CF7
EE70434E73B4EDCC729CFAE9ABCDD6CECAF1A78BBE5823BAC267013581C12718
DCC7B51D8DC46EC3D9ED8095460E19F9B46BB9FF4E1C334A0D321CF43B5CE79B
3C0A8804AB35FA9BB22DC1F9CC8C18ABCA492B04D4C7E91247DFDFD88EC382C8
B196DE9E61C31BEDAE92A24EB5F35AB3303E3312F849BE113BE05B49F9F3C45B
01F056552345D697A4277E7177B73BD258B5FE3C067C14FA4CA155EB94E2FDC0
7E0435438122A624D8D3C166EDE32B55B02AB53D4497937C9212175ABBEECC0D
780948031C9EE5EA7AE1997B194D5882B92407F0C2F7247DEDF5DE863F2AC10A
677CE4C139C3529B6A2C1D28C57D7380195F70C6A55B61B293AD5DEDF0222D84
1208D13CF2710FFC0D365BF2DC34E177284FBCDA31ED9FC051DFECE5A3997AC7
8F4ABAB0F2DAC9B6E740B77393BCD34AB435ADEC06A4359464A7182A1222965E
2FA5AB989B5B8B634A2B233EA2F55881B9BC5D665A5871696551AEA781ED41E6
FF549C179AAA4BAA49D99D2C146C0130B2D8C5A51C456AC98B9F1C3F5C60FD29
30A58B99CBD648D6D933C8FB3575862F939942981F079D79102BE80A68492C4A
F254BA0B055900D3228D99F94DEAC84BC94E5AFBEAD09C442C316064F0440416
6720D36894AC46E901FA1A7A2625C2AC0A7EFA47C3B49BBB946F142ADB9C709D
640B155D287D01AC3031E1E7AE5CBD721D931A2AA9EDD644E1F3D065E8BD98EE
4BB6C1DF9165E00D29054A5911CEBD5501DC07EF8C00D4CD148236B55033A117
001BFA3F5BA5A8D69914FA5651EAF0DE065135CCD4B934153F48E91AD71DE484
7E19BEB6E94946BCDBFFDB22F05212801CD805E718F3525DA9F7A7645736609C
FC01A10A9BA9B108257AEAC4F506E0274D0AB16E1FA8DFC37D3336B0B8ED72D6
5B625F9BE81E99061CA580EBE454E4DBC0CA81ED1DCF6404C8FB2CB6ABB6752D
C92ACAA2CB08BE16EC9B101F15F0EC1ACE3FA8D3EDD40001AC1235B524239470
41F7240D52145DF46034807DC5DEC79B0A861A31B74E4483DD252D97A2E9E2F9
03A10FCE532EF79AFDD12546BBF380E48EB1B2D5A30D974A7E9B24DE139C5581
116873B9AE578A26918A0DC8FB6CA71C338259F0860FC065DD42F6C1CBCA7AEC
26F9ADD6EEA3B6D1E3E354ED5E3235C121062C532AF2193978AA120B88151D10
417AB2591D38117F6D671D61C836F31EDEE97D51B2D68A170EA2494C6306635F
9B5BE6733DE2DE12E25445B5B0BA0C2848C9192C6F17F664FEF3F95C06EF3742
7FC2343D5B78C7BD00CA3DA85D543970D8FEC4EF92A576BEA3F528516BF6E3C4
6C01329CB3826EAF7B6608CCD92057F8ABCC63832CE329E6F4A96631FFAFE78A
6B352FFE3558E431CF68CDCC08586790CDE3CEC3BCCA32CB4A8513E29341C575
58D168677496191BE975E572B150AA012D8F4F80B0119E68FD8E40474735D905
BA665CDE09062DC1A5CC0B61F07787E5FA1236ACC0EB2019C5B1D5CCDA0504BB
57C7665B046A438552C571ADC7C2136139BD0AC7E3ECFE81B012BA84AC04C922
9AB06397D4C61B8E06FF466CA310BEC377B5F3714DD62049358D5B204656BC17
2C206C410564874A04813215520E44FCA5F79BCAC166F2C14CCAA6636027ED12
5C8F78A48F6A562A1FADFBAFE2DB713F617DB098BEB80AAB4857B6B5B2AC21BF
5252C84E876ED119E74E063392304D7E7C682A921BA05E61B77CEB986AA1C9FA
2BA8C45C94919230F781C137205DEC4DEE9F20BDCCB31A8E28509E2766069705
A255B6EA942E2E9BF904CC7F492FF2C6CDD5A9C73B029888C8905B17FF309309
08D61E8215D0576024A490123CE8267DE71E19FF4F6F07333E5E409CFB2EF56D
218E8B69212E850699052A4D3A2801ACC7A13F953AAE3FF6294185A035D11AC1
05D1FBE7765EFED5B96CF92019D3A4D48200D72302B8F94264318FC0572F13A5
A4125BAD8D01980777BF866F3442616A4C5377C981CEBED5F2103319968B9698
9AD186D414A6729D11F396E3C10C829462604E0B5CD24FC0F6BE278D4D1CE159
3D63DEF770D5265FC54F60B3688DABE52AA7C03A7F8D6E79A696B0E62D77EE48
8D0330C6CA3C49267BF4B309429CE77E14FDF25C31FB75486322397A3BBEBA97
3B5D65EDD95E20DF0C152E0FA2ABB6A93EA230341F8034395A19C6239D1A5BA3
28E8E655469D060D4353F7790B82E745B444E6A4737962274AE08FA80DBA27C0
2675A644607478F4AD4A1522551C1683AB91E1376AEC28F7A626F8A2147DF112
C9CADD6ECC6FF588CD80C2CE885D86591461308F3408B0A7E94ACC731777E1E4
CEF2349EAB8C1CDAD8F20BCDFAEFA66D2F01197EADEC32844428757A3E5FD42A
FA2C4DF6E5E5B4CA87D74BBC471DB6AE3FBB5E65134B91389A2FA3AC852DF8F0
748C75CAD725BB529E23539BB6A82CDA6224A2584BBD4CA1D334992E49D7016C
C28AACA1C46C7962BFEACE2BD3CB1EC9398900960AA873626D6B5D06E8C9AB4B
EE437A3BEE9885517A824B12AB3074A7418C47789ECECE1881F06A66A2B403BE
7078B7C1B18967E8E6D1A0157957AF6E4DADE5A4270E576D84C6AB0047C1D8D6
F7EEE02434A5D59664FF216C6622EBEE9E1A7D39595A0790ECBE12C6574CC65A
20618B34653A5FE1B7C3931096D5C1630DFA7106A73FCBFD977DD83111643D9B
1541C416178B564172B69E1AAEA8D0BE7292A01FDD7EE3C0C4181BCCBEFE80D4
37448271151CA09DBA9E9108B526ECDC0ADE5CCA2BEBD1777A11A604291E17DE
65574833925DDF6AFC7329E60FF71BF765EF0307AF5AF04D3D05B4DAFBC64257
53A079544EF3938AFE15463FB71C01B2C65AC5DDBDFB8093260D9D6CC3E92854
A3C48745D92846B4BE7E6FB5A426C5554B7A86B8E4654F629656FBD4AB838D51
CF32AFDE2858E791FD4C59EABD590642E6A0B74EB6143DB7A1C8B9B70E75216A
D5F879BF4942757D6D41759D795F31BDF19D90657C51475FDCA1F2E0DCE7B7B9
8D9A4A9A2438E956F584599D06CC2D6DB9B5C63F50644ECB46C1915B6A722CB7
5FF1BC2B9576132EA53A7AAE173951FC564F2AB19D4E567E4DE8BDD0F3E0EAC3
5EC7CE5CA0331F5632F4B2BE684B749A1CAA76A7F3EE96FEBB2B6B2504749798
2E11CA933C40A115F6828631D639413858E8A8711FACD5D76BB724A765E10A86
50EDD6F0182259328544F645D4CD3CC5468AD2BBD5D977C33DD14726C189DEF3
F084D1C0E48023AB6CC287688269DFFA918071C97999F176F9FAAA1DF953DD49
B5574D933326D9C88CB376D9865350C7693C1C2EA55BBB16EB5CB996C9177E21
24F47CD6F43157FAA4EC3112F5D86C2152810B491D5CEE932B40AA1C8B576856
E4B97C8E3741587F638339D52E184DE9FB4F0DEA229A8CB90819774D5C794014
EEAF42CEC87859B4CBC8184FDB1A77E8CF12340C75805B244BAA56FADF3E601C
D39BA65DBE9B3680EF0FC47281BA7C77884D126471D2BF79EDC5512B75228E70
13264219838D34098B3C2A5E1D19EDED5244A26DEDB35B29D3CC75D6CD59D620
2519CEDEA9218AB7AD80EF8EC1339765E539AFB85E7C45571BA21A4D88212028
36DFE33E7ED44A3AEA39BDB8A27DB6E3419D4E5E8D713FA50D070F67AFB36402
1E5DC1E5F9C83333CE4EEC35FE44A402E06902887B4732C684CFAB868EC983AF
3E27FF16727EA0F827B52C4890C59B0AD3A5156D364E315E7A1E45FB4AF268C6
5094495C7220A9E98ADD77068F2DC5D250F7F90FC4B6CD00389398C6708A6CC8
B95F89DD8F55618B66865C2F9A012C4ED5D2425C926B3007C1471F59C8EEE599
83F226681393B97AD5E9E77B6982E0B2C3B91576EB038D11EE58176BDBCEFA0B
953DA3AD1227690288C9B435137D4D76FAAB51286A0FD0ABE4038E28C1DAF88B
9DE1CB4114EF30D6734C1A730D2B1FF522DA5253F854F09D3BF2C8B414E6731B
4BF18A5C761308D13CF2710FFC0D365BF2DC34E17177BBCC89A9E7AB94C03B68
6B13C8880EF56C86C5207C8127480BD8B8588BB27460195C97CD1FEAE2768787
623A6BE30B16AC90B1169AA3632ED785BD9AC17AE3AFC8DC8983E89EEB06BC91
0350C9D2C3516B02EEC04DB36FBCEED6DF46E8728479CE94608E6D0F883C4A01
97DD2F61FA7EE8073CEF507F43D58B8DD1E80A91B1904FC1C9DAEE6051A9943B
9B8A584AD2F40D2D121A11F1D5BEE6EA025DBFBD84E399409D5DA78A2F1AF4F3
578DA8ABBC7694F03151EB9F023ACB2277F70BE7A54E790A8A3FDBF8F1AA46AC
F1C84F6743B995E1D0EB52E57A53543EE6DABF2FE7D0FB1B730E36FEB80F7529
92335020C2B93013460498FD8FC803E7AC7DC27D8F662991CDECC3D44423F534
302F18502E78181A50EC4FD5F238609AB9B1AF1E7DE70373AF6BF22784705CA2
D45C688F3A624AD6663721D9B12725AFDAAE34A44314884038FD870C5BB10C0F
F9D64467F115D20F876E5B62CD35A5CA39882C6B0E22141190911A3E50E363B6
7CF0C6B7AB68072FB2E949632D0959DED9238F676A2E5FA085F80B90C0A2BA5D
C252EABBAF9B5C576B7503DCC648852F6F61640C7737B0CC8CE43C92461012AA
63FE94C578048910A5EB3B3886CFC12CF3AECB20D4B639DC2D4DFCD4B0C907E1
8AEFC14F979F3CBD38EB1E9B93726E9A90A703353A540FEE66AB61C87333919F
1112FA776570EF74C08741FE610D0DEF5DB38D83184BCA6CEC10B106080CC407
99D7FC06D16F028A304E0EE811AB88D9992186AF6EB6873AB0D27866E459122D
F3768EAA14E530CD5126B33BF5AA468729BDC7B8B45A1FBF6D005EA0771D97F0
8137C2B877ED5EE4878C50F06A64F757B137C06F9A8ED56A7342067C47D32240
D835F8436972E1A7DB4EF36F5ADE6E0E23BD64C70EF0740D8B9BF6D7DAE9E1A7
3280CB0070531115AD54BC3F12ECF5D2A21749E38E131A69CE1DBB930C69B0F2
347AA6E815B4475B6BEA274AE784D86AAC5030D9A71775D1B4189B346F6475C9
1E5D83A082B361111050EA2EE2E32CC03532DFC5D00513B69C899F35E61EEBAA
5C23F6571FE3F29CD7B63E41AFE5DA440F8F4DF522232EB54C02A1C171AF3DCC
112DE73306E2E93487967126A4D505B68B8ACBACD4CD18D06F9DB2D2537F1FC5
ABB1C39D7B72352527C9AB3A12792F5F1F9F02B8CFF733E3768E51F5DC373FF0
02F852D5D348F7CB95F063A0541BF043EB89867B6EDE53822B48E74F26ECD7B4
611599828CA0967703105B825DFBA2578E432EFDD81D819FAA8BA4691154DAF2
E9C9C5AA291BB1BD179E3D9F145E734DEC36C39A00E79A4F868BF0E582C8A651
E4AB474F8BF9F90E152138E7847EEA5F6C803632CEF2F8B2F2138E7F06D46E13
E339012E1794B28EF53995A57FFD2AF29CFE8DAB602AA9720407AD8891ABEB40
181BC0B7C7D7823C452E23782A35C98A57B5FDC70D44AC6747ACD6C9576C3412
987F9D19A3C6B4AC7858B02D1AC329A2A3A485C78716997FD109BE5F98B4F5C3
A42B12AADAD9798E6D27820FEEFBE23328E6C0D35AE05B0EECA520CCBDCC387B
E1304D3B4D3A16CB21793DF61AB8F22FD1CFB4E40FF4068BEC34205FC0119EB9
73AFEAD8F7A080F28CAB1B42E9FB91BD8FD179876DB2285356FEF8DC4A3A1849
44B1EAB745F83F1ACDE16337DA4D500DAC6CD2AC1138A8214E9F17E2571D172F
CBC4EFC5023BDF524E252129D509426707E69AE34CD7090B55FE8A4C3B7167BB
50E5346001B95EDA8C700E0FFE02BBE1725A8665218FEF3D2ACF9B3116814C0F
7218014F8BC5937B4D74BB5FB94ACC38F874DB8CFC481EA4EB7E70A45490A6B6
D9CDBA6A66EE0F14316833478242F9C073D5C915019468D0BEDE7D8F02032320
856A5B74084AF409B609326206E0562B55EEE6F50ABCA17D6767341D056A4CBA
CE43314F53B601B51354B42A6BAB0B71D6CFD20E2E9F670544CC211AC67AA28D
36BCA80B6FD878D46EFA21E4E441064AC94DD9875BA93B1B721177E8F767B6DA
E0ED20956BE883F119FA4FF4A5BFA41F87EE42C6E63791F60C618B32D2E5DB6B
25776E9D370B4C636ADF062E92E67DE95AB51E299D8D269904F072B85E8B28E9
92998AE060FB641C7CA7BE430CF34C45BB07DB3830F07F32EA637775BCC1B2C8
D0BA0A09487138C3176DA0C04E0FDC543E6004A9714B87DAEC6542F8328E297D
2577991519DA8304606EBB1DADBB0EDC41DFBC0E7568219238562552C620116B
8861EFD9D4A8667E17E76C718E993BA20F6DC3C0DF0E524DA3590A8A207923FF
154B85F9782801AE46A4A1C69698B8A9C3E9BE36A473692A04A78C84C8AE7701
0C8D90D1E8539855ADFEACF719E5F6F66F12DA59625C437D498DFB750B6E7588
FAE43A2377AFEB429CF32117740EA9B262DF67065C92733A204527188D21F154
4E638C657ECD7B21C52C9BF5A24339F0697807C7933E921AFC4028F57C8209F5
A0B1F1F8417FC3BE8E85E6396150A56483CAC14385B5AD126D344CCA69ACB9E1
802BF0BF8B10A3A41650C7A87BF1B8E80D9073CC7111BDFEB0EC523EFBF17115
FF5B5469D5ADCA7CC8617FB3A8CF7BBB5FECDDEBA193089756FF03F73E2A5DC5
3C4577F5D68F966B1D8EAEB267F2DD2CD83B217D6B7AEA07EB6481020E4A2B2D
94AC9C8A87810BA68D3515FE8EB47474A97C4B2BA515035AB0B6FA9ADA4A687F
F0778752F2FF975D0A752E485620978BD3958C62CD9E95732F39C02FC1F853C9
00BDD0CE561879670C7D91373D0033FB45719B39530580E520FAC9FFA9861C61
BC0843A9FF64D94C969BF0ABDA7CB80FFE904707A0AA0A5480D5469F07521A62
CDB55779A961763DB019BDEA41F32B1C79AA829747F52D5456A3732BA1BB9D67
97DD3003E8C4740329E1BB998E32D38AA3EDCE029C9FA01AF880B3F933376F24
9BCAAC5CBD0ED9C3422D235663C579914D39D71C512B28C39B1F984FAF2F894A
1A6578FA0C88C521A5E14C6A04CB5DF676A80C637A695AC3760C6490078DBEEC
6D2CF0D9FB04D9CF77C97BCE582A421EBCF15C2A8C15A7810C31AA0F4716FB25
C60F8B1B1775A690980F70148CA55C7A1AEFF07C7F2C22B88921F01D272BA0B2
BFFD3331AACC94E13206C2A9C76DDFF027863F5EEC17A1974AA3BE4C1C19B4AB
83CB94A331A10AD01DE439FAB71C6DCD3B7A2E473E75A753214B31F4A5524C0B
DAB16D74B8F8F28DF3EEA1A2E0EE4C93BC2C94AB7B1D1934894DF0C0EEA7282D
294D50C9510CFD28D77A609B503C4170E98C6EBD2C9BC3A56939FE3884040453
F1B6D045071CF2D0CAB8F255D3854DEAC8F82EA74FB5EF343805FD6330F3D32B
CAA3EE1B12315F712F737B20931F3ABF5C907215601C8880394224A7E861871B
9FBA1238503E95BA711949591323FFA28FD1ABBE4CEFAD429E58074419E71F45
70B9AF7CE0A277C180BB5757F683A288182FFCEC02FACFDB277B8BB6B18AED8A
1F7F2808A4CD492A90B1AAE543C387F94F09F0964F1E3B25E07D9729CA797CBE
B6B8BD49116432EB310C90B97CAAF515A4A56CA262CA9BFBA5FE874035870609
F19C5C915A1F65D5F75CDC3C219D4D5B7DB7038D091E26395FFFF2CF031A7FDE
227C2D8FC308FE2FAE05E2A6776C8D3AFC338203165F586A8D7B28290136D7F4
3073AD578E7FC9A5466367A223B751CB40832014D118E1FED86C2BD3A09490AB
47B60E204B169672924CA592C13C3D70388AAFF908C79C7BCCE271EB7A37C96F
F1195208055E5B92294E586846F52DA6CF3898D3DE82CADE349097A1187EFBA3
B8A3994B694EE2281BDBBFB9E122D4D12B1C3AD4F5094B6D96C9E5490D5C5D05
527622EE8786CF1ABFB5DDD8606CCE956C802BE56A16BD45D506E7D3C916AAEF
2FD3B8D257373A3F45BD25A5D100A62E48359EAAAB63331CB81AC7EE6707DA2F
E46EAC79C115879F42CCD67584BDA409000A727AD73F02BAB8E1071F7A77D60A
3BC767B06D696830E29890A9CA3DE886C1D6FB704137BAABC36F78B9C790C18A
FCB5968D349D42D37EA9FB1F568D8508C412D17098E05875F4543F5038928EAE
408AC4144434AB3E9C53D4E210C6DF4CE0439AD51CA059CC111FD10508D06F26
6CAE234A46B51F8EBA84D4A61BC0EFC8B74A2740106141EEBDC287B65AA64D0A
0F1FF41447CFEDDFEB25F507430292E7462E2C6D4340DFFD4601D59170D36FE6
5F746BEFAA93A6003301365B55F8ADD11B2BBB6F5E0A604784CDC350C8E75FA0
5A0E10A562194F8B89FE9DDE579CC505F41AA5F5ED79FDE408C11120970122E4
7301BD1D55A00B7CBF4E119E30EB552DF3A8C3B03A1A08B5884500325917C9CC
F8D549D02A4AF6F20A2E7578F783FE3E4B337B1C6ECC74F1B4C26190D1FAD81A
A210A641AFD0E21ED1C80F69170257C0566EA3C35E70CA29258CF7AD697B1A54
AEBEBDB8C08CEFC0AE87E06232F71C037F947F9CC09F433D4E0B293F21B83127
FC7673E221C874AC736E37A06055D65C2055D563BDF674576663357E0621B4D4
BBE9539523E1DDB68FBB03210DE05180F10176658882338B830298CFCB2CD13E
F9AB25A714897CA1F692BA0249937D21D9C9BD6D9FFFBE976D4963BBD749A2CC
43EAD4B5B976DC8DF61B80CF18EF9D5E367D3155C643F2D44A98C971625374CD
4CC8BDCD211A0F749A4A0F3DBA016A53185A483D0731A0735099D7C4C1678905
683A4BD85C1326EDCBE93D8E6D7588C756366AB0857BFC16F30531FFC2D3463B
82059B608EF5970C98D965556F2731F75439C2205E5F56E1D70678DAD9B509CE
60CDB0179231EE163A3CCE56250F39E62D7D5AC2A950BF2C4B7611C291283F3A
A643DBB780E04DFFACF522A5D5631750C3D118CAAF668F823F8881D9312AEFBF
CA98AFFCB9FCC8588E6778F8D57A0F31F676D81C43B1F154361333F2F771A049
3DD01511DD5620057582C5EE44FCBA1F74E59045747E0FAA244640BA97DB6315
4E4696E95B783B1EC3F36F7905DB2E021A1ADD96CF2AD3F92BF90D15067AF7CF
F11B86A8A7A13CCCA4C65A9E478A9674EC435D6F6232AFF7EEA4DD17DAECA9FD
01DFE44D65B758F97102E7AF34A7C3E438E8243D6FBBAF50EB8FD8FE95328CC6
E8F2AC449EB7280F87A1E63212A3C16065FBFAB1531E74AAB7B6FA9ADA4A6B89
99CE78B3777E6F572EC7FAB64E8758CBAA3DD1F0C05890EA64DE51A2C5EB163C
653EE79C2F15794CB9F4EDD3257C83CFF135D6B37267279F7FF55F120A57BB02
F158FC5E78E55629228EC140AFB5C610F8EA8D0235C76342A9A713A005746306
22533E09DEFAD062AE48D82FF078B00D96F13C14DA2B71C1D3B1E0F6C9E10E5C
14D9D110DDDCE662403168762A25D5A813D4FC59D932EBF84C8566114B0A75D4
877A1604FCBB789B99A19615172210979FD7473A3E60B76F80289DE65259BD46
35854E9607A9892D799A6160957BCD0824CC86C82454190AF05C5B816EF13FD3
8408C5F6CBF83CBD2A67A265AAFD9EDEF4D15C31ED493C946708C322B5934335
EEDC05E43296A0548899B9805609459E7002DF03B3835475F09D2FC4DDA616E5
A6C2CFFDE0CC8C2F3ACB0591BB325B10EFADA7813AF0A45B6152366EA28F1A08
AFCECA8B89D0582A2C892128361E8CB6261A861DE27CA2883616D3185497DB90
55474A63A4A0213F3D420B4B56C7F28FF2313BED96496FDFA90851E3F7441B49
A99E330D3A36BB872A5581355CD86B964A99E0BEA95DBF140F411709BABFE926
4F59E60BF97C12D90452DF1DF9AA2CA014EAEAAE3CCFD53910FD858B645C5A7C
B1C291E30A3F9868B5F75F00A3AF76306F1EEFB66B292E74A589749A1DF7BEE2
D753DB52D6AF50590A009CEA600CEBEB00034354025F535DFFB0B027DBE706CC
E464ECC69088FFE2032E619298A53F6F7538DBBEC34C938C38F0BC65EC922847
C7000C8D46070E46E4BF0633795273BEF944AC81EAF70C493018BCA4576FE4C6
CD0A28A89F42F2A9AC6BEAF4333C51E877E5F31ACDBD05C06D1C6C4895BCF781
71541089CF31EA626B47EE5C6C41FE62C328F68708315C282F92BD7ADA007690
5CC598A5D2AD636B64CBE3178917EF846AA9E7C8E39C721862D673B740C302DD
8B7B72B8103A38861C324354EF7FE3F3841184036E69672C580ECE5411D1D120
239432C88DBC6A419915208A174972F5DCE57511D29289329659C3AC03CFA2D6
EC424403537D875766D2B3C0BBF6618ECAC20ED17BF394A3CE904E413BB2FBE9
E0B18E93BC17C4D93460EF9BBA972E3A523209576C023ED3EE70C575BA74F706
67ACD252BA729213B81C2A8B5239480C7F6B6AD6AE0D448ECAC99A704B972A64
1B00CE37D5CC21013C0AFC97CE14820FEDE66AA40A3B2C60310C10F980627B6C
0C71F4A4FACB696161BC77B245A850A930E97F6E2FF49AAB53CEACC461027C41
8FD58CEDBFCB451B9EFAAE8AAF211114400F64731BC8CD224EE79571B219B386
93DF410598244D3D0BB34019AD3E8183EE9560DA573E1792E95D0147E4835A8B
B9153FF27A3E0156A5DD95C2C1DE2684115E97A34547CEC133F9C970295F39FA
1C3DBA65630EF1E6D548759C7837513B64D21A8A694643C640531F5E5B8F702D
27757402E8348A09103564B183077B4A384AB9E02C217925F73215A143AB621F
C07C3319391C9C01EDDF2A245FDFB7ACD82556A0D4E648240A64277174C757E0
D21CC2948DC96CED6B10286FFBDA5FA2AC7CE8865561391247A78C8BABF2249F
4CCF87C3D56B44779BD6DC557C2A32DD6583F593B23FBCB76A05860EF4ECC7C4
256DFAF06223473C4D656F6B16DB6CF2A6E507D39E1395D05B79D9DA069D7A75
E6772AA830769E827B6B67A5E1A79AF828A2B930045F07CD60FAA8B62F0E5DDF
BDDA6B777007532E89F6CAD80BC85D30FFD9DAB6E0A4D5D7F55D2DBA80DC9EAE
70FDCB309F41F68358989E2F9B20B3E47EEF53A72D7A1631A477450705F6DA27
EC8A046F049198437F50076FE76E750D1547456696FB073B8FF291CF91CABE77
C55ED01005A99B8AFBFCE08EC13F50644ECB46C1915B6A771A37BDBFBD3F3E9A
863A421570F08B30850C13BA920DCDA36F1BEFEF3A673DDC442DA69CA7B6BAEE
10A88D654B53A989AA0B5FE0A5A32FF96A38F9B7E11F5AE6CAAA4F70C687D830
B53A27A4D686B8861527D7189EB1A41626373BC973423EA18C82839F55A7FF98
EE827D7BF03D9838835B1A0431422031B6F9297D5A7C4A3AC5F335DC49777BD2
42C80E417CFDE1A42271859AB0622795E79BD46C6FA97BDCA7925AEA933B8A61
A123E5988718CD9810FE2ED0CFD642876388528C0E616611A90F96E9BB87EA87
FF6E81827331C1FA187691437706B9C59CDC1729452E7F82024C4583467DB107
AE3346AB7410293E48C880C85E4361F6655177EC3CB06FB9BF645FDC8926BF93
9719BF3CBA3CBEF54449F6280BFB25B34E9646094C740B8966A8D69ED71F5CB5
0FD185D66E23A2EB8930AC0FD0506B4469B3F1835567AA05FA6E1769B7196F0F
D66F9483C3F926D321A3B254CBC00A373A23292B4BD5EC4969A9EF331969E9CC
B1DAEB243C4231F232F3C81073D561A4C0D31848088770BDD78F9014EA33060C
3A8A714E64FBEF7C0C74E8BC79D7EF292B7B168158EECB308DEC5FCE160F630F
D45BE193F28EA29E949C9637F965219C6620AD56B1F8CC05CB11BC9D20B27373
524C39E98BEDC5A5E75AD296256090004F41A1FC5460ACA64A7C947372AEA503
2FE6682EB5B5D233794829DF33C55CEE453C885BBF4246DE91A4B97FCE0FDB37
2E81360F60B0ACF0167344DC7F5D3526AEB9951C726032A7698A29BA0EDEFFE3
2C141353E9B1AF632D7F6E228D6FB49DD87E655B321D70FBC7D430BA13FADF9B
021615315415D8BA1CB3996F3E3FEEA3A5FD9DB16A14CD271718777C401F73E3
C0C22A4F74BBAA8D379093C76F7E6F8113EDEE007C357491BFBA0CAB5056C99C
0EC8C2A6D5D4F26748B2D7E5430E49C2B749EC45B8DE592E3E559D6C4B772D3B
58FF0D74A025DA1E80A0027CB712C1049D7BB5AFCD61B6C7D54446F593668999
C3AE0E487E3687B32BE3388478CCDD5814AD39BC96AF6CCDEE4EEFB8FF73B946
33C8EA96EEF17A516E26E635AEFAEE79EF726B0A8EA92F109B76B6BA459795A2
15C7B59E6BDAD6075987A8D0377B1AD94A2C3F4FA17368EC6097667E605BC641
F05F7E06B6F67734BE60D086A0A8C6A2A18E9F8D9A7BE19A526E1DAFE72B5BC7
625080D073BC484C694846CCF12A93F017BA10D470148CA55C7A1873A3213F0E
E69E5163C8DA30F989B8F24389C086E838EE3B750A3E09A2196D7DBB82DB8AF8
3EDB48C4676AE0F62293A937038805C5D3A962BB8868E73E61B4D49970182A58
3A9F859A3463B38C02170EEA1D0323E91CD4D0D872613704907783019F736B0B
E2A2CE78A6897BDF07BBAC1D017979602FD84798D01D631C2B635D6C03894692
27839D449624690EC9A5EDB254704F9165B1EF127151DA8F05424CF37B84C3E0
66B665ED510057E001003B1E8D1E0E6288876C2DD4E538B607A434B010F66B57
928F3AFF39B370CB86C0A791E27D68BD676B1FB73047F2C42C2D01E9E43AC623
E3D8C713E7BB5FDB2C87D3051202DDA9C23EECDA8A08DFEB68B063A65608DE37
3E47F612AD0CCF5AFC45F91D695C8A2E22096CC51A9098113FDEB96D060A6DDD
22C12A50C31564BBE1B4C581A15B0E2E070A5E8A38601D62D4246CA0155C34CB
9C869FC2DDA4F25C8C4CB4C3DD6BB6F464CBD17FC383CE76578C43A710A148BD
885085B8F65888B27C504F2FADD1D6C3D7E3A136E30556F69FC0E714FAC47817
0AB3E08B242524FBDB6829F0C3F4C930F466CEF706FE17D6BA266116D033F320
1D2A494ED3AE022A5BCB5B34CB12B7F02B47DFD98AB564DF0BA9C29C80C6A179
7019CD90C608D3EA1E990ED4F36B671EFA020D27DC30DCEB5A0236CA81A20410
5A13CB53808E0E47D3D9FE3A1B4411106895AA84AC2CFF3C2FDABF684AB09A02
16DA6402B351B65581543FB885A0A0FFF4DEF9C11AECDD9681A52D8F34BAA86C
6977AB0F3BAF8BFF264A3C9693747F3EF075B78CA3347898197A9A796C7144BF
BFBBF763F8C66007D7E72A81DC4C21ECCDAD212778C5CC77B64E44364D34EC8E
E2B65F559576BE4C7F14151243D996C8E58CCC2A993067DBD9729BA093C1AA30
7DEE4963C81A889E9E2EA7C796D7FFB0FE9B1D093EE4F55CD03A82EF087C1000
ADD77C786AC4D29579B6B21F8791701050A1DB9E51B83831ED23F61FE54EA2BD
E42F5C0EB5BF4072FFD31EBB90DF8B929E806E91506AA237C5B9F52420EEA3F7
38F3D4BA40C12B9F2387FB1115A0B725EDE744A0288006F21061811B15EDF95B
294BB6CF59D7C48460E3F6FA6E71C54C32E03C8B314FFCCF38A3D37D940FBFCF
7E78F1D5BEE6EA025E64FBDC20F0954CCDF5F02F5072D14C9816DB4E5D6BC03E
B4C6DF227270C4C711B8AD689210F083B8FBDFF9AEFEF7BA3D43920DD37E8F15
C7B8E2400051F60270E665F2DB35ACD9E8D7EA8F7D797BBE4EDA94AD0A4578D0
31C9E4C2143262C64EEAD65F4DBC29C108FA20CDD8065E90A4BE203BA70462A8
981198D0B4CBEEA00B1C2FBC81DDA7D995B8EC2B0EBAEFEC8BA9B0BF676B780B
B36BEC76A522810CB7E195DA6D1ACD8016B1B6DB4FBF0CE22DB2360823D5232A
D5DDBB5FB58FA603D7953595E43DEA887BD8EFE35A7BF463A7E3748B4EFD5E7A
68257019C129729F408E77A0DDC4D4A957F4575C675217FEF26F2C216C4BC170
7E7C58BFBF2C8456626D90430A24C6B25FE9051E228D393643FA429437EA60DB
26DDB4B332FC9ECFDF45BDF93690B5BA77E8620C7982E120CEAF90D10894D068
2E7F3CEE2E67DA505AC96462D0EABE124DE2F7F9570626DDBF3ACDEA03B5E7F0
80B59C8F741893121E93BC8C1658DA98CF7C34850B7E75C39096BFB35434E8EA
628980AD6FCC72F7A036793569371C399DD180AD00EA88C1993EB537B2974589
4F8DBFB0745955E39EC8A0EC45127D85FB6D1BE52A436FBE712D594E4C2A4CDA
7AB0B1454C171EA31D3893ED9B9302639F67AAE33E47B01BBC8FFCF2E893DD0F
7B2ED00C583A627C1ABC6B8743733BE1050F330990E7D2CFDDA325A68C94E063
BA0A4F0E4BD9DE68248D66801E15846AB11831226D573BD1CA1FE7488E711FEE
E96491E0191A71FF0ADBF7443BE3FDE5C86D4DAC8DED6653BACB5FA3E8A10ED6
CBB93F88E7A3640F146E7289442BE0BDFC932FFDFA1B4A5E4CF0CFDA7E79A109
2D6CE5AAD16A5605C4B0FF7B57C80F129C8EB1C5533A4C319C6AEB247BC581BA
47968E889A19EFD68F02FD57325C816D298728E54BFB60535F7B9EAE5390259B
2130F6CEFDE34FD09EBD878246A54714527501D3CA4F9877A8AC827C40BAD0F6
219A634AD8CC43AF98205B70659D0D3EB32664C9F24A497AB0E0A7D198C497CD
B8AE208639BB3CA65E70EABD3990F06436FE3A3C051AB4F66610BA8BEB50B617
CA3159FE2BB9B04356D0D629BCBDB9A2164ED6498910D0F2A5F08D38F43D88A8
DD02B2AF503FB4707B9745BDB14787A4BF379C4D67ABED25C42D04801DC94FEC
7BEBB2568744700E63CC3AE5B85898F0A54878951EF699D60955F75DCB9F4191
B9D50C95007E5A858A230389B22EA45DF0F038FD1DF676DB65615302C2CE3249
0871325228FC7BECD741D9DEABBBE9C141E3318FFAC00A1E85DAF4AF2F07BD39
31E991E608BC1ECE934E5C1597890C614F1A87E77739D54C3923044D7E92B4F8
0EC5F68D7601AA072D374067CA9776A445EC6971606BBD4B73D70AA0572945A2
8848040BB7B3428D4616692311E42C45DFD3982A1DBAF991AF52A3D49234F10C
AE565B1D8E7AEF3B643845A6037862B45C5112FE46EE34156671E51AF2C0BBB6
1D7DC62ED8E98F51F3A7AB7357D6F0745364FC8415EC647E088137BCC47C4B2B
B7AE8863C582658B538F0E0E19698F2B45A172CB5FD9F945D03AD0CB8F9F381F
C7B7D3B3F591ABBBBCB87B98223C11F1DA77239C54743C467C1AEFAE1B355B90
E780B37BD183C2860447DC8FC3750E35A5706239172BBDD841D5E4A0DFAD002A
4043CC9B5471AF377619FBD5954DB8BE7454FB358ADC2FA90CCC1E546D51DE1F
08CF960D6B2CDCDC8CB3B38FB0DA05426D10C1B3A6D2707586DDD7B8A74DC9B1
E50AE9B901389D9BC16D1C7C99D463F592F152D508DD1F6B73E1920DA6EC8960
F9B49A9ACC9D0DDB6EB4DA0E452E9FB199994109CD85FC8C2A61911417D48A47
DB819598F54F9652D8C032D04FA2A32AC95E98464E80B5A7424F575802860247
79C05A65EAD1337C7343F6647690099EA17AFFE3886A0CEB56AE4F2EB238F456
83CA8F27F7E8388E9FF34A49C4B6C4FD955DA3D9DA1E9841B5D8C65C393CC9D8
19E3C0563F707126A109EEE0E842621FFAB7AB9A9784D1FD2A925C8E0DB589B0
F005BA627047E8D665B228A06BE21E6D103B8144E51AC762152D64E8729AD832
3C9DD1CA80AB8632CD1CCBD5E49B734A3ABBBFB3114DCE97AB22F93711D7CC93
A5D64B41886A6F8F1BB3901A4F1606D3C0E7F3FF482331981A2A8319C509C673
3CEED31D12BCAE5764255713998AF4E6BE794EE9E73F9B611AE6402A82A0AFD7
7C4144D704D1DCA84E4E4E99B1FD3D27D8B1CE0C7682DD1C7396DB40A2983F06
5E5AFD66819BC24DB0D13229281B777DB0B988EF042E66336831A3BCCC673A5F
FC073D6CF8E98EC5357763C0BFB8C858ACBD0EBCCCE119E2112F37B1CCCABD7A
B64C3C47B35BFE4FF1130117708B90BC69F83D215E1D99A5D66750377A323F8C
218F3E5E30FAB4ED63F5D25C9E42DA8B3E49CA1030DAAB2ECEB42FC15A2122FE
A539DABDE4417A448C321811FD161A12F5C833A6C72C4DAD6F4970C981AD3738
7FA2CEFF6AF02B75F8E94E0522D80E0CCBEA413CB4D1105F8E1F1D3593AA43DB
3BE343C675631B8817D91CDB36BE64C59ACAEEBBDA79E89753B0AF72F3DA11ED
068C01B94760824696FCA071F43E7D8AB6F0B2F3FC09E95875691625373880ED
C9768F2C413144D5C1329D0FDF62BEE7268C8590A771EB18CDD89BD443E393B2
60CDDC15C4B6EB50C72F55827717C09F945AE279BA29A286F37E3D0F1F1CB4E2
3375C99A44BC98844FB0C40864C74AA3FEC26ED1EC4BD3ED06F749AEFF76C38E
EE1E6C01CBD99896B2FD05622DE111E86DD8E4F8C8799E6D0D1D553C01F940AF
8687E6E1772362FC30348271C5C115404E95A3F4976C8461AC04991E174404F8
DF8A4BA8BF68AD1FEE5790B36CB2C93BFFF0416DE7312457AFD5CAFB710C9D02
0F83CCE9F791FA876A8ACA7883977730C25E7EB5C9B5EDAC4D8584C40DA3FE5C
B0DCE8894B5354D3E2C1F751D12FE237F60D1D9A9B72E0024CE9F6E5BC80DBCD
514F628AC87B751E8302F37BECD863DF7024EF53F24905A108B5ED6F9F47251D
B7FA384C2C41D97B156F7466D260404A2BB88EA615968E28B85139C222B8FE93
9005FC47A1D00897B2AE661B417BC658FCBE87C400F7FFD954903C9878231BCE
237B1B3BBB51662879632230C842F0EF66BC7C554C1E43987F6B24E4E4807E85
D367FBE2222935D9D36AA3D8D34B58566BBBB52BDA44C94FD9F688CF64E18F00
F2522807C1ED166A85251FA2D0EF5A4511DA06D1CFBC1D66A31DD1853DC91D10
E8FD2107E4514E8E862B16A433213BB01A90985E66AC1D2191502BA0C0599603
DEA2B8A9E5903424E791D66EC20F0C7D1F089DA127931B69B16E3F9896B34869
D998DAAD5D01124A66012FC5157150D416E39D9F2D92EEDFD29EFCCDACAE61BC
2F46DCA8DF591AD93799858C9118760943C72B44A0215AFBACCC081044CA682A
0FEE0273C3224C22B5796F4AD6F30CF466A8947630EF6A64BAEC5E1FBBE1F4B8
55CB7711868064AB9C4F50B05C55DEDEA8164EE0D1C974AB2B21C4E6389F8137
1D27C80EA157BBC62E8964177D9B677432D099D64DCF0F774FBBB3C03074CB61
859C49679358A8E1B0A4DC4B4DF1D288BFA42C33C34A828F08817FB3E6DE99F5
82B56D31D62DBCA0DAB7399D53C3D358CDDF11F3E8C8A7503C430E626A939CB4
F28167426D975A66E4E188B043ED300EEAFCEDC86B4CB8FC42E29AE21288926B
AEF59042BC63637A2B20442AFF5DA32CFF571E93231CD7664340F656DD0AE230
A153DBAE8AE71D5B5E8F13D0EB172D54CBA62C2EAB82393F4993E54F687AB48A
526266DACFF0FA9EF6F67E09ED37671ADDD71A1473F659A278BA4B70F2CCC35A
92ED7D2CA13EC83D446C691C8B5308AAED9416DC7F3E3C4BA773679FDD7F84E9
BE26519B192021A67BA6E7BCA91F0DF3E1ADE67FCD01C1CD2D1253B6017602DE
D6396A9042A581C92FBF213CBC2358F5A4A92749AB5A704E6E6DF4A4DD638B4D
04F82B77734EAA38F72C74D04497841749CA4B69AE22145E83C69E9266E5E55D
6798CED8A5074A8731BE3F97065C9EE9FE89FFA36AE4562BA68BF1575F3C9C7E
7DCD9ABD9149B226909CB2482545461B2D04FB6DE67E0EC41A06CEE09964586C
EE3F0C62E596B36D2F1ABC55521E72D5A1F51F15C0A391FDD9E107751A45D203
15D0D37445F90BD661EED1377B513CB8B74C3D2AD83CC11EA3DEBF356816DD79
E2EEAA274B9F53E38CD4F2243891A94BF60468A9537308862170652CE9711015
E09C41E22C405C490E7A76D233F40B7112B8BD10A93B5A3147791A012A533009
490A22CEC1C8F1CC64C169316BFEBCEFA79EB0C7A03E9761851B626E06B0BF17
E2EDAC86F876D1A582733BC4DBC341863A5F6EEAF464F1AB62630B3ED9E591B4
DB853168FD36835ACF9F225C183C9E2B189CE49B752961F7612127AABB5C4670
20D6A3AE4DDA7162FD58A70CAE448DACB07BAA1CE5B53AF600ABFF15B2BDE5CE
6DDFAC5C3FA53FA802D021DE5F3654AED5E9A5F20D082AFC2FE6742D6B8A6714
FFC2B477BE06425FF9F6921A98E1985CAEF0101E7DB5D8BBEE6E54AFF3D132A4
B4A57C75F0A3A43E6F9645F3884B5719F36451D2AAAE3EE779FD089AB7A001DE
8EAB247CEBC83206614D69AC554DA2184147F134C26A77AD523E721A1913958C
37CBA00730965B8A36A3CFFBCB7129F25CCC6235BF29413A7FA3F83F71D0F132
A5A8140A9CEB55537F5685753A5A11F2C8EB04FF5FE0413B82082BB7E4790E65
86E11E83F0DB1E00567045B3CF6D7B1EB667ECD173EC3AB857474CE7F0AF4379
D153917635EC52A664E6A48EB240D35EDD91460DA6916D6F3622413563CB6304
2EE7A2CF8E150B8C157856D08C9F7C610D2C934C424C6611A3ECE3538F6D5D1C
F31202F68D4E8059CB933ED4387FB9BC1F35FBD2B2C547576DFA08EA872E3796
EE1DE14EA0285BBD50D7A2848E16F030AC3FFB5D546A1433520F3AC06802D1EB
1AE6215D12D739FD80C07EEC7E91E9B920689DF7A010DA4713AB3DDE22A2632C
DD18A763A1AB455A80B3CAF58D195D6C9FA2F06DD3C4A5A6A3FCB9792CC83B06
5939E81EFB786BE04F5C9215C9440554A1AC2626FB04D110EB3516BD13D7A561
8E281445157DA376C1C9026094134BC2F75233E2EC74A9157A48FDC0D977809A
637CCF6AF63F3CB99FD0C48F38A775CEFEE6A3037CB1AB4085378695427EC25B
33C0CAE92576A0E4DAB5C76437C575E5BAAD72F6ABC142ADFCEBC2D25586B2EE
88D58602479EB45E732B26A8E6F97715C66FB6AE6AF523602D7AFCA30D9CCF22
ED89F6E4D554BBF50C1D490B9374A14C00CC9EB4EF2AB44C824B2C3489A6D8C1
57F28E95A6F2A8C314E3676121FA5E59CD9EA6134D5FA2353E85D62958F21E05
1F23E0D86FF21B44908701DD1E4A70CCA6570446258BA4AE09506E09CEBC586D
36C75E8EA079007A3C63BE269969222B48F01A39AFC4F85FBADE880F7FF69BA4
E458DB77288A9644CAE7CC35D035A8CAC953B2402FD016C4069F36C50C6EFF85
E5419FD87A8309F87A214B28EA9B0868F5A5EEA063E24B4C9E2BA258F5F6BEFF
388A09BED862303FD078D0699BF350A48316B8D42893DB793A6C6660D67954D0
8592F12A1CAA1E9CC9ADADE53EBDEE043B335F0B34FDFFEE5EC92EC85927B4A6
16D79E042EA554E47B17856303229633DDCB1919A62E546C1ACC4D331E679FE0
08571FD416588DB971659A93EFEFEFBEA899AB0AF7C731322AF06F608C4C6BAF
4819835287ED94C4F3FA0CCEE7EF8E54084C1483BBC1F06DBADAB362CE5AF525
16DF08285C4F861561D1BDC20C385CF10F31E51A97CC9D164ECD2FF296E63881
2258EC5EEFD4C3110D5FE3D2902C9CDEAE1792626349BA9E45D41090F8017FF3
4920353967C1ABD45FC374CBC6857792A31DEED60CCEAF58D9EB2A3AAA0F4511
2EF5C9F4DE5D2D3B3DDE0A6FF72C1C4A8FD5C9C4EFA36075D9C1DDDDEEA88709
1A3942461C9C820F0098599582A32120F96DE6285D147DA0FD2CCEA36D2E82C9
45FB9A5C064103772E279CA8D5D793CC03286E72639077CD0CA79D4EA36B93A1
3EB036830204CACFA570C8993CB206EA70BDCF6232A5C5974830628A6459C498
6B5748467BA0B7DC6F0ACBDEE316D3F37C916ECEBCCC87CD504B90869C1F5E93
87A86E920DA907AC6426EEF2AE44E5129A55FFDAD091B85728622B1A6746FF0F
7A305900D90119333CCA068B00BE273DBC8F50D02258D9F3EC0F5790E7D57B21
BEF2558B9A6158CD4BC694E570AA6F3CA32E0091D5541C06E42319732D5C1BAC
CCB35804678E1BC0A75ECDDCF2300618147FA4E4B803E91AAE968A87722EE3AC
E7FA07160221F1CA8A4193AAD4ED5ECB9E387E7740EAFA6A9E956D13B954B820
4257745C1DF751E5FA28E0F017C3827656BBCA0BDF8400462BB7984D9460AD8F
DA180D0CA08DFAC5CF515B896CDF1471D50C1DFE444EA5FD0A8EC9E335FB999F
2B8E4152CD0EFDBF1D1E9F8EB0A1EEC769F2D277ADCFBB38B3BDEA694276F59A
CD7C7B70400B97058B525558F860F7AD6B485EBA11EBB02FDDDBE0B9ECA7619C
FB8A079920AC800F214DD5896477D3DF3E4026293EBB9CDBAF1111B86019D111
98A80D809473B58BFB0315CBA4B5FED437C18D7747AD21DC13663B737476C314
1CE3BF78670A0BE587FA6A7826BC396DB4EFDCEE1EDAA39EB1FC61CCE720584C
FB660376AED33B7384BF2C7252217B37901A46323F8D288E6FBEB732B5F93A0A
2213DCCEF0475F39E70B49F8134CF82D08BF59374E38ED2778084CD062F6B232
133B21830F1BECDA20C5CAE5EFADC9F362109B7263B53A50F4163B317F2D10DD
3D47564F1D36423E23CDA00A3349CE386E925D87972B5B7621233BAD84EDD76F
511DBA6FA4BF93348BDCE847570931C548663DB5EABD62F4F70129E293392EC9
201C1CEA5821DA1486379F66AF81E845D55E12032763A842327C9FA549CB3E1B
C398C36537A34C76B914B06F1BDA58E289918E7161037712CE732834487C4966
58295E4EA8A35F62E19B25B73A81CF738F4B04D32F878F5F356491CB188F8831
766B2957AA35C3DD3B71DF81123B0627CBC1E1F16A0ABB69ED5D11807671C1DD
2D553BB23456D6FFF4AD1C1CCBC8C7AC23175979F4B0824741F8E3CD6C714B77
094B2322B92733391B2E6CA21107E2E29FCCD5172B890ACD21AA2D847B5FBE43
843EB43081697DD0A31F6CAF2BB9F6C5FB0D347326B9A0B079F707B80D2F7AE5
FAA66C887C776DE787C5734CC52014E4F5C73EA9FA7E2905B38779685032C11E
209067CEA89FEC5CFD967B64C4A8877CB53FA97FB48E4FA1672FC2BE0B9828F1
F86B177D37C1937BA0CE7A91F872D57E0AC5F95E45AEDBA74F19A269F4A668C3
BBCEE1FF2880C3E18E2D589DD98517A0DB2E3D4EEB173DE55AAF4C40D46C49F3
11470E0DE11A87D17E1A0E4F1AEC76B0CCAD3ACA542751F73AD3AB414C0D488E
C0A5004188996B137B3A35A1669E55339AA4038A4456244F00DF86D37FB6354F
838F5B376ABC814C624172ECA63DCD0866C0D7F6925917B91F699DA852442649
B3F494DDA194234A72C7292F9579817ECDC21587AFDA954D24CA86362E7C9354
14522EE69A1275B2BFFE643815AC5D341C408465D31DA5028D8EBAA164B13AC6
63A487097A04885AF77FAA75400DDD37A4DFD4689C2A708CCBE29875909270EC
88289543DFE7B0D38D0C4A354CEF213F05E877BF8AF8272B3889A68E3D9D3C48
5B4F88C70C6DBFC578DCBB64DBB89F6A22F3A5D2525840E955014D3752C166F4
ACA5CADBDCF276FF09859440F90F63273917E75319F5730EAF3B9DD3B5125CA4
0DBB4AB090F4F37DDE65F30C4E08085DCF684A0DED7C28BA004C737C2FA2EEA6
1FA3764548C5B46712806DEE05E71E5054151F70441ED1C699B48D7194783705
1FC11F85509608DBB91FC551BA01F000AFAD4D80E66C3266F6FCD4B23719E704
009FCF630622C075886A47FA347775259F94903CD3988BA6E64ECBF53EEB9A26
93CBA6014D00F23BA31A223A7B0F5D296147695BA9D2AD2B37C00F43CEFC2B54
78B43182CCEE66A4AFBA7D2C370883C400C3592E1732B332629CB85253A54E53
258FCCC1DB68CEC47C40F02E82842A31D2BF909D94FB78D2B816229CCFF8CF92
CA3307988584666B6D2BF994288F40EB18FACC6741EE0351087762F5361B0BA9
1FB6B2FBE7888C9A11C1B6F3DA3A979B85848CF69A63669984A689DF47C2EDC1
7B642497717736AEA6589BF5B5BF113514359B1F533DC2EE9CCA5E76189F0661
5509C031B9CA4A8E26D066A5963B8D89C087AEE1E26719016BE7AD6924E44F2F
76B5DE9BF8BEF65F8AF62694D339D58882970550966CFAFE960E25DBE7729475
6FF6430CF2D23017C9448B9DD967320DE641B54C55188274028D6F01B6E07E3C
AEDEBACE1EBC059EBDE741E84AEC3136C003CEF940859FE6119200A98311D5A6
D4BB5D8CFA52C410BDBFA1B7FC292B022A76026A585D50F20541D33443741B59
495EC152329543E583559FED3D5D94C4262B62BC948C9DABA57263CB0DF1315C
C49DA8AA5D1CFFA796E421A6D1051235533148DAEE5270CFC9CE25CC0E73573B
C0277BBE8A05C2E369C7C6CD0B3E4A9A7E7379478C435F2996763A802297C589
0AFF8251DC8E76C8AC976F120F6624421A8CE4C3A6C510F52378CE43CC866139
223E02376810D3491CCD3216BA48841A2B0311C4B492D4AA421DA2161F3EF009
46A6105D272BD376BAA2ED3185DE8189F689B357D5E520756A72CCC76F64F016
383FA43B050493CFE9967BFFFA4A9710043554821FEA3BFFBAE4D74FD2C1E508
76E1ED1C0D4C915FB7AA4EA95133806480F6475C0CAD550F85AB157D18E21D73
9F38364AAEAC673B7CCEA9B4056A517AEC6B33C45D700EE91FAB579AB596E1B5
7A0D2C71FBD229437614B54727E9FDFAC8C3E28EE5AA82736C0D080FB8272D0A
4317956C3E361C69381EA563D8E2F3C0B181D397D5F636E524BB9543B1DED1E9
3D89AE764BE9E61DE32C9A7B1E7E0381F0199F32ECF4B51719D8ADB88C8CB3D0
FFEE78ACACA75673C1BECAC66D4C39633F203AB94FE20728BC19938FD0860A1F
97793B3CD03C2775451E1F664E066B90DE05893DA5DDA5332B93DBCE69157C14
5E82CA24A525016B15BF0ED26A87175387E4456438D7B92BD9DD3804C788B7CC
5CFEF40B63CE49DC0E946784DD4415B01D45B45391B66D7737B2A097F539BC0F
DA57C12E7C693E5546657D964D82EDF4FA8A6AEA684E807084A135B75721F19B
C6C2D167C783098C00814976E79750B103A0C56C186FC31AE6C106EADADF828C
1D7A465B4B22E6E8D14ED69AE11DC2506A214F24D0E023DBF6FCE9019EA87B41
C40D6AC6CD196BF5D1AA7576FA9A3F1B31342CD647F583AAE1F28E731445019B
E55671E191040BEC54AA400AAFFC9D668B852FEA15EF8B3B36F23C644CE1E683
DB5AECE59D0055E88F140A215CA241AFE06DE04B8F82189E77B1739024E7F892
69BCF25385B9BD2354ACEABA7B96B5993A16F8BB898EC63342192EDB323974CE
7DB67392E668DCA3DBB3A85182B2413E8DF502BC69B26AE1D2FA0EB8EE1183CB
891CAE77754E2623B52365818A35AB4026FF24C46374EB0EE252EA0D6CF7F002
34AFD42CE54A4C7AEB10C3762685A893D2D8203023029D98492DB526E0AB4630
DB5FAAD051516C7B47173CFABE78D92CAA6AF8F3FE667CD5B3B02EF5BD8C1F1C
AE00602D97BB6C2559F5624665D0643D6CAF7BFDD1C51DE12E4B1AEBB249B3B6
A8DEF56F18854119217B15D61FCAD881C51D600F2C4A208CA6E4D7485B7F8D6A
94B3FEC736FF51E3A09AFDC3E28E61C9091ABE9403740518FBF821D00C0677A3
6AF8BB250BDA24F38B402784DFB997D39502C3C673FC035D03DB1E2D4610860E
1F57F990528ACE0C9C7728C7A5C277D1D314A6D349E0C0D2E83A30901E14DD7D
4E061C9CDF3DE134E4E381882E2AE2116B071DE69855D3D08EB0A943D65926CF
337F15F9C2C0842D58BCF8D7BD1194C7C15B9A30161A42EAEEC8CF8A279ED06E
B2E5AAC7B9C1D2E8358A3E2EB931AA027AEA08C437E5ACA93389F1F61878283E
B1B519FC6A8C5E2C75F65A2C817F7346408E4EE79AF2D92A03AFAE368D061818
CB00DBFA0B9350A6C40712B536DF4A55E66E234A63C828C78387ABB66B8E5CDD
0F81EA2F2E19B693689F502CF662E9725C6C5FBFFC664A5C1B33E9A2BCBAC033
66F947D04D90D7AEA7CAAF627D03B0A43E49A76B2285E618A371CA87559F64F5
DE3CCFA3867BC742F0F747F8CBD3688D1D59643BE496AE41B7F63D70B2E139E0
A16E97AD604CC7285D4144A204880095E136DD2324C85ADA8153096AAB172026
B77627D643CDA3A2341A3A9480A24FE5419E09A6E89A4EB8FFD875BE3C96590E
D9B7F7B194D6168670425EDCCF2569EF5F302D0D8760066B8DAF35E62DF8FA26
A51D02A50461BA578DC54997A14EED7434D38CA8BCE78D1FC13FC0A298DA0F3B
46B1E3364130F4F644DD7F0876B7BCB6937BB6917E57366955BCC962BDD38877
051426B483EEFCCFCB777ABD5A18A08F79E42EF81C570F7670A606AE7956C0B1
B9091BFE37220CB7C4081C1F34E7EDE61DECD379B33167095D79709EED96CBA1
1D14BC3A6A4D845E1FB5F730A732D862BB7671E9A40AF201FC03F2DB6CF29683
229D025C7748D479504F68CA957483EDB42C6FD13DD32E7A3F0CC49D715E5451
1AD7B499BA4023617F7DF3FA0AB6EDC8E05C2457FCAADA148F0F5699D8E2FF79
0BB0079D9DB7659EEC6496C3DD2C71FEFEFEF2BEE15A854D910B2EF4F3023D4D
7B230B3EE1D20E3BCF66758CF387E8DDE3C1830FC48EA6DE2B725B962902D945
C1F915C6CBE26BC1D488E8ACB96E29F5EC653F926226DDBE03FFD100F5DDDAF7
9120D64067CB99C71C97C9EEC48ED32A64DB1FE784713E11EC4FF210981164A4
D5063D3FFB7B494F61AD1AF46B54215FC92A11E8254531FE0EA4241B39C0F9DF
DC1C3DA300F088BB808BC1B6139D779E332E0F7ED8C3FDAF862EA34FAA65511F
9B5848C0BF1B78903691675E627B2E201A0E1CB0ED8F81C60031A8B5FE5D7C25
3BA7821FFC65451E7B28B2B9A250AE39C8F5806AF0E43781BEB74C48EB9A3798
F3B68CAEDC5C26CE4F7DBBE0079A2665230DF747069324E43B5489BFB61306EB
FC6AA2B99969335EF6C2E0FC2DBCE23D48507F7F3E66291A68BDBC339A8F984C
AEB4BFA1E893050D43B729434901BE34EB8F9DADB639BB90734412F006C1EB3A
3399391BC9B6736925712E786B6428ED6D99F09D8C7A077428EA24CC9F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1000
%!FontType1-1.0: SFRM1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1000, tcrm1000, larm1000, lbrm1000, lcrm1000, rxrm1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-189 -321 1456 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462AE6E5
19E5878939A488F2FE1094A76925CD24DAD4573AD3CF34E426708CF06E7EBFFC
BEF5595408106E2189F418D17AD510ED5B6A528E8902AA3A5F0FF52AE3DEAB07
32F06B63E28BB88229E046F4FF8A356BBDDE82DF2A197F2E26CA00D5594725A1
83A89A36487EAAE1AC312C929CDCE50722FA6C596C261E4D78D6C6ABF77F5CCE
0E410ED74287A0F201140F8D9674A7AC585D3CBC72CCB824F9E1CEBD08AEDB3A
A4015CADF471F7ABD9B0F0AF73A8274FD441BC1988A61799856E4770155341D6
516CD0E25BFA59B67AB7E0571DF3F5BA70AB52137D9E6A79EFADBE70CA05AC8D
991D0895C8FFC747FBC0E9A7212BAE6560B9E2B64FFCC58112E64A3B4CF7ECF7
595F51C34AD1342F5678FE1E62EC5A389CF04E82B5F832914B91F921F30A7E32
CA3919F57A2D9DE844CAAAC0DC751C255C9916595E8C9532E7A0A84A0AEFCACD
83EDE059FD06EEE9951473180B517F25F609F347DBA012AE9F004DC3C771777B
BE812787C3C50315D67254A384EB65F260943C6E16B2CDC64E15EEEDC67C5544
8ADE9981A6867405E46222CACCEF79F9DC8674268BBBE1EFEC2187A75FB7FBF8
CB2DB2134848DEA2F9CED443DCF561E7272B38F830871B2A5196A787924EF556
4B7E9093ADD414ACBC10147944D216D351CC744DBC13B0749FD0A129D7C47983
7FEC7FDDECB3FF4166FE295814B8EF751B79196DF6FB2F28CA8CB00807F682E5
1F37B8DBFA6963E77ACF4A16586D58C87B0F882FD7BAD0A5173202958267F567
6D66D0511364EB31556C37BA1973151C35046863FB4F3F5E6434479279EE110A
575DAF0531EC6A4D83FAAAA64995A7B97207724374CF283D0FEE36BBF7582F5B
CED7CEB37EBAFD8206E691F7D0D17C63527AFB2AC537B47C402716FD6C23FE57
22BC8B95E994FF0C6A6469AFD70C020C711DA6F19D4C46B9DBCA6769B6FF2733
21E813E7E86FDD3101BAB642B1553FA2642DFCDE99A053213ED3C70CBDBBF19F
C743F1F168B5A21E570C8DF7C108FEEEE50C825EF2714E974749A7317D535316
2D369F1673DFEFFFA71E41E520792075672344DCEE4F9F1687F0FBBDFC25FBDA
0D8A6A1C3DAD8BDEEE8161AFD70C020C711DA6F19D4C46B9DBCA6F9D79D26E79
9F1D26CDA56B940E651D0D4D017BD65B3ED72939301FFDBAAEC98AC821AFAD33
5BEFBC695F2746A01CF510E684C7D589F29C9B5E0BB1C42C9A96843918976FB4
22225AFE3A3F92B85B2D1EAA81D0F1D4BF85B1FBE305A01C6207D95271423B66
11D3879FD381D567701AF1B0B0749E05027D5493A806A353E3265170C00076E4
86ADADA8AF511EC5FE32E5834EE0CA7341F16665D0EC4DDE1F80C894D3049706
CB5FF8EC37092ED0A93D27A2EE85982E48AAB7AFA36EBB74CE59EEBC8CDC41B5
A08A3098954BBC19648F65AD5241827219F9BF72D4813A30646A85A3E9C558E1
31B17DD5EBE155667B73C135EDF4295FA4DA7A1C9895AA3F6C1F61BD658159C8
88E89E3E48BFA5BE91BD3DC050837B89D74F7872C976386C425054BCA530CF6C
7A33BCABA8689139753CED4E4AD623924858E2D38A7D4BDE1BC5D5EB4F85BE37
AC869A6CFC87E1FCA5CD9D3B850D16B50260C9C30CFA7DD1FF25580BDDDF4106
F5E5BE85533BE7D472D65C01DD80A54683E962767BDEF178B162417A7B7522EC
6B606CF186D582DD972C54BCA767918EC9225192DCF9AF7F4409C06926511480
479F0307DD5A7B8E16D3FA14AE4D7C9AAF0789516E44D9E4187A63CE0397C28F
3414FA7B2C2D61BFCA9492B32DDE38885072B38149BEC1A5CCE0C84A4963D11F
2E56709565C8818A538DA896944A83934003AE6EC6CD98A11CF309661E2BC60C
143604AF24AFFC6126699DF619A02E659CA508BFB7697284F9D1B44FFCD31970
F8CAD34EEB68EA6DB154204ED9DCE3E7E23FB72C2692041C4FF3728CD309F215
414595B073EB8B80508C2EDC1C4DF8C38E89CE919F2A837D1397202EB314ABD4
09CFD87B215EF9299486B7EE9D4CBEF1D42B2D5DF35592C3A28ACB384F4F0C01
CAC17DC73091C42F7AC741CDFE7268453DA56BF31816E435F38EB8C23C5093A6
162863EE9B7A881D2F2352217CB6BA4B3F58880A43FD7A9F5D3E2CB24D42FE33
605E3C8345BCAE8E072279A50EBA843179D2A95808D1CE24CF78652958EB8A30
ADAC715CF070A47C44BAD93D952A6763841D6D5207A8BDB9FF4385997C0EA83D
3AD039FE0720013D660C4BDFC2FCA9D28A6742AF910205C9B62146E86F913D6A
CD406A2E9041682E2C5192F197090EE5235882FFF6C169C9A3E1E6D2F4739971
EDA2684391831CC4E37F45277B62E03769C06DB70A2626B6321ED398C79220B7
B304F5F744EAF5DB260B14B3D5859FBE06922B232B0AC83BFAF49AA95B7C0C0D
3060AF32B145FE7CDB50F0C24D0AF11A161E21A6AB4CAA2CEDB52F9EC740EB57
78E39C741CC32E2D7F209C93817387E1008E89241DEF3224534DFA43673A0E41
90244B84241A7F524982C47DF34CB09E310FD1644CE582EB7FBDC53D90EDC6C9
D0C2AD47B679838CD6DEC2BF89521C1664A09F906D7D4347562C404D0FE57EEF
2870E0A797E0EFBF9FC06108C2D3CA63159A0300C7F03BDC40678E627A5EBA53
AF2DD411BE8E42D4B10E9085C6F770F2704FEDA818B81260A3A1AA4B2AC1083E
33A7800BBDCBDABC57592D173D97119C98ED76194C28DF9541BF4E95E51909FA
21A965428B0FC127B39D9A2488319CABD93BC84CF44FD1B87D580EC68142CFAB
9D75C4F6D6A73FB4C07FA71626373BC973423EA18C82839F55A8A6A0FEF2F923
41A948A8F8DD351882D0FD4A250382DCDB836B55F212F19C2A5C008E3C422AD6
A6011E641B73BD918AB2A143C4142FACF80F1249C3D953D33B6C8CD92A37EB6E
ABD8263983CDBA107F2C8E7A85BA09D427BC7A24441BAEA7F51AB95C11C210BD
B0C8F7D62D2446A2E1F94FC48004C54E1E8D67C8B7DEB084189882A704535916
0B418A2D69ACEF23B5105A0BE7A6FC13C4EEF6006E9D65A26EEB2A08F0000765
FEC6495BAF331EDB36BE642BF599F6719EAC28B40CFB665266BCDFB732F62E14
674EAB94BA871B3E1C03958AA2325E538C9D8D83343E885A9D61BC16E9E38A5A
389180BC218B420A01223748B495A817F99137847A2850BBB111DB5FB5C98BDE
B59F3EFECDEB0D9F00DD71FD26820F3962CAE33276313F87B7DEE1B057C7665B
046A438552C571ADC7C21185EDDFF259C641D160F82C924D3BAE8E7824DDD6BA
02ED8D5E381B0E3ED8525202C1BF505647491E885469725CF356762F0172AF79
F5AEDC98B4111935FAAF7A7DB810D73886997C0EA83D3AD039FE0720013D660B
9477C2C378C1B0A69949A1E14670B7441320FAB899D00348905F3C7CFDC07151
723D41908FC36867A627AC5B6E78F30F09707B9860592C55DC1AAE337DAE8983
15CEE46CCA41707B896D94D9351324E055FEC45769987F068E26B803BC80844C
9EF91A6AFFB8A1019F59C5DACD729608CE8AAF3A48C72C73E78898EAD58C01DF
56EB0E8BC41368F966B704A73CEB72AFD5A3521085B1D5104E767D6E85CF93CF
3937BE25DE46DA396794D9C59AE74D7304D4C2AA941B61D7224240AEC228EB60
50289B099CBFE4DF60BA3216B76950B7E54047266A750FAECED19F8E92B45121
CBA7D378A7B1AAF5F56C7B80ECA9A21F74718AD1FD1859110612CAC388A0C002
7D570B96192C79628BAAE81FB022368600EB75728D604133A44AC91D982CED26
A2E91A6CF66BA5BE3059A076D567F556BF49627D5AE82435113B8D0A9FF47753
1712CDFC6A77AEF465A629F42B02F1C5A129EEDDE9A99B48F5D366082E77405C
B38C7A634DAA07FFA25533CBA45BDEB49D8141816C367ED5831E10281F4DF8FF
006813C8DA871A41C0ACE77BAB719AC79C7E01C8A046181A95386257A69DAF91
917BC0E9B8214992F7AA291A9B95CE14D6AEF6AA4912E8C6290A81C6124C9E3B
3C13A8F4DCA4FCB3B2F24927FD16E57FBD50608A8314368A21E37A31DFDEDC4C
DD45FCBECA16FA5184618E121AC376FA2705C88486C25417C0C81D5A73E52C2C
F1E21A6C94D80957B6F034B4D7243607717EC0E9DB507F1DC32DA7C5CB636C5E
1D017AEAA5EFEA931D89AAE980962317F67595E24FD86E7D564F11A839EC8E5B
8120C7C84E027D50253EC67BFE723E90E176A345586FE53A6685C17437F7B1EB
1FD9E60D37C07684498D9CABA9386D3C81B051C44584AD5A91E195A828CC2CED
6271CCFE028FBFE326935DDC68DE7C1F36A1E693DE59D0541DFAF0AEB6AE1EE6
D08F1E6042DBCDBD1880ECEBA3A6F9965049ACFDF6993996A13A9E0529E345BE
7A44A59B6623F07A3502DD4F60988C29BC96128F689842FE797BA7EE433E7586
DD8500125FE9274A91C1BA17B808701E97DD2F6109643A183DDFFFC28DAEBA43
7B2273D5C097FE972352DE294B83460AA67E843536D98526EFFB7971E9A56678
5CD0403F2CBC985B2DB620CB5E8460B4CD7BDC0EE640F4FEF68B2EB610E5B65F
1B747A93DDF43CEAE998733591F7977C9EA9051E103920420120F10414695EED
42E02CEA52564490D314904FD015B61951C20243DE83A0B74D64F4580971E8F4
2EBED743611100072E13D0FB989ADBE830F455B26684F68B88C471A20CE2D9B4
F1FEA56902F01DBAFA06D8336A7F8C638598DA8F2F8CEA8F237A4B642F747936
BB11E21AB5B13A4DEAA6259C8E1654D1C2DA5E6D5FF70F0BF5813FCF76503D0C
78CE7119296670EEA02CD22E6BAD20BABA944ECF415024E914B8D25843DEBB31
77037AF0B0020ACB81E231E7B988679E859B18B0809E416B170067B51D063FE6
C6D3148452A0AACDF40EF7C7866BAA8C2D8B87C6F187B9386267A4A66901948D
B13F9287B4CF48B7B043325340E340AB4B4503A8E9C2F845BEADFF151E1B6BFB
CF6B62D6CBF50617E019030AC0D98A422438DC4AFED3B30D07D4961B80E8CD32
0B25BC09DCEB84DA9FD024FC4C3A5E78C13FCFF6B29E32CD314A0CB19068AEF9
BE96DA47CE4B68E345A8ABBAF0A9AE768535EC2DD30B9899A552FA4CBAA94D44
FFDA86DD1AA3B98EBAF41AD490512F330DCD272B15F19F8A0469B071F028E601
051F0857C29192867A1094C9A7607AB9B9BB8106A4DAE9485490060EB0651F60
6E678DF2FF576BE5C494D3BA1A85FAA3668E52F131331AFDA08CC184B66BB482
910546E781C7210AB441A416BFD4E9316C509E22D20FD8C11DDA7761B1A0D574
29D6ADDC9BB1C1156CBCDAE0DFD3D287387AC102F97CC8D362AB9D91A7ABCDF1
6EE4705ED92A4AE54C9CBC34921FD978D547A92297D8B4DFAADCD9247310B945
8B6B7A12B47A6392ACFE0BBD623C99C74E1A0AB3D7BEFF3B4F88DEF4E3C63B03
7CDFA5ADB906B42130D480C76F82AF2F157AF42FDB1FE98DCB81320DF07DEA87
EFC6AAE69F73561A8830A5AC9B7E7C18D5BBFEA8CA8375AB7DA7B7FF2FA9C2EB
77D6CEB6F20266F113A068458CCF339D3CC4882932BDEA2B646DBBF5A0001216
B9074EC84251A2EBF37123A6C22CA7331E027FD6D3FD81D4A95C25C8FC1C5403
ADD0349A827E17794C0AB1BBD8EBB0F647ACD2FCEE4B184E4148C46F02C06AB3
23D6080B1F514A65600DBB29116D937B4066DFAB2363C70E2C3171D757DE1531
886F75567E77A8B604F45E03015795FA961174504C0C3E3F02BDB58C471BA96C
C445D7172A15F4335BF3A891FBAA225FD64BFAE67C44795D506C1AE6D2042F57
F548D73EFB29A3C9FAD06D5CB96D262282A4898258C8A8AC53C3E9B70C329BCD
9CA5DF2F8CD8B2C8E3514C568E5D1DC854B10AEB7EAB2007E231575527B179B9
C6ADE75298D261EB80BD4D7AC036C0571DCC990C60FBA08F67D636C12BAF01F1
04EE85705F8015B05CBFA80D815DCA5268A109DDE6B2B61F652CCDADA2F3E1A2
EE1F6FCC07D3ABA2CF401E5D8236A67019DF1E665F6CB1CE9830EA7A9C8E91DB
797F21FAD8EB29845025DE74A798537B1805286596FDE8EB0520FFFABB84BCED
B7E130A8E5DC232593EDF90D8C4E366D19BEA298227AFA967F73BC5D6D0A0093
DB026834F3E9BFFF09F9077349C96608AEEB39FF1D17405A3620270BF01EDE1A
3290EC4CBE0D21D5F5147BE27BFA25D69BCDD3AAA5968A3ECB23D1B03FFDC39D
A3D7071D8E5134A27E8A5A106D86E395ADE502AD664E936D20D0D9A44241610D
53AE6A1B077AA725FBFF87CD4F8B0D9C63DAFFFF856B80B3279DF1E4EB1D9131
5F66AA868C28507D97C848C3D061C82E64F559D6AD28E3484C836E5DF9E7510B
788EC33640801154F287A6FBD95A9C0863EFC3F5AC56F4B051A30B2620337030
06141477E9C16131CF7065F11D04A436EA550775D30B3C92679831A59C0FF5B0
FDD7C26FFEE88874284F72237C1378CF993A73530B77F5FA31B09CE366E03D5D
8E5CF69B1086B58AC76FEBEF8656C4567603A80BAFFF3A40A7241CFF20023155
6BD4E11826EC6D1BF0D3D7F69020B67A6F96D92300731D8BD5AA40B952450083
32E6B0AEEFA3A47CE46057E6E943CE6E928C947F30FBEC1FEA5FD19A0C29A2AA
4A73021655CA4F7C008105C677BAF1DF07C5ABAF234464259D07A0353A00C669
65A64782EA5F9C5DAF9B06D6CD9628C061F491A3E6DECED65A8BB16DA3E011FA
2B757F02EF6276EE55452AC5CC89E9EF45E215528ADEA1C1D320D60CC05C2478
175BF6B5FD497380A0E5647F8B1C906E0B331D256FF9653BCEB7AACFBF26C745
5590FDA7D9F63ECE5EA6C3AD4AD35C0F7A8403B2CB2AB40AE9F9B354D77F0EB8
7DD9A66422C5E472D5998FCA837F3D2C9590222DE1EBDC0011A247582DF33C00
9DA12ADCE4F6CAD515667BC689CB2CBAE3CCE56623CAE0EF9833304CB4345C80
692F535DAA3639B351C8EF330672C9584275E0EDCD8F47DDDB8C1FD5D6A3AA49
17F2669259B2A280439AF75932BBF6A5C4C134717FA338B17B31C12ECE071CB2
5103C6431D29D37B16D2C09E9887BB264607F6FEDC37BB1658FE1B44856CCB3A
973749981546A33828A5FEB5EABEC1B223A217A89F4D2BF10C0FA85DBCCC3809
0EB4A33A4BBBB1A93EEFD889146AC58C446DDF27B3E316B429412FEA42D1A4B1
A09526F8CE866E938834BEFE5FB8046BA34E3CBCA440F97FA94CC6D3197F3679
4D1FC124EA55DBD95553AFEB4DD1EA87BD5B92A62CE6BCF095DA482A4E9D8A29
D87BF206717E2741A0D8264EAA3B6AFC37CEECDE1DFC1F2E553657A2E0B1EF03
7264648B0F43152CDF4BFAEB5FCF00781B5FAA2FA8E3635ADC47BE51F911D017
A3281366B48A340B10042281C8F813550F0F3D47BF0AC5BA7C001F0BB0F9428E
7A631D0701B547001CD83C6BC0FC1D8AD4E0F00272558FB99667260B59F58DDC
2B0BD7BA4BB366357C82CFED2502C765BC46825B83A4B2C25A56E4B7681BD2A4
E6874D9A0C4A787D4E5F23D613AEECFBA6A7980C1BFE78F9DC3CCDCFDF8188CF
E371D039DAEF18C95D4CF4222DCC74CB3A6E4C5685DB2251E2242AF69974F34E
89B3F38AC482D14B95D58B77E7341B468E3F2B7FA84382621BB37D4EDA44CA0B
2C3E1DD1EE062269116C6E01175DE56D632523256C3BE70671B809D61FAED0A5
206F65681738FF1B851166F4DF9137EEF043C756A238277F9472D2A12C9D36F7
CCA0ADBB4D53C5BC75EB8AED72C2AF3F39B9F44A9DE53E47A50F42F8958111AB
11B0B27C292C8F30EC9F6E15A51818AC249383118C278A8DE53E7EA7B0B8BFCD
F9657C416A2FBC84FDECDC847B434E3BD2F8E8F5AC4B5F5EB63C17C626231A1B
2E1E395397EBBD4F8CCE98A000C062534DA410FAF48DAC9A6433E2C4E3EC1769
D80438009C4FFF5F0DC1E6A6FCC1F86F866B65F7F5EEA0D7AB63666F6E32F835
D67CCD4017C1543424039884610387409275A0EE7AC30B5D1002FB770916FBAB
E6DB236656E7B7FBA305BD8D2C6FF35AD4346943088507A8A50F4CCDC4E77655
7BAF5B308C498E5A68F3BC6BF940B24672F73A962F7988F546AE0DE9355659B9
9A67465C76E398A6EC0E5A472873FDA5992304E476CFCC76530355A9967A3E41
0BBF112BA75D4C1AD7515A1E3344EC2F9B354A48713B4925F38314A14062CF96
26F9EAD2550500011CD82B10C375592CB3356EAB836DAC480530336869B857FA
E577672626C76849D33003218854099E8644F3A08895BD34E3379C25D850F23B
66DDC572293E83CBACCA1A53495CE8EFF17A96CB95D27EFFAF39D956819CCD09
9E8DD69DC0403BD37EB059FE2AE18365927C7FADCC056E26B4D5C3AABC8C11CF
4D87C860A3635EDBFDD193B96FA9E7D40CB1C079B96F912A277D0BEB70C6EF43
B18272431F91B8EA9CE43CB1670DE71886BC18D419F24E7D6F53BC1E9C2BFCC7
ED2059053B7D4B10EFC8394EE8F0C8504B9086609FFC1EEC83BB56758436A609
3935C9AD1C2E83DBD6AD1C9F12099295F38491BC635E44F7CB7EC76E8B58BEE2
F51A1DD46538014F4E29FC598B067D9CF30192E7C0F1EDC27081CD501BA1AD37
66D04EB39EB6C52390496B640B1244D999AC949E515B300F156D1A14AE72C74F
9B4BF3C91FE6579E0A1DD15488F06C37E30E4EEB5B98BAD14E541FDA2C07067A
EB2663C41EEDFEC6FC09870C49D2C38C2EF13FE433B4092AB670DB9751BD76A9
0E2921654FF33BE61CA7707EDED071F9A927A37B983EBBDAFA4539A6438E26C0
4AEA61040620E3E51D38EF3BF5F985261416AD75C33C505CA64CE82103B2AF2E
61D4892C4CEB30144C53A101612F5C8410F9F4C326FE9326601497BD9F11E44E
749A04D3F386BE4E5543CB63168663D3532265F8D32B32D8402DCE5E45107FF3
133C6D422A78397813293BF2CD6170CC06EFFED9F2798B38A3426CD06ECE3618
2D11B348C8E10FB7F038ABC86DD5B9375E52A6DBDE1F6DDF4B050D7D980FA3EA
AF7EADF9B21AA9AC2C8543171FD23BEC72B3D43F94776F81B7695ED5173C9516
97615CD53EC343C11E620083C4817CD43B1EDB179560C9DF5FE0E46EF57859EC
4E3E307C1B73D92B41C75C58B361137C2A878E540A07D9E50E9DE7F1ADBFC59F
D990DB60A1B058BAA30A21C0FAAC8D0AAA25EBCB2F369E32C7E50A4654EDEB9C
D8676CF7767305CACA53903867AB415CB6C31B4220CA2E449BC2817B1F5B4DE5
8E13A781D1686ADBDDE1179E698423B4F1BA7B0F9544961946233BFB65EE9BA2
7729591D18B0B2B0E8E8AD6232AE20D6FBE55A84931A1C0987F4BAD842922794
D6B6F9B7CEFC63F3445F4839496F01F7775296858226450A01D02E986189012F
5925C5DC14AF3391B68DEE20F853903F755911A900FED6EDE2CB5661475E1A12
F46B920ED4CA54870BC339A9D5870507907507ED492B8DC2BAD472111D891F9C
96DA5F664F415612B53614ABD1934F59AA847FE7FDA469611D9D4D5B8906DA9E
BA966096FABBC8C8E5F626CA8E92EB02FBABAA43DC0AA11970D6FFB3B06D217C
5CAEB9219C006F378B712A5BE446EE0BA4D912E005E4823F9EA8E3A8294D816A
B0B3D12FBF3ACFC1F41B7707ECA0EA73E1EA898426DAC13E567426DB04D9E02E
D93D0844463C507F386ACAA06BA208FEB6872FD400EBBC519A78856099209B9C
E5CAABAAD46A94D8933F3CD369E7EF9F367C1932A115DEADBFC3CDD927EF1D8E
8617C8947F40B2A55E645B6137D19F592610F9D20F5FA45FB77790DDF5573EF7
6D0F789274C1929A4A45A6E9B5372BFA5DCB4B9E953E0AA31E63F198FC6F7417
DBA9B3CF6D6F6131FC0A0E1B4FB45EB8EA17F788A777287092B6AD298A509861
F86B9163FEB5A98EFFB04E46A03F6CD5394FA5508EC4D6FFD0C03FE62CBC99C0
E02D1CC26702E68F7906991C23ACF37034D1BF7A440F870DA4B075138C18CA39
161E36F0735DBB56FE1FC81235CA6DDBF5E34AE3F67B171A47F0C4080D625CCC
98CBE4F4D4A3371A4C2F744079F0AAFD013E430C636119506F3AB94FDAA26C1D
4771844C6D0585F8CB68083E1E18979CFE485F23D613AEECFBA6A7980C1BFE78
F822477F106949069FDDD2D4AB5067D5EE8F06D4E85F8EAAE39370170825BD60
7CF65D9604F020FE8FD77D8301513C9BF8DF913B729D16C30762DA6AB4EB29DF
38C5B53DDE24E644293E38DF4814A42ED7E77758279A36A14514BD26F04034A5
B44A88180F813753B419289DE843C7654B788E361A0BC8BD0437CA7F9663DFE2
8514B46CCA0E57EB2299A80DA0D7952034AF483D4D158BE14FCCFDE6084B9F14
026F0646FB715E15A5B244B294B5D9B2843FEAD8C96C849CB08A5A7FBE648A8D
2F3ABE22A9A257955E74F8AB2426134C9C56E6C9F6A83C65526780FE1F4A15EE
ED515622A8EF02A7D10E4716AF17BB14422C329AE0BA43FFC16F6966C8D2EC37
F4B025E2709855D074E7F2E2A650C0C690BC84861BE3814E078B46A749DA34F0
41096799CD79D72A07B5644720D90FACD7EC6004955165076E6C2878A8F4AF5E
70B13F6F6CA317C1A7351FD1354E639B90933AAA733CC8ECE6D689B0A17D762E
A2F59551E03B0A15277EE0BB74FF33C226971884A2540043B1C4EE64CEDC5831
7A06216AAA4DD8371686AFFEE819C2641A92C837400FA677D32B6563608ED2BD
59215EB8B756F102BB9B5651A8B4AEEED926F889FE9C667072530AF552EB6B87
7B917917FE823AA0D0E221A075F130F1F1D2030110741A5DECEC84D260AA0BA7
37E27EFD948F6540A930BFE08EC57CE103EB4698A8F484DBBB7C57171F5C72D1
A178EC12E8AA489CE6B0ED6BBEABD452F927C2308C96B3EDF7AC484A6798512F
B334D5C278F0853C03D7366535BB783D29DB92310C46CA1A20EAC8F92D7C614F
ED0C71D5E48CAE97BD823C0576111D90C98206E38D49AF3C0128B03786BB3EAF
B757FBC0CD08640C77A1A62B42A26FA75EC588605732F3CE021A2D8761AA73AD
2E9B8115F2BD0997906704E49C9535027BCD8D64AC7F49AD3F61B4078D6097D8
F86FDE4E1340746F78B8A490C950FF790084852D74EAF5D173E21ED3A05C0EA4
32E7CAC0D52F842A6A6021939DF51ADF85A2431697737A05DEAADC6FC529AD6F
4C749DFBE48BF3D3FBEC28F7CB55A617CC9310491DB643A99D22AD65B7BF32BD
714A8F491E280024DC007B6A166E717D41646D83D4055C412E109C7A2A808449
F44D04C8F05A2A14B236568043D0E4A1F25D25149B2F24EDE00B110EE28DAFF7
F66860D0038F6DAAC438A94FC018D8E11AFBFE4982F679177325A319799F1223
3BD5E743EE91D52F97832A2730DB38E1CC0E55B4446473DE6C8C6BA0910C55CC
39B53E6F9E5DE2D1F66C28E1A263D7E0635FC8F0D36203B45F50733ADC859670
06BA5FCCD1ED01FACE7CBA94041CFF9EEE540AF8281083C9D346F0B3F1510C2C
5F732454AAA547123C8464B936B274809B91FAD17311096BB16BDA1FE2534594
26680DCAD7A706F7F21049900A5E0B84C0174E6A07E30BC1D35EAC6478471374
248225A630C8932DC4D78FBAE58DC0B5EA705425D2DA4E030C606D4391EA7737
0AA8F41315049B7C45C8E09198835768092105B7DC4DC91CF778CCE8F9CFA84D
93BBCBA134ACF9541BA4CD3A2F9A34E07E18F4E34BFF594F18388BB171D097CA
CA9D12241F2AFA3A9044DAD4334BAD9F31AE606FFD42B435D380A8F5B79B9C07
331C81DF51FBC45BE43685B0144AFDC37E462384EB3F3FCD499456FBEC3198CA
758ECF7BCBAA7E81E8A25A16DCFD325D6FAAC3C40D75400D081CC77E4AF77EC3
CF90D6DA156AF59B3F56F77FE8B4A8389EC4F0EF5A35DE194AF57E80951299EC
D11A6672ED72EE73A87E34FDBE500BE84FC3B3BEB53C0EFB3538CE60A9C87565
CFBFE7B34C33EB313E70DC56F0420DC2DB48D0A84992227C15BF212DA17E38C3
39CAF82E19413C41B247F3F1958A6F3EBF56A72088658E5AE6F63445CBEFF5A2
85ADC713556EE5EAC1C1EADCE7ADE4B124066018C9FA670F918BE5FD3881744B
0B054924CFCD5FEF5CBBC3371BF4BF97B49109DA6AA4E0CB4FC44D77E4B1D174
ACB64E03AD9ACD405BFCDA21A67FD93F94AF98E5419B2CE491EEAE8300F1C779
E91313E45F5C577227AA68C190C515F03F5FA40231131A00DC2A4E2EE4A96379
C955E449D392300CC4933DBFC87ABEAF2BFDC1952C66A1019319E3096FD8989F
C5C093A824E2444DDFCF56B4E01B6C1FDF53752834D5A2C6C067636A69B1AF18
796B7FCACC91004D88E18F47386DA5CB8F74B0F8CC6425C53A225980348E17FC
AA33467C0DA4A116B27982A56F679D65D6F7150D631E0B79DE3D43555647491E
885469725CF356762F01779382436D7B71E52E4114AA63290F10C98C763E33CF
BCEC9A2D13D426B95F0EF50225E2713EB76CC6A0884C2C17A7CD431BB67BA59D
8EB7A00B5A38964AD9FC71490ADD5F6984439DBD3A74F8C81E8069DD79D334CE
C8DC72CAED72650F89E7E0B1538C5D0663893BA84327B703B9E085C7AB14FB9B
BB34F4FD98DC6F8448F94BC4FA4D79096233696F227D484474B662BDB92283D5
32C9C58BD758A38CD30BDDB12C5140A1BC75978A0E06993B665F73F8A8842787
A468FA39B093E77CA039E7E4A5E564127843782BD29EFD30AFFB67B389F60215
982BC114D1424B79CD0A78625F4DB4994DC7A93F2229F0B332D68E480241B347
367B30AFDFD12CF23A02FAAB0C28D081F1DD6DC2C82D88B0BF013AEBBDBE4F64
3EE587CAC33FC9B0AC672EB697C2CE8E67FFB64DAFA43E89D6C65BA6C75B25F4
F2437B478FCCB744CD55A2E1DAE7C5AEB7FB80FEC1583A62617891054C2BA289
17B2E6A89F75F3E090F96003095CB6A11FD2037D5FD25FA65D96A214E3614CC6
863D1A6917E6488BF7469089612BC578D3C53A72C74A4E2A74104804F9EFE932
221CAB88ADE825B479683F94365AB74A10D01641E1517DBE8FB1B1F9641D6053
7037635059D442FBC209C1C68063DAB0E8784A5B2BD9929C22B3AA08B065E344
4FC2C65B6338007257446107F7D88608108350947148EF66A0139AD4F6CA1AC2
4273481FBD4D0508C37B4553ECE439CBF8178126E4FA8ABB03A1C1379F82940A
CFC9653AFB7AA3B19AADA1F19A4A6CA81640BE7C3CC839B6E14230F4B02D7170
0B17E52CCD1DA3CBD13B129F1FBAEDF6DAEFA530A835479D3FC7623589A42438
2D8DDB7C15FE2D9C0AA88D7A7556309D42531E3E57206DEA6C7ADF134CA24FD1
6A1D1066A9D8C620BDC0F22D5DCAB19AF034CE96F9F3A2E9A8E1EC386BB249CF
5A630EB493CB50484FE730C540D33E727B2934B6F24411F968716E5FD9925630
5EF1BEE4E67E419842CB112A906FF42C0BFCEE123D08D4441924CC860D4D43F5
916403176768AA4BF95D89D80CC18720DDD557102050E96BA9675D0867ABFB78
EEE5377E85414898EFE6974D359CF468606EB81D3C4B6C268F7FB5833C960D1A
81D47C3DBCB7A16C178F50C5155EF29F5E817F704342146F9744ECD7A5AE0AAB
0BF85B190D2DCCB4FAFD84E650CF6A01D38E141CEC8B8262F1E2097514068D87
E6C0B31EA0DBFED0EC4599BB37C86B3D39704CE9E37D50869055DFE6E6478470
ABFDECC14485B93E93F5698B571A023F50638D98591C649330FAC3A1CB71BC1C
FC9E4020BD19276C9E536DE56F6D3C578E85ECB31C837EEDD00FDFF3EECF3EDB
A686114B6B8FBA9A9B1EA948B9E5775FCE5AEB0F85D102045D5F93D1A9C9B08D
902ACD8AEDB56883692C47680AA5D521982474F4FBA98A405B6988ADD81180F5
CF28ACFEE7F583F01014F42C1AB7897DDBA70762B57F8AABD3F4DCF6A463EE1D
3CAB66A11498104464EDF535FB5C14DB4A44C1F3489647FAFF32742A0E44B6D6
9866718F4A063A676691C34E633A1794893C96F8D903B7C7EBBE81AA86B63317
2566931F05FF461339D47F8521941D6302DBE6635CE50ACFED8F1783C421261B
D6C6CB41126994E649A78C27A3B3F9DC9186237B6E5EF52043FF4BD63D94048C
7CFE78B89FF1EBF6CA6228F798245660D7D0F3B3E0B5284948B072EDDBE949D5
8AFA9C0ED975D2BF9FEE69E7E58511EC1E2A0881F1D9F83FBE894965FCEE7FCC
749807F1FC84A0A07812AD0011A247582DF4E47A8F037E7C4754B3AD5B5B9A1D
15A301EC81DCCF37F223A2BC1944DA3D5F2D0273596AEC62D26791F231B9E2E8
1213E3FC248E61545D33C5758410A77BE4665A4BBA51858050F4C87553167DDD
211FF951E6883785DD1B1942F3C7A935F3EDB7730C867B2ED2D47A478E036763
B01E53DAAF2C8BBAF34247921119735B5163F254AA68F39843B08D99870E28CC
322A4D8600C5E142E4940A616DEC855EB2AC38BE3AFD7CE7D53D17CBCF754838
7921F5A3F9234B985E86EC63878694475933BB6BE0DF4DD71F3253730ADCBC35
8F5CE9D58FC67740C5FE7DD8C2B63772FE198415AEC77CB9C6A476CB60B2E52C
AC9DBAFEAAC78612E0F6A94521B7FD85BC21C305ADA114AA3376B02856A9BDD8
37F6C2FD5D753B7FB10D50417765D6BCEB02A65AEAB5DA0B575339DAAADD7AB8
CC92451425D80E2E58B3746A6621FE44185F93CB5A57FC89D94BED9769916C9F
CD34D40BD557911288978AB9D9FB52F42AE593F6C83BDC7B91586DB2F303E56C
4586B2EECC30236B02DA4F780DE2D741466C507DA5BBB97455CEF1B3BE829BDB
400745564C17EBCB3A206C2D71068F04A8076D930D9B6AE2D6AFD9DFB85B34F5
B1F8666B9F92853B4BE4D976625D26096ED98C849468D0350732408473E4701C
50FB10A9F2D32FFC1881861A7681A9800188C1FF255C45C5625D3C7EE0F287BD
D0C637475C4C86320C7D06404797FAF1ECB174DE2D608CD8B09D63B134DADD34
73977DD1E4852858E1B5D9874828E5F3F41DE446C3AFD674252280F1663F95E8
208AA0494F342866D048C667C28B020D4873372E5E25412C364E8D66FF93D27E
75B0F205BBD6DEB54AF9A9486C0517461A30B5C5FCF3C7F151AF0751ADF68088
3E6F01DAF3ADB696899DFCDDF55BC7CC877C2D67B519FF5F055E4E9D0DF03D40
CEA90A5152FFEE5BC3CDE8BC97D8670FAEFA6A10FBFEF59D6920AA79940E5CE7
E9F657A226F30D9F69ACDD20743A33F38BCD76F632548DFD06E66EDE64988A66
3E46BACE7FD9A42C35A69B272A0611F8DED0BE07D6B7C70B152B2A8B302A6414
9B8B89AC2667EB06D4AC8FE93FC515E599FE9CD17B66226CCA91D880DA1FA2FE
D9A545408898738536561A941706D907D172B93047562F35A0CEA0ACE846E8D3
85C6735DA664EC2324BADF89FB5B288B3AAEFC1FD7539285B1E2AAEC6F04FEB5
21040B38D49FE55B901D0342B286FE68D24A0A910E4D4AF7B06B4847CBDA76A3
237E8DE6387C5E515E4A5E643C8DBAB6C773B4E3AEF6ACC4C0E616A2C021E1A3
F873C57EF8269FCEC4543F4C76D66897C9ECFBCCB9EF8F6EBB18224CD836F513
F29D47EFEF9CBCA96428D1DAB2820735653ECA5447012FFC5D87963D55DCDE6D
83529CF0DC59022084A0441858A4DDEEBBD494BCA887142422AC073E1472D775
6576E72AF0A395DD894F2D1F747EE5943AED29D6F9FA2AB547270B96B7680BAB
0698F932D7EC189F3E2BBAE3CAF13156F7223031438A18FCEFCDAD6D9E6DAB1B
CE5250E12295107F0FED0F41776378E681E69E27E70DBC9C56C7DB23DECCC19F
442CE799B0F19BBACC74C8E545510729C942781F7E24290A0CB4CA068E9D52D6
0B0A88234EC517C0BAF9A158120AEDA2F428BB4D0A6FA1DE4C23D936E17818D8
59ADFD5C7BA880A7EC8D9E87304E070C23ABA383CC083B4B34515F78B2744026
51932E33DDD8867C35CA1D17FA7FEB092226C35E8D770C317379DD8A2F42508B
13C931DF78BC38A63EADE982D4F95C21CA4E200E83B816F536D5B0666685ABC1
C5E63088E7C1A1C940E463C1FE3F5AB3EA300FBC345FDCFF02B82068D8E1CD89
CB1E75B9D1BE58C059F9416ED5948CE9BB20102F72E5986312938C15FACDAA4F
F641B659F53071D90B511A137914A797B53A17F7CA014704C7C6A8BC314A71B2
7BD39C6C846DED23B589D131D5C07B39638BF5D03563405CCC9E756BFE093EBA
1AD355B2CE95A8A200B31EA5BDC18608AC8A1EE43835AEB5BCC240AF37FF1439
4FB5712B2E377B11EF9DF5E75C3A72E0202F77254DF3CCB2408689EADFA55DF9
6CCE46710728B213CF8B6A8F80B8F1A22AC2C516CAC29EF065E487C627295F22
BACCB2E2E43F6951F70DCCC758752566E9A60989AE678FDC3D19869C5822940F
F0891DD64B2EEC6A77F862B455F9D027D637A3AF462D7CB4D11B5719799043BA
F1C5B8C9F533A39D7200307EFF7A6E84663ABA9F8D32A3D9A36251A6ADFEFFC6
856D1E80F22A44DD4C10FD74727F589F0D32B0020CB1FAC2FC4ADBD049B617F6
BA919F36AAC4542DCE3A28DAD63CF9E658E3FC995FFC0067571652F8DFE907C7
6EA4D813FECFA9FB8959FD556DCB1A6109742D4375F51AD0C88EA18934D5B651
7A27877FAA786A885AF306CC2077291B7C762767AFFECBB5E12392EF015B8E53
9362ECC32BA1541AC7543C87E07DE0DD071DB6713B35A427372F9BDB0317F34D
321D9665CA1F0040D4643476246852A8010848CC335E6E0BCC679108E8F070EF
9BA6F9C490C127EF3954FFA7EC2D54A092CF38AC39EFD8AC2A0FF09D22B35D47
D2DAC04E1DB2B3E9C2A1CF6C42F097480A9A201D48B76C131DF33F92CEE35CFA
D49E5EBD305C2E33F946B97A5CE4570830766C039B28D34C08485EDB5F045E58
1D5A6FAE18E186E23CCEB7894BCE828D7918B6698CE5D1B934FC4A6C34ECD6C5
40D70A76074DA980910AE5A49EE5D7EF71DA68A1248F0BFC5C8CFE0E7E1B4C45
E25DE7A63615029BB8A278B083ED28702A66AAACA0D9FA5FE3D6D5D355ABA942
1F8985D6975447DE8995D7DDAD9084B461F49D3E8E60E95FA47F446404F5D066
F9C9E143E797A06A6836E8AD756EB9F698B0687F579926A1A787FCF71DD7EEA9
9B4C6316665E99AE5BCA5ECF6D36852C033E64AB5ABD5C115632105DD43D5E68
68305B3FABA435215E9B4784C50B9DEA218D49014C14DF5405A156B47EB79328
B0F8BD02DF06A20BB36D7CF05578D8342EAD794425FE9ED280E88497F7F47A4D
9550CCF96DE5E36629C416B2CDBFA969401CD6F34CF777832A19854D600285C7
71B74CE387DE6DE3ED0A447092695AADC5C2E127EEE595728ADB4AE9B61070F0
735D53B5AD5B48731ECA09DFA538F6312E85A838D4AF882B3BEE19218D5E503A
4C9E910842175461FEFC0BD43CEA686CC9679461C44258979B05BDC4DBDE6A76
2A7C1540DF59035F8463A7BBE8345C8104518D3B252C248BEBD805C79453E2F7
2D0184C53EAF2C5D21D01AB5E29699AD96158C4BD7F8F1D7F491CA3A08D35201
98FAB676EFB05F26E54E9D6D2E90739E7A862BAB4E801C24F344C2E32D5E81A8
48AD437AFCDCBF200F6F469EA44AD31298ABBD77ECF2730CEB793B35C6E9B87F
A9782BE3A5F9D1DBE9D9B9E589DA1513B4B1AD902D10EE69DE66631EFF76370F
3E99BE894B9C4DDE1B2EECD14DA19226623D5EFEDE41EF08F5104419888F2AD9
57DBDEA6D1F76127D5387FB0A538904775631FFD3D2BEDADB08FD5C0FA60BCA2
D9F0C1AA3E7B1540357845CC9048EA2D0C3E4C08AA0B577B8D242DE9C7271D5D
C4A09B727FE2CC47E4D6D0FDA00C63DCB5E721BD6FB6AA1CD9F72D0259AEF440
619F807EBE117E0637CBAC19E0EE75661087E2313C03914349F22BDDF32D1201
34059CAA6E47FD751602B06ACC78CF7E23C21B7A478EB737B5EB1D90CF068495
84C07D095D37E0E7D78F5973E13966F63C1AC8379A9953EB4EBA2D50F6616AF2
68C77B850EF88FEF686C29FB3468B109D856EEDAF9576901A0B56BD830F887DC
E5C52117E3CC321472241CEB0EF90E3046481356583C361CEA6A569655F904CC
D5122FF4D2CDC4627C3DE83739EE6753E566F8CE3D053A16D6BBE16643A7DB55
9C794A4030405400D8F0B108FD280381F55199651A69A628EC2EA8EE46EA032A
11F4CCFA93F969BF7C57BE39AFBA360FF9632AC0CF71727B4ADD39E7AD35C76C
9ECE491CE05D68689F0CE49F6E563B43CB72648B4E6059624092C28EDF721E1A
8DBF553F85C78B6137321EDEA4976A8520335BA9279EE9F37D69E2AAE9E6637E
7B13ABB9F1C58BE8568E8A0B0E281B0B207592D5C2F0A4972071339A600F4DF1
82525400F3DD7338ECBCB52997371AE6B752CFDEA4435A250A1F2856787C5A49
6CAB7607C8BB2420594ACDE74E4CFADCC64A586F7A6CD7864D20E262B0875672
3AAB7B7C07F1CC744C280F826760D9563814C36AA9A059E909AF6D80E58F6938
A35C5BD193444F4B487460DB8E41FEC2E7D1A69297798FDA70890D33F68A04D3
3871107A2459D0C58F43117C4A0145A48768835154410CFD979EE34C6DFC3E89
A9BA2FE67C5C17B0D6C7A5348A5F13061E46EEF670AFCE34C0359EB1559FD0D3
7BF505AF8918DA6168C0E6894C772EF68085DE406C839C0EB5FBE8225B48D0A4
7375AE02723AF127C7706EED7E7E00CE047343C745CBEEF92AF0EDD7BE509071
7BA8F0171A6F5FDE25D3748BB80F070DE0B4F2A2A13C27F547C255B5450B64FB
56926C71BDFFDC078DECD53802B1638D18167957BB9DA74BC82FBB766A0F3B97
9ED15FC33ACD0B01331645C0EA34CD7E29B3DB6684E66FE70F9729426EE4C8B9
9646BCFD73952860A8C04CDE017C89CF4837CFE0BCEA81B4CA5920DBE94107E5
DDE839C8286AE6A9C0E952B3439740C482013C337772D9BBEB0F1B9FB614E42F
CCC001FA0114CDCA48982CADD1BA4CF81D86F3C4895AB98F709F5E0BA1681547
DFC8FDC90B24432F4C7DACB2471B325735005E92587DD9A0A7765A16C25C29B9
5611AC8AAC3E451292685A7A62FB893680109CDC6EBA3136F82C26E6B1D74382
5C63839B2777AC51738B08A8F7D2C898292E5BE41A2709E640670E633BCD0FBD
8F44920B31EEAC106DCECB7CD569CD103C7972E203907B14605ACC018C3418BD
B264E553184F97BB964B2112644F38994B42413071F9C0DECCA2DD8F53D394B4
223E383A5ED370323E811011C0F9515EFFCD2081A2240DF03D81655FC296641A
DB93B6738C0043153CF4D2966D014E78B19D7A4F47C6A696D76B6046E544AEE4
96B90DD628481C2E4CD5BC5104135C4420E7BE523E9FEF8D200D3BE7AE546693
B65F7C24208C7AADE37A48576B2C15202C4FA73EB0264C219E2BAAC1FE1D29E2
87DEB698AC02559E66978A0FADAD74EFF87C94D3D25FE9D250C4E4A9FCFB45A4
AB5784328CDC82BC71CBC06E8F33344A02CE3961F2EEDE81DFD6AD9056D398A5
CF0BDB326F93F95D87EAC50CF94D6DC5EB603CF671CF0452ED8541D7B027848E
029F43B8C5D7A8F05E4037809AD7ABCE38D649F247B801A359D253C1720CB020
6EC8909AED5C59FB9B69AEE266FFF32ED39D7964CBF45FC898765B45A66B5D06
B1F20FA5FEE99664B43CF006BC8305AD88B86337DBADFF3A5753BBE3305C920F
81D9CCC041A9BD0B5BC88FEBBE0CE266F5B06B8022D1B2D9851376D5EC6216CB
8BFE49D0008F5BEE20362CEDA519E7F9A46C326BF2F46C39300FF57B51810270
FA6AB5B166EF24844313ED21F33CD2ABCCBF98F90D8A7E3871444B38C7E3D4C4
DAEEB552062BFA4127992885CC93753F7CFB75A9BDA4845714B3BF55162D50A5
2F66546E883A1AFE2773253A8C9B7CFB565E644658989BB9CD2261A6A426E0CE
046897EFEB89651AD159CB2CE1F65C999559823ACD1314500313A4EAF432BD4A
8EFB214F4DB1A23BC4418DE48DAD9020980DEBEEC05F0376FE1661C911FE7A3D
25F7557AE1981BC8E8F714DCD93B808686202C371573957842EE3265A1C68902
AFB840570E6ACE181258C67237745F4ED6BF9A4C9CE10CBF3D9658598B28C8CD
B901CDADBF93503C7471287E373FC35CA6B5F503043C4294CEE3CE4433C8A1C3
CD1E9110C81BD060F57AB7354384E58B9D130F5ADFCB372374A917ED1D0F9F1F
498A3AD4000E9FFF5B67B1BE25DA34D4D9D8B8F7E69A44735ADF573F63CC0760
4C67EF9361015FD1226893DDA66728518869419AC4550EC3F97D251C2E44188C
7D0402B4D2C2D26624D0B8C130A02477925A28D4F65193DAFED21AF818426559
6AE20D0530BCA27E73853C2F00B3F6E02412E55EF026A7932852F2504AEF326B
7B4538E3A0709B0275C283700C28D0CCEEE8110459E0970189EA97894795539A
71C679B3EE17EBB88144D3614C3AE062B5F3928F71FF47F4F62D1F26094175E4
EDE95EF5F8E949553AEE9A4B965CB39276FD4164D3A1CFF497C47999C7DD749B
23696E918B2A56CB8546D60140FE150687DD0847B8CE036075B27804D8C75BFE
14867C9BE3A7C78ED604CC928A0958A220E5336418509302DDA70800D521F8FB
5E5DFD42422C7A4AE8413042F42E85F6405E7464EB216ACB74891C824D52BF73
A079078E99A88929674792486F3DFE3A0983E708E50C92ECBAFF5A7B04CF79EA
F2D6772E87BBFB375EB7C70DC9BC28CDA6F2E38118F71A14385DC40D9118C9BA
EA111DC754FBEF766BF7E4F614D8726736BCF086415B3B9F62B0377952E0513F
9C121EC2C5DB7F75DE1B0CBB24DFCE3628D79ADAF84400606435EDDFB996D6F8
53DB3E239B0D3FBC7D9F2B3AAFBE0DC8150B775B98E98A9B91CFBD7732E15CFE
ABAE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A00DE74E4990135B9FCF930B9549CFAA482EEA3C612BF66FF5E4C2F6A0
304CC43B7F56F6DF973313CA7F2D88D302245F7E76FA135E6117720C4A8B1DA1
D96939FEC52F91FBD8A43CE01A409F0F69AC3680957CA87A11C698B9776B6AAC
AD3BD33DE9ECAC8C5F45C1543307B5F7DB4843FDA77BDD20AC8BFEA0C50552DC
B5A315EE27CFD8827E06B8BFCEDCB21F577C2F98765A250D47007DE10F612115
F1B7F5BD1FB5B5C7559C7223C22EB80C462D64503B8401A14DDD81FF191F0356
40EF885679B521B76117B2792AE1CCFDFFDA1ED8F34242D4167552D4AAFA137E
9F7AC12E0CBF6D5FA8903BFA43F47098276538E94290D04E744F97B9AFAA138F
6ED0F8A363A75940940BCC2559C9FB1A2B5A78470FF6714ED29F5AB1D3D809BB
F5433C3456594E0E763F09C4AFA698F87D8329A754C766642BDE082D84318EF8
C69E46AF9937B76AD069B7A94A2EBA1C3DAAA9B441F5418A96174CD8E512F168
38FB818435EA45F5D12E235B7DA19BF89D1010D80439FDE2068615A07BAFB584
AE787A4BF35F7E9FB22225301877C43DD1CCDCD59AE88C932FBC5A9A807647F5
499483B36D867C96AB8B2E4A79D4C7B3B18E45A508435AD4AC4B714A019FC268
1CC2FE6D244C74E04CD650334BEAD3870305C2E64D90F3AE6FB837E5B9D0373E
7583F005CA78115EE6BADFE86406C01200A41BA703B37E6651ADEFCFF686657B
C41FCD1267391E12D7309D4577369160CA47D16346DA18509508FAD6CC4BE741
2B1440363DDFCC96C929F555875CE8F81AD4AB1F6C1BF62C35848304E0BD2B64
E5DF16334B1EAAE1496E69E9EB591A0C3AAE949CC55519F96B1B3D8D4DEC2282
132B3F58CF223AE904DDDB29A23B7B34747864BD3DB598248913E75D41B3029C
853C71B35A28FFB385051B0C8AB745B189FC6CAABA249CD1248F911CBA38E9E3
3FDBABF9C626C99F724461C6EA55984565CCA8CB5233501520DD2D2A674B8354
7C8DC2BF2D633DD92D6C91D6EDDB968DA3C45563FA2D2B21240AC2D30AA7FDF2
9CE9CBE79211C8F91816FD3E182A4694BED8738648ABC6D6DCFDC873525DD6A8
0AC00CD1922C301EDD96786DE4E11D29949DB4C1EDC06358F3FF444250709EAD
2B2763D9AD0A65FD9EF0CEFDD4B7B6CF3B1B55231ECFE4E80966BBE5BCD683A8
487BF1E5B348AFE83AD34C61EEA243957B646F3CD1E8D55FF37F42DE93678E01
2B6E53A69085B0E63B945F6F548355CE7CE3E4D66FDA6BD49694B7A2A7614B3A
053654020BEA852CAF6897483550CDF2AEBA62BDE801C43668041DD42C81BDE1
D31D7D1D513D969F79DCF1E4F46B98DAC923BA35A30A3665A1DA536B8FD603EE
D230F6520C8B9197EE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 28 /tau put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC894009AAE9A490E3B99E03E117A041A381B8DACFFF20F6E5F293B58B
0FAA86F132B8B59D102722B3E98E12F11EBC101AAE666271C93B6F7CF1AFE94B
5826703D754B09055EBE0A53E46EF9829C7181974A374E6AD658B17D89EB88D1
A80EF734BE6F686CCA917AA3AEF80A216B5E13C3626F2BE0093D2826CE4B3C25
90E3189335FC4F3BDAA0F15652CF8B32364DEE4C7FE174CA2219BF865BE7DB62
490D6C0BE2B1D2B889C0E1DAE9FC29B43AAA9C6A111C603B0ACF2AC6A7223A8A
3F13D96291D22B09F4D89777
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748073
CFFFB25D7C1188A40488A92FD2EA87A8A7DEEE9650149D167E131EBC361E6C92
2A9F532E6F7F85C21F704014374BDDEFB609E1EF72E87A7EA5AFDA938D6D0D86
F3813395B3523469EACBCE3AE0A271812228B8CF856DBF900704EB607E7A2698
08931B771ED1250E3866E88FC69A1214C724F830BDE997294721645F61FAB360
7C3B3F9EAA0BEA3074AD5A6EC578767BBE4F591737316A4F657DBDF2BDCB627D
C99B501F212C04DDCF148251E92337D102BDF46C4F598030F2E7121F6A610D64
0FC7E512A28BF6CA72CCEFB6270BE052F658087D5C67D702AEBF0B842B5B970C
C74AE8A08E28A3804934FFA3EF4A1695F578ED2A59D9EE46F33362634F975882
7B199FD078B14DAF0BFD6BD22B450926B69A090620505014FF932536CFEB7A1D
C6A7028A0ADDC43FA3076B2674E5A540B44DFFFCBF4181A86F0A4BD25C3921CD
2BA8360EFAB28614E343A4E9F8E511A3BE81417657DD2CD6783587B4DD60A9A3
E8FB1E85399BC5C251127B69C42697D8F40DE08234A7E36E96718669B1A78B7F
DC69C8BB5287F3D6EDAE7FAEE2F2A8043E9FE3DE20883AC911EB876DFB2E0C25
D8F805854E9147FE4001F1AD9BF7CB10080ABCF49DCAABA733F5985D8C87F648
4564372CC0E8DB1233ACF08D07C65F7177880587E359987313CF63EB9D3FFB26
35DD328BF8654E275440954271BCFA1AD9C73159AD6E68834E360B2E79C2752E
E1912426725A24ED006BDF5D6CE5AB4B33C724DB295EEB26F5E8DEE5B94BBF57
E976F21E87CF81405E816E296961D014627A537DFD9FCCE9470EDE21EF2BC98F
123E7D5EEEBBEF933766E3104B42792276E63BB928ED1CBBC6F5B9C32709F8FD
BDBD3EE782FA4FD49BE91395B290E712D52AFE53AECEC34E04717B87CAB6E46B
58686C8984A9BDD1DF3D9B95D34D66C279EE72E75EE44123FE1CD53846D377C4
B456779B914212E5CDCD937E40268DCB704A3B67740C9E3C2CC6E209ABE10DA3
B8F6F29D5766A482FDBFF248C0CC2C48F57E2E39E7AC729A06BC61C9997A1165
6C9EAED18B14F7C82465584E51EF9B79515FBEC893E422D4CDD23688F762757C
0FD23FFC5B86ECE49BEFE44719DC90D25B71C47A172339C61540B66090C3BC0E
BEC1EEFC57A8D71DC4B065208DD080EF2BE3CFDA357B67296B1BA24004B49936
7F9BFC51FA658C5D33EA1BAAE4AA60AAA99E4BA2EA2EB41D8C726413A1E42728
B458E05C389B2102D4F0F6063F518F4B3DAB019A4EEC3F455F8414F171FB64FE
95897FBEF48A1B122190FAD568373F9ED05AD04CC89027424F46C7B60B26E429
EEF27CB7BABD70314CE676E0681D2874A83C6197F9CD4976C1B5A53C281024E8
A6DA2B8F3FF6EA1FCA26D085B01DE0C280DDEAA649282074DFF0DE6585E5F1FD
7E876E744631E1089C770A0B56FFF2D9C43FF3E45F2EBF289E2457A3263C8905
B072F4CE5C89BEE7A792C6F1ED8796C43CDC7418ED1670BFDEFACAD0065F2693
9397F3A95D00F652B9610DD28D78E95C9C4375DA56CF82E97E8EBC912C08585E
1971325BF6F347400C9E57AD01C2DC6901C7A8626891881C4CB873FE3F09DFD6
5ED2B809288288F55B17581296567A79FBAC4AA439B97FD101F851FE199B9DA1
65EFF75330535CED6EB90E7C44F7E337B2010F8761FD84AE042C43D69E6A3026
7DBFE46592BB04903129D86C5EE37A1649CCC10C2DC42544ED16BF7A1E616392
A371A7209C437E858F3EBEDFEFFCBCCC73B2717B7753EFC26BA17D7909E4A963
7E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFBX1440
%!FontType1-1.0: SFBX1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1440, tcbx1440, labx1440, lbbx1440, lcbx1440, rxbx1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-218 -316 1652 915}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA16EADB32842B6D00C76EFC613FE56C
378A7118B0589B3EE5425457AE310AFB3829876138A59F58D965843B709A0F4F
D1AD54875BBADFC803A755669491D9E98262991B9634084E8E2BE46EF805B219
D18DE35ADE9A8DBAB7AB761864BFB6A27E5B421C32CEE4569624D9308A32B426
FCFA5CEB883444393CD7A58F9CD522BA73E17492DDABB7E00B2F6BE47F585EB7
FDDBFF33F1B5E5465287717D1580105BF3929C09EC621CEE9606EC49D7051A00
11935EE728A2FD47BFCCF00C93EE54910F77C1CB8622B9CA129D466746BFE1B0
594A9F0C785F6CA67161EA1480AD4EC6781B9CAE9536F5D3AC6D447F16821F77
AE2705279CF3DF4E1E9AED81A0CBEFBD61808E2D59AD970264A5B66D1F399DA2
55BA0AAC8EF1A1E16FD8240D577F5E00E0040EEBCC193F074FEC48DF30882551
E23D64EF84283F9640AC5F60EB1F26CDB79078AB0C0D97D1D6297D092380D4B6
6A2099F06A513A78A3C3B82A6DBD985A0DCED7150B19FA42991A3D408FF95978
15D309AACEA8C5C0AE812F50330CCBF47B4759C550D49173127DECF05D783DB0
978A366ABD3CA7D9BBB6652459A5E19F9630CE75C2BC7BDFBFE0EA3D8098CBB1
98CBE02F196C0A0C5E976DECE72778358CF8D0A79A8B5629A6322716CBFBDEE4
934E8782E716185235712845BBD03896BAABBD20256DCA63EC65837DCB8FCDB2
F7D9510BB613A61AC18E9BBC5F38A28D161353E9B1AF632B91931ACD4009C8F4
9E83ADF4A7CAEC0973D8E1E4C126654996814BF676CEEAADFDE26D82BDF7B410
843B011395D00B096DC3D60FC106735EB42BAD5C2BDE7172C018B7321E63A82A
AD27D18847CD91476517A40DEE96603CB5EF8D5CF03997EDCE29D0A9F6BE0C3D
9636F498DE4FA27632AC5B407B53F2787DF1D113F94B000D43063E2E16F431DF
3C6A7F5ED1F9FFC68F7FB8E6B627DF2E049D234AD8989A6B011753E4DBD6F4A6
1C6840DD45D01D566944AFE0AF536893B02849B46C2EE9A510A1B50B928EF40F
0DD40E215B8BBD40BB58CA2BEBD1777A11A604291E17DE65574A969021F0278F
3C22A105CE53D3DB4CA5848233A91D8856B291A7FF97F1B6024C548364EE1195
44CC5F4AF1E2367E46F058310D3B1A08671344A0D9C0254286D5C66899FB2EA6
BFB56EAF9A0B2DEBEF4034C031E0EDB2890D3E5945EF265D6DD27E4523CFCFD4
6E3EBBC2DF3943D11F3A188AC3B95B42B22848D182C8DA6CA3CA9A0EC9433AE4
A9080A7026E83223783D603659896901BEC8A125C54E03BA14937712A4E0DC4D
34675FBF8A4163D000A15642FD37D1338403D80EC239ACEDFE77E2BD4BA97185
1B152DC603F1534FB37C2F4282AF779897C3701122973255580D1839C8F771BE
90DC55515FFEFDF1E30B033E1ABE773CBC3661D002AB19585E03636FFB1955A3
5FFF59DC31336087F5159EDD4BD9828C28C5F16969A59D638F40A8A287159CF7
C8E5D8603795121827DD00C71191783059A4A9B9E5B204745C76D00205DE4649
A7A00A35324AFA8E7B0414EC999104056F3408F248973B6DEA4771EBC36F740E
18FCFA29F15AB776E8000CDE2F234B174D8B17FF27457D09F349C31F4C3BDCD9
EB78E05283C4498EB6B53BB8522D1C366FD4B613CD94A42895E4D8BC58DD3D51
A3493E9D165F3ECC15546693D9372E35F37315E6CF63B4FD224F4DD35D907DAE
068C755A7D1DCA5D48C9C466F6BDFD75AB0D39324BC14C95C4838D94157DF999
DD22E92290E6AC7243F07C85E0CE7774D56D14A7135D63DB186C9EABC234EC1C
90BD38CF875512A503C07967C68B956EEAF9E206625F7AC20D4CABDE0D614BC9
F16FE18104A7373F8820279A39E03DC0F2A4C65A27AFD8D18CC2BCFBB1AB7776
D85E4213C7D27CEDBAC9BD9FA833A2F9E4F0C5316B02FA720537B2D078A04914
32D70D1417541EA6139091304AE3CAB3BDDF12362C5E81BF78DA789AE24C1F8C
3544E0C4724D95B3F43EC47C991EA721964E9EBEFCA6F34D79C33719B9025276
D747A7468715CDC60F6EF7CB94706CE2536EB7AAFB312BEB7AF06E643EBF56A7
2088658E5AE6F63445CBEECB3D93A60D7418D0F1758078BF655B00625D18F8A4
B9CF0330C5E6A0EECBC134F48EBFD7AE5F7D3926CA6A8DD12C7DA53B2A5BA2DF
004E1C9EE005F24BF94F48BEEA0E9538A6DAF6921C5F3881436FF0EDF7693A0C
797731BBC7A2FD4637BA61AB3C46BD22E4EA8EBECCE7C7A014A22BA5AA2424D1
C7C0B46FAD51A5871398FE31DC936BE47BE7DCEFBEA1576C0730EDB15F6F232E
9C8F4A9B31248F03AA07329268F4453164A8A8DA43F3A7148BCD13A91E54ABBE
389EA863F330FE0B68B6DC10555D21EC72DE470B6199D5C77D0EDB1DF48D8E40
7F413F2F04EFA42029A4E4D84599E025F8010984FEAFE71810095C85461F0E26
0E4872E323457502743C5305D7D01844E7A88DE9C218A925B3247EE13CC02D18
CC78F0E5C6CDF3ED799819B4786D1B2FB46096A7B43CCC37D57268BA44259F70
2BC5D3CBDC9B319CB02D912D007543E7834FD4A5833CFF2ACB26A3DDA7E5B6D2
B7A0F60EAE33EBE378C0EA28694A11EAFAC9BD0312AECD3559A846990DF6F2FD
C77EE6E5274D2E530967829B3566B4525A029B70F4F099A2D1D7F775BB02422D
B0748134B6F6FA919BC7CBCD9F9983EC2F0116DA051E92348EA60512975B1B1D
F14DEF91BA3BA7BC75768F94BA236C2EFD3722D899201C1E703D35EDF9B5D346
66DCF2F45A6D2A20638125C91B3ED136B5F052F0306C60DEFA44F616DF2BFCBB
6140C6EDFC405085FFF050660F516E86720C265DF0045885A91DD6902315A998
E1548722D8471502E4E237722DBA58C97A2F5621EC6DA8FCB73FFEA7EAB05760
CCCADADD0CC427DE64A9853F0BE3B3E707CE073EE8631AD0DF0246CB9BDA71D8
6AE3131FC9786647D584035A523CA104E264A51770A7434178516DE898847F11
D14276A392AEB452ADB5D7FEFB9C0393FD09BDB65203AC151FC7EF0EE9DF6132
D3C10E3E3E999ADA042B4D5758925A0E7589A1910D15EE5CBCA7E3423B5DBE3A
FF14C2DC44F86D3899BCE5274F718632B9157AFEB1BEFCFB76FD32513EC40DD1
8B0BF45E99D272B05B8D5CC705E91644DB1EA96A22D60D332092488BA836CE40
1105AAF98F570C68316CF9BE9B548A1D0CE72227D5122D137D086858B74B0B9F
F755905EC9C439EBF9EA7E0EDB33951AAB8A19C1C03F5F794EDA2BB78E3E1A16
626EBE12124FDFD4C36F3016A66EF8130717C6B0E1C9F7328D9BEB3B257A0B0F
659F4EC8A6C20556D78242D98B9328395D87BECCBEEE85C378819BE5BCD1A1EB
74E767773F2E32BF5153AD6577AEFF50837B89D74F7872C976386C425231AC2B
8A64AFC7CDFCE15C725DF295DAA85EC736770FDF7F1358213B1B4DB2B2F16DEB
8E17D616F0F3B2E2D9AAA08EADD2C9152F81AC5AFA01DA84C0E0258366D4EBC8
68C2693C9A5DB33E1DB68E44DB7D7018B78B784B2DEBCF0EA68487B1F498304C
6EAEF04502501452D205CC7A0B42733EE2CD484E3086FAA0609C95FF30CEB3DD
66C24C5340C5C84F788724AB4F8E511D0E4B9C2EDEB167B6D04B6F0324CEF9A6
A551C2DCEF71262C9499C3D533A1F381C5C6F8D48F2D1C7AFDC0E8E96E1BCBAD
C806EADEB96170BC42EC69127F401161E37EA450E93EC6C6403DFF0AC040E46B
C71092971962D004710A83360FAB475302F6D555E6B5FE1945FBDC98BCE5F9BC
811ECFB42A49B5887AD4D12DDD7B90C227F374356AE341EF6E5AAA15FF93F953
BE284C4C920E0FD64145F006BF7BE9B239DB56C999937CEC419D331D717C541C
D4DEDE33DCFB854580C4E2F368DD836DE55A6DF41DAA838EAD58552A4E9644F4
CD162D22F4F0FFEAAD16CF75E9C06B9D593022C5BE06FA75C5FA64DA805A859D
2D5137F330162DF7325A9498EA3B622322C457EC6685BB5F8FDC46F8C48F4DDA
1A1A2774E6819F68133C18EAEFA24E7BD24DE5DF820F1C4993636C03E483A80D
47A482693085432B5CF4EDAFEF5C81AF3DF3C8C65321DD0ADD7ADCED301204E3
5E4750FB3E774173D2177B26A5B10AA17501D61827E6C4280377C63A1FB904D6
DE0A4112CB06F622E8D4903ED1D74FC27BA16562A7202BEF1FB6302D4DEEEFEC
BF8FB030C00192BE2C496CB4EFE7F119AFB4E31B4E6C689BB54227FD7BC1FB58
7D0FC2CE22C34CF790551D1C46AFE2BF649E636ABE466E454D0283F75C864A8B
586C367D2D1DD78D1B7A61C739AA118EDA902C66A1019319E3096FD8989FC5C0
93A821591D821A55634B99CD57715540308E63E0B51D40B74A84403CBB0D9E99
55638DE8B7B2551639DCA89F516CFC27CC18C1C11B96F07B786E92070292F9EA
CAA9DB8D45F1E9CEEA41EB958A3F267721D6D2D9BA1B570EC5B7EF5DDDEC750F
2C235D47F459F299DC7B31FEF7202E3C076475AC946C9E0ED1045EA4A285DE69
89BD2AE8EA6BF831DB6A5684BE064884E525CA3D66A9AC72E524ACA65CE48003
81200CC97A0D090E5F37B5BBAB329517BD66D9AC5B01B2B01B289D953CEDE6D9
9892C5455639BDC87A6DB0C15641C2C93B622123907B4E9050E513A9FAFE2DA3
6196DC83D1DBEC62F3B1DCFC01BDDB016ADC9E9E466F0258ADBA095A1C3BAF25
E1DCCACD0752B04CDD6E6D89DD6214F6DAC9E03D72DD68DEFD049E025FDF37A2
92E60D07D7D0A3D66EBF753DB70B2A2134A7F1095E43D7539DD88E1861775182
A02A3BE10649EF6C74CEA7D775CDE5878D7C349F6A296DAE87D1C44A580F7A51
0AB0FE18B2F8F9245A74F4E39998D69F8AEA936CCBEF4183749AFCB1DBBAC85A
8C373E00DA7F4B100C6B2140743993FD1C2C03E9D5A5056D778888DC511966A4
FD7DDA84F1DB93DD6C37FFAC135DFA4B651FBE6D0BD114581921663D3845F28C
88BB102545A41129B5EFA4F5C59E4FBB5779A961763DB019BDEA41F32B1C7DED
1A175583790C245396EC83A61C715C77764725226B79D2B9171470D2497612D3
82FB91E2E37FBF1F1E65FF2067BA679F0E255E2BEBD1895D65A9226E25B5EC0B
1550052C33033446386E811285642534A58D7FC580C052DCC6C4F9081FF94311
332AAE28B23DFCCFF9B1C705C18D993A8701DEC9254C93CD40477F32573BC70C
FF88D2DAB89BBF6CD2C9BA57D81C9F625DF20CE988491CA69B87CF2CCFA3B394
366A43938D178311559EAC37DA1CADABBBEF72842C8A882CF268A59BF776D381
F7CB84087024ED123A69EDDA48A63862399C265011A5EE53295494C3C1006602
8CFACCA0CD98EB6581A50B6A672B32280455D7CCC87ECAADE11CA795321CFCB6
F3176B8003D24BBFA7E2D95FA1D83886BBEB6BD4FEAC5861C134080D23859E73
88FFDAD128AF83001E8A3C6E1D1301EDE8F3738DCA60ADFA539202BDDD3CA406
53D35213E3F29CD7B63E41AFE5DA440F8F4DF34962C7154C219881ED6CCA71B4
02F789C9F21F48CC7B155976DE96C45622B48BEC713A3D1DAF6E554B3B93C0AA
FA7B4956151DD2B3CBC2A482BE556600A300B8CF4ACD3DB58C030D558567A043
93E462A675AD5B452603BE89E0881584045E4AA5814897382D39C4AC19482CA6
8151B2A144319FBA9047EAC6E9C72C65E6F1E3C7CCD144507CFCBF8C6BB4F30B
4D7F94F4B4DD1AAB6C22FC9BC6BEF927062C125BB08B9A0906330212957B2F48
90C59B0AD3A5156D364E315E7A1F7BC58DB569B44E4D9F3F26C231610AB97943
AA1701BA63E0B1937ADDAA6406ED2DDC507FF713ACAAE06FF9882F2D19862612
DCF6EED1968B1B5580ECEC39C023DD8E36C09EE3A882D4BBA1DFD8A1373B617E
06110E9130819D2B39AFA579F91F534B15A834358E78AB4F18684E8807449B0E
D3852DB08089F310D5A5422F4965610F41824C215705C661301728B3BB5FC07A
1B70FBEAED00D0B50F39CF6B65288C973DFF2C16E9F72E32DDE3E09D2FE20FEE
EF35A0012360EC5FF4431507F5C2E7376B7BF06321F4026AADC6D4D2EB118A6B
C86894E6FE4C3581F7F1AD020DCBBA56F4C85AE352E16B99FB510447671296EB
596CDE93AA9011418E1D967FAF84E781AC9679B557795DF834956C7787AC8022
3FBED4CF2B0DD20812D5156D12DE4CCE8D16FC14B3547425E7AAEDFB19660633
21F5AEC8728A5DFA08D11A842E751568F5FE3550F5DC4A4776D464A72D3548C5
EA91431758C0A49C285C168DF1F6355DBCCFF4DC74326140172594A8DAF57749
A925E0B642DD23361422543FFCF173033D885B728A4482EF4BB9665C6BE6BA41
20BA817AB49AF22EB181BECE6EB1AE24186EBBB899F1F37F71930C558AAAC440
BD7E5EAA1D903FB2EA670BA7EAC1355C7A8D2EB1B53941ADCC68DD87D99A05DB
2F046C66FB961F688B86032B8214A2A47DFF9A7F01AF160394A46126302277F7
0BE7A54E790A8A3FDBF8F1AC201B5326F375B663D94D7A378CF26E8435C009AE
F7187295EBD56063FDCC47019E592FDA71018123551C2754F028076CF4C4A6CC
D970F4E42668993ADB0DA182DC7C205EE8BABCC4D3B59376AC64AE71ED4545B0
7C52EDBBC017889F07411C31D0F209FAD8DC3D2C2FAD975C89DEAB698713943E
2688FD5325563C83BC69D6272A06B996C5E600D56B45FF9A2DB58AEB30B5BBD8
541D72B9E0A4FD56753BC9B1D39A97CB6F6AD8C9245091DCD797FC40EDF842D4
5EB51F2BB650646F5762B611BBE6BA06A6EB5592F50CBE13B4F1153E4E1481F0
AB17909E57392327D1AEE28ED948BEA12041F7030D2A06C44FD267F5E2E6B990
4BA52EE91D736A70CC3AC65ED5D5F2ECA92F53611145CEAEE80B1BD550174251
691E4207D5936E75D5EE119A661DDA657E173A4BD95F159BAF2503A367185007
843A5E0713DA04D41802D11CD481B810BD1AE9ECA2E6CC0DA85CB0C1C43A4195
6A3D3D6C518F6D29B4BDB422028061F5D309369B7B57A42A708D1915DCAC06E1
FAEC06D3469E715E26AE66082B43864A50D37AB6422DBB8D45174D5852CA2476
69F6392AD03BCD9CCFEF19336B13B81B363A7D885A9D369A03891A8B57D8DB83
92057BC23823BD70728FBBC14BB74758837ECB82DE000F578267137866C865F4
E8A0F9E54476B4CA350E9E9CB057A5DEB2A5CEF8D20EDED866D4FFE126BC50BB
E9FA74AA1592B2C3EB3FE52560B917F882EAA6250715B471F275FC0E78C74692
1E271D7325CA6B611F54314D89160570375556076EE6076E5212A2A2F1B60EED
FDC6CB8AB486471C3624FEB31005B8469BF86FDBC9BC4015422C6DA9D1EB5496
889FAF06F8D889AF6148B60BCC727F96C0364C69DFC0AA6D07D1BA23B4C55EFB
EBA5AF7C041B52A0FAED2A6CB461A9D43E9A7032B94E346BF811FEC16BFCF698
B77B184833342D0455A8BBED700E8131D312A1EE480B27EA9F8F5B89C3D39C5A
CF3D4695282876EA17BE70AC6C1FADE16D67206C7D148B267890AA04689D319A
E8C4AF100F1877728F26A6C3A8A7C171FDB020040175C45F07AAB29320B06FB1
AE9705D803EC618F46871CEA2F617D7AA53F09817FAF84983CE9C3CCD3A5A6EE
68BE184143A92178834CC93E67DAF5A2346F9A9129A645176E14135487F4B408
95345FAEA6B669ACE727C3BED25D638B4023F2CB37BE4BB58A45B8254494C866
3C6823FBD4D1517A9A36ACE7B2E2E4969BC3EEE7488A9BF555A38A4FBCC99D5B
279FF0079B760BBBCAA56A6D192A347B6196B06037037E793A476F0ADE432ABC
8F6A01329B7851BAF866E2C2F7F36492D265A4207DF3561811C56D78B9884CAA
CB562DF00114EBBD583D2BAE64057FFCE317F53A07026E7CF8FE7488F9FFBF71
C893C92249FEAD7E691A200EFFF5469250FF6C1483C4520C5220D29BB99B3564
DABBFB489A5D5A107A4BE3E971FBC2B126973109E5F84F9138BC24D1268D14CB
AB5564C89DE944C25FE2E97BB45239E6711402EB039853AF473644D538258356
B01D37BBA025067980736F1E647F99018C117DF0B2BD415687124E6B1EB46F83
75C52682564A0B49C1EBD4BEC7AB7E59E35004D88ED74DC91DA2DBEAC55E2020
FAD0CEA4924DCCD155655633F02A295D7FF4006B528CC250D3B0432DF191F734
CD987E942A0D293BD7CBD846886EF1FCCD9D394C96B37CEE6C6E682930180D8F
700686C94DF87D954FF40A24FA21A2EDC0D22D26FBE34743B3DE5124EA15EDCB
CCDF3EF721E1B33DFA52C00E7E9D8209061B2554CB6D28CA946C1CAA6B8D1CAF
DD020D7B2197A39A53D62B21CDD85553D0BB8F00C312FE571AF5CED016146512
2E9BD66526CBA209B10F6E6F0B69FBCAD18682119E8EEFA75E7B89A3C9E43DA4
DDB5252D1DDF35FB1CAE496DCC75D509D55F1710BD60B0A8C79EA200616C052D
8C3C93C0F5C9580B3E2E711BB78A296B7DCE10C7173120E3049E16BFD6F46323
1A835770286A922E2757402F957A85082417215F116E539EA544B12F9375437A
32CCC5F6CB39328ED3223A6D26B84F9C47866031BE662CE741EC1BF41ACD72D8
3DB06BFEE44785B812D8B5BD126D2F0B0CBB1541C7CFF1D59BCCD4357C7643F9
5465EA98A93F94B64458508E6BEC94FD87729A9183A1607E7C413077408FEA52
31FC9E429FA7D0E5D7B310F54F82A1A3D214AE275BAEA4614C3AA51976290C34
C7B6B747685424B92917793A90FDE9DF67FFC990278420B80E8E8B721781A112
CE6675C83AF124906C1A1FBDD41C3E5180AF2DEDAD43518F2F93D96015C1FFD6
58DC96CB6C94149A3F1F73D5B23DFCA0C17CFC605B82B2D44AC5AB06A3751988
427B8502562161091B4EB20014A622150686742A06722096264722C4B617D102
03E7013043C6E54C407656EE331DD406DBFB54EF400467FAFAE29DB8D4E2E270
08CE1D6544668A511FEE990DA3A11224FED7BC881F7364E73FB4D364E1D14C3A
28497A81F868B7972CF270BBBC3F1B4162F631BCC6F890EF8B690D8D465CBCFD
4C333E2A91F00AD68C53CE64B62648553A7A28D609FB35495ED5A49C49FCD5B1
F03444A2D6531053282AE880CA1A0D2EE8C08C8A4F7A708A91B995030B1BF1C1
685FF5374BFD88728D95737188974BFEBF70AD9543A3ADBF9262DA574B7188F8
60A231FF14211B6E5AB19733BEB62F8D1691C523B6B445208E20025EBC73DC6E
CD4B3CBE21C54C87637B7175B9F288208BA01EB2D2192FBDE6EB1E0EA25D2867
874B85BA95E122E70802C43F5F549BC9FF036B9C37138121C4DB2F973E21025A
8F0420FD56C9E3D03F67B2EFE6358BBC5E5AD1C2AE645AD70F07883261095DE8
A983F2FB30C2C9CD23CFE9A01A477E2B0625D9A6EAB9405BBCC3692385DC7109
0280B0BA2916F8A6805A0970572627F63A21707DD967B3D3312638879F4A10EB
F89944E4EFFC2FB54B3E821877E4363E3D67162B98B0EE9BA9A30D2BBB00340F
E05C921096AA94493E7280D32632B2B0B608259CC88563199A78B0B510D667DC
85D022C9DDBF49940DC87B069F3B43AA13EF3D39323977970C3B22B22C5C6050
F61800C9F578302026FA323F073FB310D790A66BA0C12104F2031D0A51BB4443
6DB06B233457657C0E6ED90F98285AFDF36D368AB252A90256D81DD961C54282
A59F17B6ABB31C1F708BABA1C0C345473F80CDA52DCCE609E4E94C3F9327245F
4C460EC33D5A2EC5ED25EC385D5B226920C0B6E421E5B70ABF66CC0A584F6BCC
0F662D30889C632D5C15592D9AF30A4F755032B476D8526C88F04B17B5785482
A577F821C524114991DB61CD6B9851361DC744F48F94000FDB5AA24437978F5F
BF5CA18BAA745FD9676B935B433167DD4D47E1891480AB667E31C85732908291
B1EEE859A2E5B7D7E3E09D2FE20FEEEF35A0012360EC5FF507524304168A6009
4B8DD6181DD539CB00D0CEF1285B19EF7177396D3F67820481181E87FB9EEC06
78BB130A1CC4D8725C47D148DC463E5F69B2132E235E63005CD57098D65F3BA9
869B76BFDBB5D6035DCE5B14F0D282DD165974A8C447AFEB06E4A4AAE9DE7E48
291139D7416C049A4A61DF84FCD8AC2B83DF3F0FCB211643BACD24713CA18F34
E8B4C1C42FC495BEBAA495745652ECFA0FC17D4A08724F976D689AD1966D7C9F
A16C4142637F9A65AFB4F3783C94E3986C1F01DBF37974B4489B96769806E717
8C9A6EA3E2E6F3DF2E339944C1A81F988A6DFAF898FA1324D3CD61570ECB195B
87CA96E2E00C8325BE353083077C67B980DD72D4849AB5B717E5AAC597C3D514
037CAF2D9B1753B51FCD9AE210BF2E941E093A534D94483A58F98EC30A70A343
23D56D124F73FF91CFE520596846F52DA6CF3898D3DE82CADE349141E4BC20D6
122DF30DA0D4706EC9DBE3AFDEB3C34A51779C4F59D1047EBE0D2FBCD07A3F7F
610A57748B42B3DE731DCB114ECB13BF1DF7515CA570A1BEF3DDF1175E3273A3
216C8D481E89B0FAB607ABD3BACC79739D07181FC39871EC8653EFB4B9C8B9A0
EA2FAD585DA756D73E4D9A8A395AF413C98357760C31F80BE718E661E6286953
C83430B3EC4967EA1E6B9DC0E8AD3C4EE0034376989BEFFF3B9A7F573A621694
8D67EA6A388BF535FADB80CB26FCE9EBC0A4EBF72DD1D55E03150A34E227E052
E0F2966C76AB5051C8ADC17DE809C66A71C436D10D890EF4714C6B4237A5C893
10DCFF7AADC801637A838D254F43C08B7EC7B79464F66CE61D11C6C8D13FA5FF
F9F1BB34341B12F8E56F00673FA8F26C8A5902F5B49352F3B53341CDC8188F2C
A2F6EA9B66A842E1215286E75BD6CC5E11B3C984863DFC3B57802E694B71B195
0912004697DA8ED586320141BA36D683ADB2951887985FFA1B7A279D43F1DCC9
10B58CADB5695994BE6A1762074169263D43A02C16F67E46C2EC172858409D44
2D2BF27C2D49F005CD4403ABC39F8ABC8D9194DE7C9CE10CF560A68CE5BBE9EC
90D4EB50FF848D28E81242F2BAB2DC490CD3CC8989DC7B0106222BC7E4447566
9445A71FC409298B49DF1F338B4F57D32072924E4113632F125938C5AB9CA320
BD30EA9C76D10F521652643CB242CC43E683494C5EE74F40D475B48A28EAE9BF
BBF2A42C2ACD8A06F2994F37B3BE9D2BE3EA57460159C7BA143BDC926853197F
7BF6792C4576D24A193B4192900FBDA869DC79D8039DA68E8E537444EB069A27
678799F8DE2997DEEBEE1E09D4EC28F2ECB2674EC311B9A2CDDD2F4032E1A05E
9F445A56FB5838C01C595EE7FE0A326BEDED7D3A435C530ADF039B402213DF9B
B2E67AD9DED2E393368D5B739EFE36171714D0123B4C944AA861F1B04A02C6EE
7568626D4ACB75683C6E83954E6F38BE2FD18657468D70540AFF6D3AA27FF6B3
F60B6188526477262FDF02735CB83A90D681246D5BD0A10A01BF547EB07770F6
0CD66DB734E98990A753D6D316246ABA2CFFC6423C5CF357B1722B726784FBD2
E6F85418C68FC464E7387747DCA89122D00D180968AD15C9CD025F535EAB6B05
A74F5E0EA477924D5DB46857610BA02897083FA96A6984E73C21F2CED5C43034
2CDF7EEBCDF11BFE38A7AF80EAE01E6073F677839CADC4D8588F0A756250CC1B
4C8D3ED348BEA2160148FC3009AEB568646D73139CF18C511E554444D7299E56
6AECBD1AE56BC635055D671420BBB25F188BC8B836379761BD8EA30C1C1C4154
232150053C97626D6A6B4AC0B5F1DD9809395AA7859E159C3065E4988377A5E7
8AB435FF369DE439119194010DB7DA78ACEA700030D5D656CB94A2A24CB89FEA
081BB1F324605C5AF7EBC195AB879700F41F3591168B49FDB2684FF6E5F9C9C7
1FF006C71A5CC03BE2C797486DA8909AB9247BBD8752A46D29C0ED729137C518
52728F28B72B2B1C71DCEC9FD56FDFFBE7EF237AF51F2C7823617169DDE51DA9
15441A8EF1D0611808D6B41886CF1B3CAB77C3F1B981FB2470782B5F384BE7EF
1272DEB404026A9CDE6E0F487587E20FAA9F6BBB093288B921FD56794F20DBBA
2FD429256C5B1ADEE5473942F62862FB98F472414D34523E76DC683279689429
15EA00436C24530B685AB331279E51CE85FEFFFA4525450D2BB9B9529C02D9D8
04FAA1D2B931799EA5732E7EFD2F6C2E6DA14E05E3DDD3F27AE0CC738C8B7792
8417F922F0440F1A5DF13160EAA258ED8F8B8D8527A4636F2F34751915954F80
BF04921CA3A13C7D673267D49C9E13A39CD6B9E8FDE99D70F336F538711774FD
641BBE51B7768E184EB4A5F38B9E218146507030A6989B08098CF1D0422BCC48
133FD05A2700E44CAC011E6613EA41A0AF6C383D71FE63DEF7A23FD4C8BC2EF5
08C77979FA2491D014A8B8EE2DE100ACE2BBCE587AD476B8D2628419C6A3AD10
C77FC1857387B55A98EA3AD9C4F115A523D3A5542948BFBFCE0C32340B066644
3F9BC075C03EC401AC4E51A3E95E4786532C068F3FD7916A075DB3F776268FB3
8BD0A53308FB3648C34BFFDBB0E9FA9D26E405F52EFA1E0E051C59CF68DE6B66
B19690814A9B1D5B96BB3B9DD9CEE61D9CC1543ED861E7454DD8761FBFC94044
57F583E91B79EFE22674A97BFE7939D10BF76945478A3DE18835DC14CB930B71
8DB706ADE53AA064ECC84C73B6FE7B0336D2E76AE6945DE49D149F4886D08431
9DA0DCFDB137A7162403A706365884814229FCF3A4EA4D006BA5836A703A8EB7
23FF1A705288C9C470B2A1D4306A9E18810EF14CB7A744B6EFDC3DE0D7604F98
120AB2EEC26ACEF918B8FAAA92C3F9C7F311B5ABBDAB4AFCBC454DA35B40E2F7
26944D3E6A59E2552A1D60361FF394CCC7D90397BC13BC5E7438507F79EBBD09
E29886CA7B32552FE3AD8C4ED7C4FC46BC7C6C26B15D3C4F23B64F44DDFCAA3E
9F792DB8FD7934D93E2E0D69E0412A80150B03F416119F865ADA9F800483B0C8
69921C1E0C4F2450A394E1831E8A6496049170CB9FB6872A2D3DE409D4636726
98378C933DE725A15E7611B865EAB13EEA3FE4FDEF4EE5F6A7036640851C2B88
C8D97763CF26F0A75A7A878D2A7B2EA7A9D9920801D1CDCFBB31FCABDFA4C2EE
DC586D821E323A66308A47B6723A42850E982D1C777374A6A6DAF02FC8D6B651
5D5C709B965EA111EA32A86A858532F5E47CA3F61E3C8710CB8BEEAF5E104187
A3ECE907401BD296AD4A08907A6019778A41F74459C3CFAA6F323F087807DE7D
294701F5AF35B7CCA59F0170C814DFA3BAA315B7A4FDFD705224CCF06C0A4235
657059E82B63CFCB6CE69214873733C50B6DF4DD1FF69E308D7CC0705021DB27
1A4E4BDA585F05F4F6A4B172567AC7C3482C9BCFB5AB8438C55324AF2C500EA4
1C23E8BD6720C331D00A2F59B132408029AD0E92E2389DDA4AE9EF1E6FE13B20
5E6704BE1522FD6F0B94404DDC0164360E5F4BDCAEE67E11584C5D75AE385885
FEC5FB53E8DE73384A4F2798B2EB8F382FF20483AF8665850D7082CDA8D8BD50
915FB7F586D8B990D8A2E12999FF5981BA7B318FE786A3368F276D06DA125E0A
182CA3338B74A68ADDA0462684F9B24E51B51EB31D348B9F58E4D10C8B6975BE
7864285E3436CFDB4EC95892BBA3086CD279D2BB1AAA843441F61DBC602DE012
8594DDC6726C5A404D14F28B011CAA48F763BE3592AFBE465E1DF5C862746CBB
4C40EC1C641BEC69FC4E73B153E87F88EF24CEE80B11E97B26A823A442379232
9434B79813AEDEEB60A0F26771BDD74DA9577AC7D258ED487711BEBB7E87AA1D
28BA8BA1B62927C6A825F2D013F348805F6F06420F23FCAA2656B708F81C594D
85A81828B36D66517BE188D2BDFEFF0D67F884C9D1760E310665E589D230E6F0
8177A698B7B3F05FE343648E9B198941CEA17AB8FD7DD7608F5110A944298BC1
60575A59AFD663EBD5708A1101C666D45D6C1F2260744EB8D839E8B4986F96AD
EC8DE26FFD7B48ACB6C40DC64672AF88B8B46F473EBD9663F3D537774E464DBE
9576B8747B2C537F6563EA7B6E812F989AEB69C4BF5E47A71DBA0C52674367CE
13FCE4502FF6CA2E0EBFC9F33BFF3A780BE11B0245DB27F28ABA40D87D3CC15A
8DE055D0A680330C9E4ECBDD17982C9151922D02C1545A0B42AA5093D4AB54AC
3DE9F230299B6497718343FEC7736A2EF278147DBBE6C1982011D3B56B538C0A
47ED4B1C9A86F48535BBD575B8B5973E97DFEA38293698C8761CCE965CCCACD6
FA50B7A8CCD7978814F0F0044B7BACD52ECBC1840F91409719F58C2F8E709A4A
CC1AAAB5CD4844BDA8C51FD06AF6AF8CB7CF53CC8A4D534B9F03188F4EB827A0
3DAF52F8507D4B7E701EBB6A13F7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1200
%!FontType1-1.0: SFRM1200 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1200, tcrm1200, larm1200, lbrm1200, lcrm1200, rxrm1200.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1200 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-185 -320 1420 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF049F26DBA77FA20B6513D
285BE588908C3BAD6A1BF20F213E587F1372774EF31D66B237AD60712D60BCFA
83574CC5F88A6B4676356ABC2DCCBA498F4272476923789659CA8836F2FDA94D
38271FA2CA8B77D7099705602FEB41085F6674B7AA0DC588C9ABCCBD9115601F
CDFBCD7A8E3CFC8B1E718E576254F5F05FAB25DC253CB561EC3604749243AED5
76898EC99BDB1760B0CA75CEAE3FE6FFF1700F64F585BE9267ACBD5F155F3122
732792E17022F23B1F46FEFB0696E5C2B78DE0479F09B6512035B9C488042B62
98525003ACCAB6C8F36BBDDBF6E82F5CFCCB418706BBEC1D4E42086E70847405
3ADD1383ADD34574F2C6C64907B0561F107A259A649BB525F0B74CC3B1F42412
C4F81A7ACDC6A3F37DE7FC06DEF21B9821DD39D75432AE3881E431569A012092
38FCECF1BE90B0B199DC4D56EE18658B2818B69FB6836486BA302CE7F6EB18CD
7AC5AC6648097F65C8AB851E9BD1696B9703230711F68FD82E1DF92936A4B1A2
CCE51645573EB0E762D68A417AB6C0A2EC8756FC9BFE5972DFC4C794E948A970
918BBB1BD7B31F9B1B323EB2AF8D41A153CB1B1511F43560825DB6ECE30C16E4
902BFD1EFF59F06984F36F284553AB3F2C7901B37ECE058F5E477EC9C629847E
1C7A3628DB7C47C099A0DF53F05ABEF94A760232985AEDEEB7AA05C95273179F
8A1AEA30BE626653D22F7725C28498D776493AF6DEBC59D44A2F6F26E5DA1A77
7B9EB9D897130FB3F6017F80AF21E4FDB73CD96834152BA948E1EC4765B253A6
565F51A1ED2AC8374CF4DB767E7F3FAF13F0A1198110F554CB6735D3C2DABCF4
0C0A431D263F22D091D0F560ABF5968868126430A293C6E8A6A87593E580B110
E15A84AE30E4846980EC5C1FB6D4037D7E1DE8CF57B6A60DD4DDF422075F85BB
0B1411164E99A03A3591915372454A70C8CC75EEE08AF87D35032DFBFD61A4E9
F968D1F514A69D62B30B89F47FCD45A41B423664A7862A1246B6D7C5E2B352E3
D5428D2B6677D38729C5752DF835EAA366A11F6C7564C80EB1E0A3EE9990ED0F
520EB2AC073E63DD9C935504D14BAB14A4305B3D64638B6D952333CFB7CC93CA
D84B6DE80B35AC82623BE64BB6C1DF9165E00D29054A5911CEBE09A2054EB39A
7894F49184B672F4AA1143A2633647BCF502A77F12506C02F1A78AE9061F1497
CABDF651CF5ECC83877724A90D67D660CD4C54EFB79F9A6C1DC8EBDB66E8D709
D4C0A81E7C7EDB6CF1E266B753AF6BD100261A6CDA280902D3F0D15EF4042F54
5586901E870F2A99727E9B64147EC20330C3E54FE01AEA9875DFAEC86A0B6F39
D89E035185C3A6B25CBE093FA5C7BDCF99E5C68A9EBBABB3D61A6AB4F30B4D7F
94F4B4DD1AAB6C22FC9A18BF46B81CB362B87BB87E9552402C35490285FB83C5
EA4825225DCC23DF406DC5CE8E67FFB64DAFA43E89D6C65BA6C0F41AA44EECFB
DB8B9ACF11B6ADE903B6EB177A00E2B22593F7EDADA3A7DD72A3BE1D488E5BEA
BB9327D8B0187CC87BFD35F4591D3F63B87490338692E1E8CBC869CA13C68761
6276CF2A654946B67B1885F915E2D53E923D1A7B9D373539E8AD0C47731B05B1
7E627B68C4C1C9FBEDD4234643720D3A7EE90502081339CDBD455004D38302E0
FA91517F04289EEB213EA283590D0EEA039CA3BA5694C0DB35F68EDDE43F0CC9
DE58D2EFEF8E3D81853BFAA0BFB73296E70ABAEB606ADCCEFE9AC3EC7736215C
B144B249E1FCF4A66590502254335D9505C9A962FF3A7D45FF770DB07AB439DA
BBF81F0F47330560107A6101A5C76F54C285DDAD4E7817C6B93392DF83CF924E
00DCD4DD8BEF1136AFB87E24A20883FF87DD69789556A974B8807C5F8030CA58
5301124D8A96D5B23FFD181D66140874153114B81A52D69164014ABE126D1E47
6752720C0CEDC0AAE2EAE314CF25CA05C3D569CE8871B49AAF2F371CE632A913
4E4735863644E0B7B8CCDD82F1709F81DBA6440AD57B94A928E1F15D948C7EA4
105A252E3AFCEB539773BDCC8FE919D55E1351579EC5C3EBD311A8EE9A9373EF
934E4C61DED60F0FB051231ACAE4E12B03013D7B9BFE305B9AA54B0AEC8BDADA
C3FBFD3A4ABFA43D98F2991894B0E1EA7FCEA4843CB86FC4DABEE41F24ADD548
82C163617B77D65D423C565647491E885469725CF356762F01753FE97CA9643D
7EEE4365D5C807298D61C1250921C4F14BDBF39D08F3896967A5C9BF25113779
7C1909EAD87BF0D60C43F1AE79FFB1A23620EF2C324D5E6F6D00CBB22BE70E0B
AF849544750046F6031B872CEA4F6843BC35E05C73313978F2D74A52F2D52095
25947CFBD1D90A82EEFAF5750631A17DB096B594B6C033ADC43EB9328B5366C0
A8B7DAA7048C0028AFD0E17D3A435C530ADF039B402213DF9BB13372632469D8
568F819DF9554C1930B7B3C6FAC84650AD5454E5C0DBDF10DAF451A8D99640A3
00550839FB6356827BBB65B73F31051792CDE85D8598F0825CDC92D8957797F6
0CA60789EF683AD4C7D307304177D48E8515FD26575A917C9E7333337E070509
2783D66F0F50B55270EC8C75BBE78CB32E0133765517039417C35C57DE3B0D45
97863BDB6F0216EC699AB82DA5AE17C56E64998CBEA5DA56916984CAD87625ED
98355974A608CB758F2FB28EE42A76F11607C84F944D3FE51263A8DBA84E93A7
BF7BB6DF9EA825E6DD1B38F09E0010533BC14E56C291413C50141070B380466E
377DE82A00329C607B7DB839267F83EC08B4819411F01130BCD93B9C2448D878
FA41518DBFB8817CEBBB0FA2A3A4A0341C5BC4571A31096F341A0800454E7455
74255A02CD28BA9E87AC9AFC2A7EBD517C7E93896335DCACBC34A1743D5A1564
B5EBFE988742ED8B0A251EAF8FC3754387F5237044496B3FC3D430A28CDAD9E7
4EB97606906EC0CF858FD8ABEBE66AEE30F62253BC1178890D6AB614FCA9FF17
924B6F0B4432A66990C1D701A498C911031A22BBC60D8D893ECA20F660AECFC1
74B5E419A5779E7E9A79D38141A4D34CE51645DBBB7C726B5C20BE1D5A364A21
361D9B6A7B9CFDC36B946446052A40AEDEE2FAD548E3AEE8B3FC81D6FFA0A37F
3407A02B06A2A3339854CAEDC5440F281F9B75C6BE3F8948E5A8CB3F4A75E17B
FA9563DD08C137E45A5A679000AD3F556DB2D3EC30C2E710CA128E8B9C060E48
6A72E422BA7BC619CD202D499070ACC0CE8ED9357229E58E8388BBF04AFE158F
EFB01BC9D5DAC2DE1A980B02E56CECC8F1F65A358A6D9B700D894DA78FD0AA95
96C1268E645AAAEC5692F3A9206A85A4ADBD8C93E822FB322869936078AF2252
858B3183913A0BB0660FD8836DD2E0C3327CFFEE26673BBC2C5502E960074098
EE208170447AEFC43ACB5569CEDF46D479F1361AF8C49EE51DD153D03D65DABF
DA2A44FAD2EF1016D652A58E1D271FF6EE621B77F5441CD9AFEE797F31CF6C2D
709DDC52E527C49A2843B1F40FC33D0F1A05C2437133F753DEF24BDEECA9FD01
DFE44D65B758F97102E7A86D610A4B7B3EDF4F9D3C175F633645BCB35871C931
4D59DA9E625DA7395222C1E9BB70B005836CBE4227D96FF00DF7716B8B14AA1F
ABFFED13FC6652F9082D979BF4D846922C4683804E388C98F2BC6BA89DA2FF2E
98B2A22E6F40D0F7E435E4AB844D83D12EB45C39C551E53DB065BD8CEEDB908D
61DC7424A5461320067CB0789CB14C82E7EFA02DCE2D37710B70F0361CE951AF
FDF4C04A1EFFA9FBC7935837113A363C387D55650E78400F4C45F4EFFBE43DFB
BBDDB4E3D6D9170F363918FB10C82BFEC6CFA8CD74B34B93D1931E5FCB41F254
2DDAC0E9456D4AA23E399629F084B3E5824DD9EF586021779CA07475972A7B60
645B1535CF943BF2862E7DA32DD1AB9FA58208E092CBDCB2E42C04E3ED3E6A33
45316A2EBC2106C9A4C737E5A4BA649BD0EF852EB0AF79A5EB6A574B199F1773
D02D36C09D3484710193D79B9B3EACAA1456951632B40E85F393B0CD06FC306E
65B890BE05070F67D839C7BA77F888E53B9AFF03701E4A1945E305952357899B
311D5021E640F33D69D02627465E8326ACE6F0EE598A5D79A5BDEE7B07BA3E87
D05609F98B80860AABA6921E161C6C6D4FC06E57BCE9D9AE159AA59C2FF42B77
43FC27B43A9CFE756EFAE0900E12C339FCEBDCBE9300AA28279DA8602C91496E
B3EEC816430F8B44004E105F7D1FBD0A60B14F481665CDC62F4AE6888F635636
90FB763DB09DF2B07BBE67E397FC2A7EBD517C7E93896335DCACBC3C32964975
51B7324751F5E3B2AAFD32A729D1734301DCC4ECB8228A7D9FC213A1475ED7C7
5978263612A2B969E2120540E9B650E20DD78A189EBD2A1990FD2BB1C155658B
B79D3FF159171D6532306F07A1188ACC084D5E2836C37C6F591B11725547E880
21B3BEA53BCBAE7450A0E486FBFF4A5199B53F278437C43D7E2AAFF3887EB839
F7A2A9E0DD6EB5EA622C5BEEC735AFD8BF715E80C511A96F064244637BBBBA65
94469B724EBFBD5F449C3B2F07027ED594D5FF033724D4D9EFD3BF41EED24401
A9458D10A5C0052237C6351B52D109D3A493CA9307301C2ECBD26AB364535467
4E8D1E3CEE6C21EA9667D6B02309230CD3D27AFAB14DE187F45F8C75DDF3742B
6FF2695DDA75E791EF3D8B4489F084A0A1C31B8CFDA9568B3B836A9477F6D147
4831DABAF873C5D6DBF2F7E039F5B0DCCE57E1D7BBD15535E200142A969283EE
75607631CAAB9AD5C6995D1971CD164A00901B7C75ED7CA325F98155AD174D38
A746B3286F3EA1D67C96F492A3755FE79334D07D65FE355B1BA190E9598324D4
264B30F3A03F597602AE501A231D325357A24634E75EC2676122F9ADD82472F4
1110CB02E02FB33648DC7DE0B00405EED3798EDA35F2E7C81F4B455984FB0216
9213214E89E0209DD873557C08C564985D464F639D0B81E85E7AFEE08C99FDF1
EB77AEDEFEDAB18C6800D32086FCE519E27F26A8144C7D576228C102B51935C1
1E6A1B3FFF2E10DA7F6F6E80F5360573AC236E17EE5F7F1A518EADDF9D8A1C8F
B1108673D867B3930FC9BE78B784D786FC209C014B7E2F1B6809B55EA360648B
7B4C01658E4E2822748AEAE48E2D6E752348C545B345B17C9E77BF875D7087C1
2FC6CB4050BFC255644B6AA755A5367DB884D5015928243B9E13FE68AEE2F5C1
0C10A144EE909743EB7746AAC3E9E93C8DF81947C8D2FD6B15B6ADC4529EF672
21876312E3B633E947302946316432A9C52A86F39355479C01500B01C7229F68
E7C55F697AE4AB8F9BD3F364DBE539F7BC5ED468E6CDB3089611AA932E55B0EA
4A0495CB2CF6F647E0A7EE9BC7B7B45778DC84A513F352B2484B2BB3A9F2389C
26E590F80B927A12716D38ED5CA52D6FF10DCDD39DB33173FF835914FF0482F4
8D86E13709D75DDA67480BEA1F545F5959E806B7DDCED2CC26324BACBEF8D0ED
348181B8A842FF8B0BA42807334F42EA60FBFD10B89D0E8AE7041F52C6FCFA64
D6CFB1D9703F1A17E3776FE26688D3A4AF6F94555F9610FA63248A467785F345
1297BEC0B7B03808FFE6EC885C0B9D3C86AC30B21F3090AFF572C7CCFDD71A37
921E6A8A38F39D3B2FB467D74C35A99620B27508D3CC7041E3062B67193F4965
A00712528976DA15412A161D64154D62E52F4B02A5C1A6048FE72F1C35C614E8
EF883AF97D367F69DBF734BB2A148A7B61C78BF7FB2277C6E81ED035F7969DDA
F35765327871EA80F02CEDA213E925728EB3D1369EC18B8B1BF27FD0BA060D3E
3FF5EAF38E35BDEFE3E244247E1F7276515015C511250DFFAEFF60809202734E
D86FFE50F7406524570EA79340CFF5DDB768507DA2CF9AB31CFF42FE6B4F00B4
4AC8BE64E4B919C5A575977FEDD0B1D1B89089EDD9D9E9C4C2F81B812A11DD51
20003EEB6A54C48062E65752300EFDB996858AE9B81C81D94101F851C9ADF7D0
CD1C6C5650027C399BCF9B1CCED2DC1EFB27931D52D022D2AF881C608322E2F1
C8DE42D0C0DF0B44B96396F92CAB0A4930567A877DB9FB7B18039707275C7B2D
D301B647DA52C80B89D0E0251C397DE74657E3F58DB7AC65BD5B8339011DBB61
B5F320965C5833867CFA739E65121B53C83E7B9A1A5E93702BF3826D5712D175
CCF9A789028D97F4F7D30CEDEE24E262B087FB0031D90BB7149E3C385D96A76F
CB6F8A806E061403C4ACB7DAD37B57B9D7F9B92860C21F0C4FEA515F629C9A8F
9326A2D989A86EACFA14221F9ACC5C474E3A51F1FD15B89234A997054D54BEB0
0D5F64484C414BE3368980755318BB1AECA0053CFC1235AF90051CDB190E4D00
40FFF70435C6DE67B8A5E1C114B6FC7CDCB05C7A0C332FB91C70591A71A951CC
34EED0406AB81B6A6F803474FA564202DE1BE4788A2E35A3973F350FBFD52A17
7BE84F2C5061FA927A69F6A4973668749143D43EE23F12315665CF631D705A9B
7A591230B56C94DC1783A8D9487AFDB79F3F5783DB2AA4FCACC8DE9CDC3C861F
663350128178A0F799A66101D740462B21BB06A88DC601CE3DA156C806C815E3
DBBADC3D3C24FC9806591084BED3F82E41AA559382E3A39F91D15855705CE225
B83D27A8918B4DA11DBBF343AF52C66D1327FF21FE901B3E17A24453CA546C83
963DB12AC04CF58ED84FB32709CC538DB2D3F82E41AA559382E3A39F91D15855
71088091059589398323EDB1EF54E133B6DF46430EC56A8C17BDCDA17F711169
3802518E1F3E3A25A9CBA3A0F8E5789F7B233FA7705F34F80EAD8A2BD4C29C79
E4F150DF66DEB7A3AF751CC15ACF3E0F23129000327C2092232623355EFED73A
F0A20E27F578F3A3F6E2178D61B6228B16640E4A8594A1702F6F3D52DA94FF37
C018A5211FAE935F18C710C2CDDE6A14700276649D850B6E23AD0A136470CE35
EFB6C124DC09FC9C27F6CD85560D1A731400CEEA260E50B4D1E4650CFC122B77
18D07DB30A93DDDC1EA9AE9660D3465059E7002AFC5AC62E5002D7CC41EEA18B
EFA9519370DFA82577AB923333891496CECA8C3ACE05DE85878654392450EBF5
4B9DC8441FBAB5BD7E68C13693EC4D92D2D33DC9298BF525779471C771ACF32E
6207F1D0D76FD6B5946579F0110AB4DCFB32E891C4797601B3B3D420CCEEB0FA
4D0BB8CFC08D05A32D1DA61A2D6C657518624A1CBF85DAB9EF379F7525591FE3
CA232E5EC3A95199084885C14341D8A12A491E774EB948D28D1DF98ED24161F8
2CEC0550084F40A4A161FD347082724CB5A62A4BD7C5BD44875A55897D2B532E
906D7FADF57D33E98FFF6D8B1053474E7BE21AD9383E09BECC1731700FC34FB6
670259FA6A218720C44A3BC393291FF022C62806730BE7A6FC13C4EDCF1C3FDB
4BC86873D179D88A0A94D2B63DF5CB351BE00F3685CA11D23B413805A02B2701
FE46253F1C58B4498D025DCE099BF4D8AF0916FC6BB84952274B94BEAF0EB7F6
1772338C083C728998BD1AC0D43F1AA653A237DDC1FA62A818A0423C40DF4E03
CF604FF7DAD557479E6FE5E9DD147DA54DB76A17466BF5692B5FA291DCD6D06C
DD3378331B86077B661662FF2163F242E2782FED4D6C76201C4BB0531D4F5306
89167B7DCE2516D380B8F938F2C8E60B6162FDB3B1963A9B05FB073A407C9EF6
D513E132472DDC7BAFC5E508E692B3E5C8C505EF874F28F29A45C95A24DD663D
7CA52551DD10E2B4D77154B67E516CABCDF5A6914FD502AEF1F6F53B839803D7
3D02D85863468D175D44E71807D35A8BB16DA3E011FA2B757F02EF6276E28FCD
D9F6B54BF1CC6B9FB9A5C5F4347030843DD8467139DFFA34C959CBFB2869B4CC
380B1BEA33070791A9CB5904A2D372030412C2AD833EC1C574E79475F889B9CE
9F35493A1B4F76D10B138C09D4D34B30CA2D6B37572F5CD259B75400B09FFCC8
DDD98DB99CA1C54D3B05D60B0EB6EA44A0C27A8483109B33B185AF2472E5C865
FAADFA4BF11B743CCF6AF25C1047871E270F4981DA77BE6DA75EB8A93867EDAB
C048370EAB4E1A29F597157BB0FB68345A5FBA715467566EFFDA01F6CADFE62C
391F52BBEBC870F8159BC0DD744F393CA13D56C501F630BA5060DB4162EE184A
D04DE7A33D11323133199750DFAE3058A6A578FFE769BDE940DC77868621EB03
235FB9C69EE955D8FB17FDB11F8C0150170A486455EFCEBDCDD341E13F8472FC
0CE8CE250FAD72B8A85B7F11B8834650E77F722C72A8B3658327026CCE185EAE
AF8A8A15901A2BD2F718B80798D95D2F9B88DE2367D7E9AACA5547EBA2564942
BB5BFE4A93CE8B815F2EFBD20E109AFAEF6A88500BB3ADFAA753C5F7FB11A6EF
B0DCABC3CB148E5134A27E8A5A106D86E395ADE5035D54C7EF66401D74E6DADE
419CA77C367D38E0548F709EB5BA672657CFED3C707D5D2899E8F0A1612129DC
CA8E43A6890CE8520592055A9B44EF7FCCA20E96281BF8389D5F02565768547B
24308251BC1F119BA6B54DD89D48A70867880942785089856E54B4C3A2707F44
DAF771A4F8C642FE5E99634AC87E483570E2A362AA134C1D4308FB33E6F53478
763986D70FDE72E44C3EA00010424476A8EE73246ED62575CDCE914272A8F459
F167FD308C95A41879CC539C09DC52E04A4B500FE3367FB78108208D4D86AE19
E243B7328DD7CEFAB5F7338B1B05F2E629B76A421FC62515D2FFA0BFD6627944
96BF3801E02DCD4925E1B19C6FF6A18AA6AEA3BA8D8A4112B173A27C54911A28
9A4953B52A6FA4802510D3F3DA39C5F3F82BF14931B9F3D2BB60453CB6087615
36F52AB3DA276A7B59F65F0F7B058F89CEDC63E876A35D634DE722A106547891
80DCCBC5FF6EB74EE24C0F3BB9F29486E9B810FCD519ADA58001316608C3545E
72EA037D0B465D5064A6D9ABAAA04FADE52C1D112372F5F50B62E4E6CAEBD9E3
4C683CB22A4A4E517F6503AD5A0A3F22926BF875A86EC88920A0229625A274E5
F79BC18A2A75766809B720DE733E2AD685BE014B62759399EAEF8B4BB1CBB268
FE6620E7F6A13E116159AE831E4152EC9B7AE5A16BAE50167B1DC5AA95B6DAF0
79B86DB21561E71C9D086CE3A51D07185666E6E25517E160636A69B15D8DF89A
2E78784DD12B29C99CF0549313722B2F6C2CC9A30178964B4A673EE6824D52F8
49F64A60A02199C581A6247BEC5884127EECAF008B07C68F9783FF987C5558A6
DCD6B263E3573D2EA6BB6C62141A81C5D397035ABF7BA970CEF72792979F188F
76F0F2299767CD3698C847FE83C74429B91C5831F822FF716DF41C29980E8B33
43550BE7B3C7F55F7D52B2D405F95A71BBCE369CC66B827E1E19F16040140166
1BDE8FD6C9967E6C649739C564DCF43C3510A450D4D81D46E1000B6D4E839F61
A831D340D8A00E3D757E8DBF6B5EC8766DCAEF19A3B7FD1313D6EBB93374DA71
D32384616393B2378622A7A5D1984B5A69A2B2DAE2722FCD1C1B1B5518CC35F7
A6B1EBE66039838630F35F0AF5D89448F4C6E052517CEB71717BC4E232465908
ED237B4E9729CD57409C1F7CA10CB644878227C5757DB075231895BFEA46C6CD
3518B580BA7064293494B4E845E3316E2573D90680FF7D503948C1D8E6F4109F
121687BF556D87F52B113BC0E8D6E3E12DF15E9CC37A88D33DC8A837B4704406
1BB3BA5CBF6265FFB626B8D927DF2F39D0DA3EAE1CDEBED0CB5BABB7EB802435
E6AD93A096258B227A40CDF36185ADDA495F942769B93F0E36F89DE7FDDB91B9
474A8A26496D574C1887F22B461FC4A1230F1C4E6088DBCB1CD87EF5BDD741BB
054CAFBC7BB770F3BD474562458ACD995611CDF3631E7EFAB41BD233860D04D0
DDDB48BEF35932F1071A79C9C70903B9C0FFB7B11C5D40C076D0181CF1ED3A0D
5A8FB1DE02CD4FD01AFC9DBA381D130F98015678567C0ED428D80FB22206D970
5E4C48FAA6E383F97CFCFA8D575AA766C4DF5340662A0454F37FFB6C8C8FFD22
988D440372852A9694E4FCE0FDC24E8DA275FD4F4F72FC9D234416AA3695CA48
4F3D198B275E1D83AA053C88A17B2E392E8330F91062E41C5E7B370A4CACDCDD
E033EDAF188610CA464E9CD27119027EAA18285B266FF717BA9FE9B5340FAB85
706BCE44379C031C3F37EA3A631E2D5D914E9FF192F2621DEFC6E14F7E69BAC8
D308A8891C708C2172701E6EFA6C690590695009B0C56965A533E6707C7F527F
F6858109FE8F9E63D897BA0934A49A96E79B19EF02C15D0AB273EAE0E4C163A6
861837562EC68A3DF988B864B822E4BC09B498E393EE5B7F4D5357992F6D8C8B
9E1951DA8E84CE72681FAF5EE685C5F8A29A38CA94D3F728929BE8371D9A963D
EEE6ED9CB67549175718FE22328FC3356C5A1D63F9CD6C540D08D499BB2BC9FE
41E797FDC1C3CE373C12AA0AB340A8F616A1BD6B4FCB130C613681864EE737F7
1099D3064637F8C73A8ADE0A753CCB9D64BD34040AF068B4E9B55520B129C561
2B04ADA368E75CCC7DE86D73052F7BBF3C3CF5443F03CF7C7A4C62DEDD066DA1
C061356DED2876CA7F7DFE313436903F3F1B405F2610AC9DDA957EB658638D67
1327682733F62F3327589A7E0691CDB7C01A6B95E34DB3D837A2ECF2A65D9FE1
3CE03B4544962EADD3781195A1B1A39E53B8E89C2967D350F75F28F0675312EA
6776C651F35FCF210876171868C5ED5B3E36D120389AF363A8D67761C0F2A1DD
706C806A8034AE956E0ED388303457FDC09D3D661010682EC3969670D92FE494
406B1DCFFBF7F7AC43B45BF2782C2D30CC143276CFEA035C6CF50175BF951D56
CDCDD2A757C1BF26A96D24CC7CDD5B3D625DFE4E516A7309EBBA858BE69DAF05
32ECC75482E0C519B9AAF9846B82FF1F02D2F0A66265CAD60E568CCB44B05607
566A02C12A14E2A2D119B369C5544D3EBF05C343C19C499952D1309B80306F4A
61A4F8E667A80166D955421652CB1620C06E7D94F74AA464E100E1EEBC3FE047
80589579481B79CE028D54B2702C6FEEC4002EB9EE799BFF15D65907F639C8E7
A011AF17BB14422C329AE0BA44A7AE06E9E15A5D5BF99DB07EFAA0A98BCD21E9
9041133CC627AF9293570B3DB7EE8C0E4DC7EB1C5E333D0EED1BFCC3D1813784
EC2BFE11241E5E5A63B5EC2A72CEB48AE7EEE08DE1F0B07D1807C680AAA60714
8A575CA7B9633FD0003A930F6C782E3298C0CD1394019BDBDAC7482826B8F71E
C51A777EF1417DAA354A38AF954250242494FFCF3EB02CBF2D7BDDEFC66E2C13
4858D32AF74B25237B70F75B85D5012A0BDE436726C96DC8E95A6A7ED0958906
0FF35326BD8683B30601CD211E940090B78B9ABC7684724C63E8D3ADA4135AE2
0CD38AFFA0B3071E8660CD601CDFFE211CE9D8E110833F2E36C2977B0F2DFABA
00C4A9D139FF222E949E21E435D9438B1A1493C6809DCEBB020E97F4565C1F79
222FC39649B5AE3EE8F25CC476CE5E71F1025EA32E245FB41A163ACF2F27752E
5EB67EDF6DD029942C0B8F56A07C3423C3DF864C1A50DA4BD3445D650FD2487C
25A56183C605038A8FA0AEE394CE83436E9E4DBBE463EE135D9D9C902B17B51A
AC0CB747E77749C922BEB97E01433C934CDBCC446E09E592AF9FC47E74D289DC
285EA30F1DFF3F0051FEA4082EB3348AFEBA93505EB62B923DBFE4D3BC277810
686137AB4F58CD36366C22465F9A65E4C9E9432B3DB333A000F4CF2A9899A31B
1CDCF98BB6DFCA0130D597230C1D9DC6C44E5D5495FED4BB91E92153BF024EB2
197FDE4374A80E3B3A615072BD27935CF8146C2F1F47AC8CD12D58CA52599A65
795A2C560781C92EE14B5FE74F47DD433DEA4AA229840D4C62C19E602D5F3EF4
7D81FC3743A898C666D89289FA3ED9806EF71FE00DB9005DC58973248CAB6875
E54296706AB51991A5E9488531D696EE446013ECC61B3D952227964E78295355
E2C3474649B388CEC21C76608177CD51634BA2189A79ACBC7FCDE62C1296D929
E3E3E52224C3729B2C1DB0D0F91735E8930680CCB9745907EE11754075A8A966
A7858330EF34E782E54A99129ECD573BEE2718A61159FE3154E7D8CF52B808A4
55033975C5EAFB93DE3F51E82A2601FFB05D90A5A823129903F1AF01CC616013
8ED1EC4E762B7F6031132DA7025DE303AFFA52F14D1A604F7E9946B442CE098A
62BF4E3AB5672CC627C779AC480A374B21799ED7532B8F115B94FFCF3EB466ED
13C095F7B73AD863852F6EC3B1A67C068D737650D73C050BFABA8C25ECCF81E9
684307CE573648AE81EA4128D244818A9E92605D5AF3CE465430054DA4B30354
78BB8D3E3212F6B35E750A0311A0D89DF6A1D99976AA4668EE62FCA6F439D937
ED8FCDFB3DCDCD9224FFED2804B3EFC25B60E4173F1E3CC92AEF10A8FFF85C88
F1EB028759943BE5A3CEC0073601E0BB3EE4F7F6CB96D932D7CD313666C011B1
740898746A333E0F0FA39E774B9835D4F8691B029ED37E232870FCCCF721CEE7
1E15061F26283F54AD9A6393D9372E35F37315E6CF63B4FD224F4676169E6045
97DCD773D3085E5DB40B26A5B688BCB0EEBC694D3C26129CB619B501B491392E
F68B506B4741C84569F2A13CE51AE16BD967AFC5489A136238E27654D2E85D90
A280E13E08C181610679E7E5A36EB26C0F02C9986116DD0BFC419F724349DB4E
5F8D1B64DE0DFCA4282B943DF8971CCC30E8B3DA44A705E4B6AB0B7A1530C9B4
8983C3CC87C23A2C6C313C0A6B57B6311BD327C05F5AD041A7782CBFAEE9DCBF
776CB6B257CC995ACD0D5A4970C229FF0F5AA3FF15B37C38A0DC7551BDEB6830
166E3EDBD8912D9578E4B4B4363F54D5ED559EC5332659E0A4BEEADA21AF2D1D
E036E7D3B64EAFDF44067D932943122AF7CADABDB3E560EAD19951C71C9950E4
CF4955C052A14CD46C8ABDF4522AACD539FA9858BEAE6D2AA63E53FF00826CA1
DE7B12DFADDC3BD4F6E0051CB4FAA1D862C0C5D6AE2D6259111EA6FCA486BA1B
67A54087FC7BF4D173303AF835C7A1AD30D138E8784D9412B53D654CB87CA4E0
6EC31B558D5C571D4522381F2BA45287B885550C78EA3637AA780CE6C565EFF9
4B736A807A77FAA818A78A15697C4F2136769C56FB1E8339160236808CDB6B6A
7BC236C4746355555E3CC5B850BEC45ED37992A5F41F7F31F7DBFAED4D20BFC7
39C4BC83BFCC140F86E875794633D1BD5E5887193C076F3F86249FD2E9E68AB9
892D18ABFA3D19D6A10E0DBB59E897C694D34D23028C21274BAB459EAB76D889
FEA08562E7CB62DE6B09DA83F7AE55AAC3AC3A437AD2F9A4B8F41284C4BF622F
A807D56A340795E72A322ADEAA496E10B816A0F71394F85EE9FD0843E33A73FE
58D147BE6CCF28CDBDE609EB13D1B98B36ECB4DA6C192E1B497D59CCF72E85E2
018869EC065C30BBB26A4E0FCDF5DDAD2F08052C9C548EC6BA74446578EF4104
F459124252FC93165FCCB64BB307A60CD7CDDA4A18835A3C69B92B8F6F95D27C
B55D4D306B07B8A0EA05ED5645D49D968F18CF1376539C2B9046412E25B7A12C
A3AD15A2198ECD03A336578673DBD308EE0FDE4FE2E3440F317D69D637BF411D
5936993273EB89E353009C24A4EE27323608BD7CFC8E78FC01B591D197399EE1
FFA4EB65DD3D7F17E763A858785055905AF566D2C58E68F8FD5E9DBC8E2EC020
A542A1BC3A6831B91E99A81351DA10C6244A6CB90AC60ED688DD820C12357ABB
B765BD7CAADDF4D8E963E73E7767CA5FD39BB81A3C11191D08BE2F5791BF8217
09CDB37BA64EA0501E9BF86999BFA1AE3057A24926FBEC792092F5841F675F7B
8F1097E98037C574EBE30940A2EC9473B6A3B452A4BF20769A16CDBDBBB1586A
9ED30807FFD0F586DA00E9D25FB8CF9A6EA9CB2833C01E17271405F176A53CFF
33C8021098AB8A7BA78F6E02BA3186DDFF80AE5ECC6AC3ECB07469922A7C2403
05384329AB48E7DD98606CE8C72D25068B472586937544462AFC69319EC29A27
81C23B250784F746331A7D32DF1B3162AFA046848552523726BF1FFC6A026DDF
A8FBF0115FFA4DDAFE1F402DFDDB674618BC75CD3D3C6D72BCF9B438107FBCAB
DD17CED6E8AA6D45AED3DA9EE3B62C682A2100878C290D2F2CCB97723D3A4C69
05AD9C8B329409786365EB6BF997AD78900CFF07D18696F56B9F2FD9CEE7DAF1
4404D56FA099F4D8134736BB5F43812F5223ACB341A8F1AB096D56F34D563922
5D8A94D63C598DA862867EE8E0B944A0444A372A4DD9D1E08E0034DD2429245F
4A5015C50F0ABAFB1DE7C4CC88AC2455BBBD76BF6E189482CFF29E125C381D41
C09C6882CE4DE5E080605442F5F5E4D1157AA70FC04AD0DBD4EFBA838CDC8F5F
6A6FB74A90201E31B230D0102F01A4234110DA458ACB5E33968D2DC96B757B95
5A7885B4810AA323BF38D22315443C9EE38F758F3EFC3FF7CFAC22E6AC46D4E5
F3F36AE13C1BE7D4C053A3FA3D41A9CA29D7A26CE37AF2B6FBBE0E0D9AF0BC91
A5B812622080FF41CDFAC711BDCB0C422B6CAFCB03900CAC9BA03485D30A058A
C03C1B54C61A30BAB842ACB7E6551CB665155C49E83ED358A74F3C2E16537406
C4C3E6EA7B2C1138BE6CDEC12EC7E4465E97C3A1DAB8F1346D3196A1934E6C68
162302B2ED5FC9D848CD52FC2EB605744F4E30C3043CD9CB30F58FDCC115421D
62AA26769EB88BD6A843B2DA6BACCFE4E13A5BD293C5563E8F6E822350DE5B4A
9DCC4AC610C784488E9C4AC6D74E2CD871C649D6BE3940ADBAC278C0A34190FA
11DAD0FDF2057F9CFFC1E0FFBAA9655634976F43C1B267A58EF308F2119F897A
6412FFA284D1FF32D8508C5CADF13333D268B735602B0BF5E44FAAF7F1577287
8D2F3091F9910D6DD9DC1B09EE0DAE2BEA4025F8486B2874A59C2A5ED92E99B6
C1AFA016131A7FD9D863B1E7C6CA7FE8DA48F31D55EC5F855E136BC2C24258FF
9E5600CFE301A812A257554A9C5928015AB64BDD3C74B4ED46DF8113AFC3CEA2
C301203D9B1D71BF18E43F591AD5B363E0823337DE9E8E608FDE38333856CD28
EEA1C20E750AE1A3D63611D63B686E829550AD71E88DDF9735209228D2335631
F62CD2BB62C3742FAD70DAF203D5CD8139D5EFCFE6A710413DE0843072099117
BF7E8FBC5E48C2727AA8480B101709C6E1843C1E5A0BE12EF27F5604CE2434C2
FB7445FAFF504551B9A6B5EDCB361FDCEF0EE6433CD58EED11E1B6F0BA2AF9C7
1D7778A27B7AF1B8F3A934B399877DFD4B8A351AF06EA9A0560B6DF81FC47FF2
811BAF7E2820E130A025E878F1C5D670E1D692DC170C3EB1AA92D3D40678DD06
8FFAC150AE3C36B9D135342F8F9CD0F91A3E01BD70C900D2A17B6288AC6A68C8
D36861472880E0C01DB5C9FD740451244F4C223A5DA2626365140174B8593076
4DC0386F12426FE61C5A7F1BE116229CFA9EFA57ABCD97DDBD6584DED4C80CB7
BAB87FBD233E6A6DF30F3BFA9A43EAF7DDB5D3344C04D2151D8164971E669FB1
6918D47B20D76630D931FCBC7919AEB54CF783D1ABFE8F0CC79DA7DC9C53084D
BC6AC8A29E3F29B438AE1DEF818C20146425B6D886493D474962A95B51E4284A
1DAF787CC17112364936B4D0FD5C10FD94A9DAA4B1A22CB02BB9DD3CEC7700D5
7324EF87728357B40E68B26FC9FD2F339191DA498EF06C3054BD811A2CF46DDB
F6C79F645AC5043176EEF0C0446B8EA11FE1099B420A91375C2B977F2E747673
4B3DDDD5B5A07FBA44B34303E275109FA9056F1335B11B8500936DD0A44E5490
736FE78190BB57703CCA8E51939E5DFFD8E1E0CD5B8F1E3AA6EA085C6C3A0EA8
F6A3BE7A83268C8CBDA83A63F6D2838527311ADCAABE8419CFD0CD3FAD8C40E9
E68D578BDD96BBB9829A52D9A022BFDEAF77276AD1A995A44DA90D624DE5E41F
6438AAC5CA62A6F25FCE33774ABFF9BC297501A0D2AF9D551E70E641C01E22E6
67136381CBE9BA6C0DBFCB48C3D264CFB00021D0511C0CD1288D71BB80556D36
F62FC86206EC750F3DEF18E8470C9CB10FEAEE5AC13314DCC70AF432F14DAD68
624136CFCFC632BE18F60836301547B9B76BA429CD1EBAF779FF5317204CF9F4
DF7F807AF8853942D74C6DCB8E267DE1C6C716C56F0E95F8FD774270CF831D94
854DC72C333D64F431FC95B234A5FCF8D936401C43F7EB864010C856DCD288EC
FDBBAF8A845A408D9027B6C5DC3796D6FB7CCC724A3FB92374D7517FED73588B
C746323E267A1FC64A4CF0ED824E7AB16306E5134024835299B260178EE7412D
BAD219AB818099E3CF6A02DA579A45217BA7CEFA815B4C6D55CF40CDFBF4CEC8
FB2C6F5EF39C5AEC8EAE4BBA5B64C223111733AD2D42050359E1EEB6EEC6768F
5944FD67A532D1820069F012D3F12B8F13B2448AA7038CC2E74E9DFB83FE58E9
801AA4957A72B204BAC7D740EB4BB19BD9B0ACCC23A9A458990E2D02D57518E5
F348B1F47E268C5850566B4FEC8C026A5964CF9DC4B7512EDF68AB0D961D8F1A
6850F2E09C335565622E1C4B756DDCC94F65C4FC72095C341B14748CE1F866F5
570ABB5C18A491A595198862A5D2CE8945328B2566B4D054A049F5FB3E5B04B2
312B7C277D54EC5AF2CA09615D2D231690A9FD2F050285FF7BCE6FB4A7AE2464
D0CD3CE85D6776608ED76D04899F710F59D57371EDCC2E1C9C2A09BAB90DF847
169CF288A15E0456151EBB83FCEA276B87F27E0E81E1D098AE9DC083AA71F5D0
1167B6C23CBC618BC3C406B40D5C6D1CCD1633AEF7C6F7E67DBEA1D51C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1728
%!FontType1-1.0: SFRM1728 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1728, tcrm1728, larm1728, lbrm1728, lcrm1728, rxrm1728.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1728 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-174 -318 1347 949}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA4DC69A02016AD2E6C71441AF87012AB28D4F0F6
05A1B80B954FBE39F81BCEE3BB01BA5C5E565B5AA6FC97C7B6B67E84357BA44C
2937AA743FB277BB74912DA3E25E67CB130405792F93CE2E46116C19329DE8BA
EE04B792CB05588004C5CE06F43DA6B4B7A32927F2C6F890A67FF20BB1365D06
3253F39A8AE19D733468E9F5471E11AC6CCD6414D32B064FC8EBD4AF9566E2A6
EEDC38EC94CBA2D168CF68A2446460BEE734A3DBA42E9E603A42A39D56C31B65
CB46AFB15FB6173722CBB1A11340FD4D60C9C1E5FE87804590AFD4CFC5BE2708
DDBCEADB09C259533E430B4969688B9ECFF89E492D13C71C38F5CA9ADD1FF1EA
5616C0A52C7FC2599A22FA881C576B2EEBC0E178815E97DB82FC6C2CEEB0019C
4294AB22B62F31451ED2310FF7D31077065FA4DA0C578E84DC5B45EBE5910053
4705EA0BCD13654FDD9853F9B32E4256CE9281C2A01C858D43FCD28C34BAD1DD
A9438AC1802E3A2F18A13FE940B948290D3423E7E8BB8914B605290D931A5921
2BC316BA868C0A90877010683689700681E32A9F65839CD7E737EAB2B87C9A48
BC2DCD592E530EAD50C8F49FBDDB3E4720A71674E5FC179BC0D407B00919537E
67FB521FF5A4B32317C44EDC5EEB3159FB0E6EDC040841978A5D3210CCB067E4
75A43DF2B7106A8423E4C5FF6A84003A1BE40D879F6805380C89A7A0FD2DA384
B329C74A98351F8B9220CC285996BE5D96BA679E7E673E405F50224B637DBE75
627575F750101AC80E355A8A64AD4BE9FB767FECA90CCFC12980C2ED8C232AE7
812378FCE434163479FB95713E191379AD62E816A2CA0FC200886C93F399D8E7
3ECEE5C370A97A78A6DFDC87274692B7105649C253934138591372BAD90CEC89
926B614ED01565E2CAFA4372E014A669B5EEAC9D16C2D43E99D94227767293A9
F2CA64A5FA797068AB8EE8F3DB72667AA8DEE63EE5D56C3DF27BB14C4E93D0D1
262054F1343532E74B5C69138850D48616F293B715F3C1C75BF59B802FFF174F
4542587C63986A42B54453897489BD392E8E6F9BA6D267FB65BD962A7A9F0CEE
FC0E41E5B4E80F6AAB41B7D68C5084966C420281CC6EA1599773352351F8BB58
7E2687D774A0BBEBDC86146300E4A14A784DE5277A027A91E51C94C88251B2C8
04E97C560D014F170423BDFE29C61D7F52ADA839528F7AFC05F321024EB09CFA
4ED80A3328983B3E2586E701721B3901E1D7D5770F0A026F224332A04A76801D
1C783A8F2BEB9139E03DC0F2A4C65A27AFD8D18CC2BBCE8D00B3DC62E6AC2F06
BAEF03EE07C23866FF68BA5D5F4B0310A153EB711DC6E78925B0B431DE6884B0
141FF7FA87471BEA2C1BEE87B1B787568C99860C48F42C846625715FD9F7C696
B1640F391992EE2B47BA9BD7FAFE4A66A342E00623E979D2A4253A5BF8901F82
903B8BE25A7046ABD26007C8AF42FA63D25DDFFB5467EAA94F1A515BD7A9B892
3061CD16B6ACC38006097A804B97915EA840C5D661E4178E83FB9D37641FFF4E
DCDFCAE93B9AD7DF8E740CB8961D86FFA6F1748B19BA903DBAA71F511865C301
7176934072863EFEF65FF699D87AF66DC05C449D8DE544198444E417AFE89580
D6E9EF0C8683AB85AC932C8D17BE4E159D11328DF9A2E72EF20252A869B5F73F
6F21273615D281905CE549052C3BD503061CFDBC3211D3822209DDAC5E768B05
2C70474F1D9BB15496A4B55F95151805F2EFFA0034DE19E05E832DB6EE7224E6
6D6241D713E51980C496FA1530E11A4284864F6706CC6D44C9C78D3010317437
4DD0F557B692A0E8AF90F7661C5EB820B3FC38B4E1AEAE21820BBB37E2ED884C
AFD5F7C1819320B766793F249827D7B0C790C3A5FB67502C05B884A151C05113
E4DE2CCEF48277419D5B9D42F0AFB220FE1A5F81FE1ABDBA26588082039A41DB
1D1A15F42F80B4D4151C6D51FB2891C651232DF5BD046E1E2D29331D9968FC0D
479F6231A51EA218C8811C7A73FE4972A46DBDB6328A6D4829780FD70C215B9E
38F877C05CF6426686954CA7D278E676961117FEFF5772DFA677FA57BBBA0E10
BB4EA6871593A7B74FF1D0E54A37BFA5635B41C5659B3F3B3D7C63DD439F069E
1460F1AB98E428E8C7594AF07C4B1328C68D2D7FCF47AF0C37908D14E339FA60
C75AAA03B5E47F691C2A8699E0D111D9EACE7A4524D2ADC19254075422B20B5E
39606FBA9FC17A9DFABD5B1657FD6F3A111ECF2D6EBA722B7693BE034322C052
85167ADE14D5021FF1F7A2B6AFEC021C3EDF3EF4275673599B1BBDF3D2600F36
C668F21774FFC12FB17422B911491BA13543F7E6A24D8BD63637CDCE05C4B0C7
F6B190260E530F4F7D2BFD2064A45E3F43EDA42091698D554F4734A354911091
A94D2AD09A48086B40676990E4B52975AE8F0ACD3FF4396E823E40A4D153C58F
0D64885456358B9B0228CABDC0471ED87CB8EA8C242D45A0A3905AE977EF13BA
060168D2AA662E20F4C6AFC1072A1A22806D1AFD21C3D30B09DFF732DFBB3E8B
72914F0282025CBF03F3AD98CD7ACB9E6D12165593DBBA2B34349870A5E69641
9DD5566BF66C89130424C89BD0A034352C69C1214D0EBA1B16ACAE93A0C123C0
DBCB117C8A2B42557EF6A560CB40138AD0CDCBFB2683102821B9517794A198A7
0F1E83997C5C3CA85D1A8E81402B32E799C0951ED83CA057BA85C2649725BD34
57E248E1602136800DC2E34A8A09EA19A5AF9C0D07C58C45F2BC56B035C835C8
AE3109763D624FEC30D6C1DCDEE8E4E2D28F3B873772A542D25120FF314949EF
DC43A28D9B53B7CF6CBDF5629CAA794F95E2A174FEE7E8540E35D7100685DEE4
A0DBADB82856D6DD4C5C487A00CD257285B2C3549AD3277AF603E70605C648D6
87D94D467E63D5997933482274E278581CC7A844F8C6D7DC69CF55536EA2B458
CF664B9F2E4AF3D5C3BB741AE73DD883224F450994D23BCD7422B724600C7CC1
E42CAD8B6FD102AE6DBADF2F9A511FA87361EC25C282B6A0A49B5EDFA8FF27EE
3B27B2E237DBCFC504C34C369BA3DF75DEF6159361BB0B9BD43D4B8D7191A76E
5C3A3A27258296D054112AB99ACD7E875CEDD3BD22FC1D2CDF044CD8B0B266C8
C8A7CEB7B1B80D8DA4F78DEC07D5975B8CAF55F813A88CD2D6069B43721932EE
D26DB3906A4CE19E504733BFBB69DD3098564FE1780763BD089B0D57068B43EF
2DEC54639E56A18260ED02752519751C717DAFFF9FC5DE31E4E520360DCB5829
CB45EB3ECA8E612471C2DE17840410D6E0CE786342874FDFFF481C293E7DC27A
15348F53736894DB7812A6D71D08B987C5C58316C88BEEF9EB19596FBCC85854
98FBE13A062F050B780C960912F2C5D2EAEEC38AE9FE7ED7F00B1B172FCBC4EF
C5023BDF524E252129D50CD1415A0ECE0514405834ABC7308074735EE6E7AB65
672ED471DFA741DAC94750B607CF300BFD2A83B0EBD3A791CED6A7D376AE13F8
CFF48112F034EBE295E6B2B40C7843C77FF4B58EF85794BAAEE4BF03E66F3D87
52F322B9EA6F5EF64C3EA2E5F47D870C0C90BC6397D4C61B8E06FF466CA310BE
C375D9A081EFFD65FBF098209A70A220DE65717CAEFA0A82F8B05C2305E73225
83134461EB3CE33B960FE1B9AAD6B2638845279D79C08D09EF4454C3A8B22A85
7F7FBF66B7975E5B9D93437EC3F62EB032B061AB58683A39FAF0AFA050BC0E1A
B8CBA5D919BD56C6F78E343374A117F305E3191948D03668F2A196F19688BB6F
B56AAAB765CC2AD57E24764D92D4FCF6767219EAC6E10AC5CFD56DBFDBA0A9E6
CF8B200FB6A5BCD1D7FA7DC2333ACD3382E7A3654A11A996090AAE9F653AFF07
3087C2E4F721B55FBD8E43A845A80DB8255D9D8DD8C81D960E5723A96091CB41
D505E2DF4995E836833B9534EE4F2DFA7E168840254EDDDF4833B5B48F8A92F3
78FB9659B32314533E363ABCCAF25D9965CF6C945216D5005757C970C2004270
B5FFF4CA995B552D1DB0833E7F24F4EBF2D95DDD2092608D2A7E81AA54E3093E
DE6068C67A6BDDD7C983AB5B84AFB1ED342AF40098496AFCC52DE4AFE82FDD3A
DDEC125FC8E450DEC44F7C43F158E7D42E1401A8BF70A3C01BEA03C1ADBC7775
4FE919CBEFA5C9999CD46F001846E41606DD510D2C7D0BE9DD100DBC7E3A4278
FFC5AAE08B40C5E867BF2D9C069A73216540DA463702AC37E9F373789502818C
8B6C191BC641A5FF25FEB234CF7AA0AC8409532C515EFF90DA827BF8D40206BB
DA15586DAB0F3D90947C94C9D4473FCB39173022680DE45D51E4F77D6F54DCBA
E59BC1CBA36F7B648143DABB63C31D869339CE00344753C23C6303AC847DEE0F
651FB8EE239D0DA342BBDDBE46A7FCB37F78C3B0CA87738776104AF45BFF928E
0A767E0943F278EAA606E71495CF77CCD097059204CB2C5B04D1312714CE0388
1325876BF20B1D1DEEEA20769DAA8DD669C3630465995F1C803B9E195C66844C
2E93DBD608B2996BAFE6390034503C71BC5343F6ED7DE6C25BE453BD9A751F61
37DFEA833004F4689476B95143A7A94FD736C55A275D939BD09C743531E275C5
69901E1F10DF7F33A68B06CBDBDDB1611A44C7C56BF3B19308C7344EC8AA738E
89EE3D67BEAA85DEDE5F44EE9D9E2212C0890B99274322BC4E616E14D4D40BE8
2EDDCA28A4AB685FDDD6D3428690834FC231BB39EE084A1A79E136897788B2B2
38DB7E2BC21B3F12A88DD8305E833A81740029BD76D448CE2D8DB1CF6EE4E014
6BBECF17E6550769AE4BE7C0541599DD68E0DAE5956FDA55C71C9950167000EA
6EFBBCE12817A8A7EDBE6EF03154B8B1D64A694F1331B141F1A72844D7E3F34A
B7B39A19492923FEDB2BFE77310709DAC7DF51FD697E94AABCCD0B2D0D264ECA
DA594526FBA26021B4BA0AE04A9CCD6FDB0FC6323BD29DC4CAA823AD123D9AF1
9B0F9A55B876E6A12533F97174731B0D985ABABAF4856D1319C3784E906E3170
9F58977A6EF660824E290A945831889E14A85193BD9AD3168225CBD20F2915AF
B1BD9BFCF14236A4113C3313CC1DBB87042F678387CE849DFCCB120DD85CD394
1EECDB36183486CC9D63D99B1C2BB8D58DCA79C74713ED37BF37536A07A7DC28
71810A92E211DDDA1145031D37C2CFB46A86BF72E15E5B9143947896F60E6AA9
DC2161517ED8B89A85D9889A9D144AE9630C4F792E7BD7665A9E916225861275
A7E33DA0671CBE7B7007B508041609C6339042F32A0049126A66D83798B33929
9E81AFFC6D632D58439892A77146805768F0570F59266719A1DF9053753D44CA
1453E7FF6B27E5C562ADFF3910623BA00473F048EEFDB3FD4C41CC94E485395A
9345687DF91DDE798AD51B78A1A11EA1C3FA0CFC7B7205B8B36A0F3C3A9304A2
D66F80014EA3861089AC8F1622266F4359133B5092141C6E34DA6FE918E70B44
CF7012A4230CC908BAE9397F2A5132DBF9E99D2D40064A16BDCE8459A9754CAD
9B42076901D493CC58D8DA984DEAA74C0DF363EAA168F565A5CDF7A8C16AFC88
E7BF719AA4BE18AD7D62C9811CC547DBF44B6AAE724B43DE2F14A5B209788C9B
F4E38DCE898C5743D433646853162010FD16FF24FEEC1DB7E0A7DBC126999129
5B712A9A9258B465A3606E89BAEDCD9E573A2B023352069E80E226AFAECA8360
2B05915CA5FE986AE792AAEB87BC773D2549D6D74DAB538C2809D735AF12D1EC
D718BE4E606081A106519867F7E9BFDEBCF58DAD1BD8C209AAB55A37A42B541B
C32837297611F3015452EE3198D683C61DB7D323E4F705FEB2ADA203EF3DFCE1
A6B1FC96A2EDBD3DF6919BF7DE78B0D3263C0DE6916573DC22FB6D9E7A10EC56
645119995F085D950BE2E3A6FF12D4D04CAEB23C5A7CFEDC8FED89069B72F3C2
64E797125DF935E5584F44FEF6EA01CB26040427AEDF68DD98BBA84C7510B64A
13292289F9E78DE07E9C53FF6896A68FB5BA2D7514CCCB673F839CF8C96D5117
F514AFDF204A91E1274937A0AAAB87DCC412581BCF84DD78A65C109D56319C62
81AD62EA903ED017D6EC72FCB353A46F5342563C1BB386BA7D02FC2DB457DA80
1372453F4B61D9EB5A77D4E5124E3160143DC384AAF67E3CCD05186B02D2552D
C026E11ECBAFDF07D4C116A62EA8395B03E9BB66C8A394B0709B879305FD53EE
FCB67D7D5CB1034F753BA4E2B99A1FA292487813FFBC47DB80208E392BD64D40
64DE8C8C92202C50007C851355DC1D8EC857A8C3684A687ED7333988D8DCC0E8
AD6F2307E182CDECAB1305DF0D254A643F5DF670FA95AA16B7CFAE23B8C863F9
21409B4083D926A2DA14B4533643CD590C79BED27410B327490B2AE2FD582BF9
31348224657701332B164D974C161354A4851417679E5F62292FB1A87F7DE941
0A2F2832AC59F57F918228F0745F3F1AC0494E8C78D6D3E5EBCE9F78845CA020
4B440648C38216A6816E6F2E4A69E37C78B11346571BD83B0C983C34819B195E
232BB1658892D36134B54F946C80E0D9DA87F819F7EFDA9A91CC138B78BEC9DA
D41745AE76706DB31621401688A75F933BAAD798DC7F9FBB50BED32CBA53B48A
E0CA6FE8A9B3535350C1AD3EBD24C975486B2DB96C911E9425963487E15E5B1F
F712A8B463F94B51E27D423BB064C6F14E5FDDBF1680CEADA2F3FD6A5F4C34BD
60D2EB86CDB980FE04EB1594158FDD499BE1790E32F9389F30E793E0A9396CEC
8F5EAF7C1BDC2DA670C61311C81B5CDFB9D756AFA14AFB4FF75FF5286EE97780
A41017CF9D3B19B2B07386548B5D870909C5C87C3DBCF11F5182A8B94F4E456E
B4FB107938279484AA05BB802C4C0EBE088A4396F0829DC7B3A52D3C95FC379D
ABDC0CC388143B211D1DAE663F3B247D4BBFFE28A3F95579425F296DEA6F047D
5910CCE616D078542E6DF100ADCD91F3A561749BF7A2BD1D723F3F447B8FE5DA
4F79525A49B42F2E7857281E7C0ED9C543E87AEAECE686ABDDBC747F7D66F407
7946BC909743A0F49FC2C3D96B5FE5A106149D0E1D9109FC5F4FD3BBEB554CCC
B2B00B7EC240285A4C3F0B6F2271ABB1B4B5FA4E09C6F6C9B1CC8080FE974C95
4CDAC370045116DB259612C0EB3CED36968DED1932391ADBC452B546A8B952CD
CEF53AA5EA2561C4B5F83BA5350ED46029F5F1DC7C40D938693CAA35E1B775C6
22A99FF77E8286332325D129E28B1AAED7A8847F462DF2BE8160DD23B038A0C6
8B58E0473008F56ECD7B3253E4281AB44A724358DCBD2D90170043452788C328
D048BF1FD47C8D35DB825B354FF4AE6D9FA912B807BB39FD46A4F36C2A4DCB69
067E1E257C4F4F0AECB5864B07F98F3421CF1BA5A25EB665A40321C36B5B2312
DCAE06E1182424A79B724298A5A2C33BC8D808640C120A5FE96A0DAD3E3B26A1
72756CE650FD810C89DC5B25C7055369FA08CA39CC1E932C2C18A2E67C68E555
B8E0B0D332574014DFFDDC35DAACAC53AF1CF2AD97A076E3FA84CE3D7D6EFF89
806653418C0024A2455870EE642AA97204BD1DC113A1FB9C5695EF8B36258249
F633C93DA46808A0DB102B61F81E8BE5FCE3C233BA515D2819F61138C48845BA
B4682564E3FD561243E8BC58E5127977CB1AF5F8BACB45D9ABBF158FA0D823E8
9BF093B82C331ED80AF49BBC148DF29B0DFEE7AA232CBD9F80C03AEC242EC7B9
8C744760AB68EAFE6AD75FD9ED674B20A0A84ECC068AB593045590A5438C4BD6
8F6CD73072D1778D93421F7E288A1C0C624D369325A984E37ED147D7F4655D7E
EF660ACB91E42D2B5CC818AA44664E4555BF5C932079EB38FF6E5EA5498F9E1D
DB41D2D378478F256754BB55A900A3235B62E761FCC72579F842D3D18DA3AC3F
D10532DF12738BAD8FEC87E01C7A18E2CBA54BCA174716F4CD8435D3BEEC9A54
053265F8A43A725EDCAD2B03A9681A73062CF214A5C959B2B13BD57A2EF9F467
596A648B94830A7906CD9D2E11D91FF4BB05D47CB51B444981C351BF998BA260
EE32012AAD6AC4E78A4B7153C85B69CF5161161011ADD288F2051514437F38A4
BF6A54311ED4535555FFA621EDA59176FEE4394110977E61C8E7D8AD6036EA9E
BAAF1529CE95A57031FDBB9A33C5CF3CFB09436AA2BFBA2A5E2E84A64C7FDFFC
3805E979EF1A07CCD60A6277F696FD4BE7C62825B6026099A25119124D2F335E
E5A0A601B23ADB96A3979553F9D8F52C56F1DE0CB3C2F06B68F2BEB1F0F95C79
383C096A0234AC5EFA116E56C9C368459D6FD7353BFB055ED8EFB57A3D84A956
F6626E93FFD7AD1B6F1BEA00D65917A4D87AC06F315DE58B42727E145DEADFC3
9F8D6D74CD7530D46B75D4D604B7B9649DF3ED4E36219B56DE3A4384D6EB783C
1782B6B7EB12CD56575B7A656055097957A190664157CEB5489ABA8897EDBDE5
8E0F935AFCED2466F9154E96454D7FADFC9B3BF76B5F7FD1C83087D4D5F5414A
6E7AAD943F738688EEC38183D0D12AFABBC62DB8B4A807832949985755A1E6CD
8BD06E9D16CEFFCEE85AB1E8218ACBDB5887F7C9399CA34B38E1A218CD53C053
1466B3FA517D1A5A9B4C79ABC367135807F241A285D0505CCE5824A1DABA0783
DFE2162B65FC97FCF3C73382BCB3DC637900A93DF479CC1615B14AE199FC2879
6E4E0A43A89FB0160755E9F5EC8A1A52C1FADAA1E861F137807FF0F3B3415980
4A301B9CC2B53AD4FAD849B0C7B8E771CD8919788E93DCD41B6C132E44D75C0F
7F3A1A84FCD93159B9A3D05F86784BBA7B4BD7018291346F88B6D0ADBEFDCCDF
3E410389EEFF2B29C5BF451487DFA3A68B4A753A76DC3E574E0089251FF7553A
7A81A24FB319F40B48B736D006AF653330F48345697684BB796AEBB93BC99633
34781FA95D538880EBA458C9299F78B5C1A118B39A77DBBF158293A6344E26DE
E52553A2B58180201047047DDC8012F6E0C88BFED879E3C634067B98FED215EA
D2835133ED068D2007E71220E01059DE54C523438052B8CB7B4DA120B14F7900
ACCF993709826117A5F864DEA899DA6361C2DFD270D4AE5A3AC684694CB973B6
17D7CE9B5835B07ECFA8A81320E20488DF5C2D5872239DD704E06B393A3816C5
DE659734F46841BE225190B3C98C19D00A812CB9775134669DE728AC92E778CB
5D20E58E4A85B2EF310DF1FCD144B4FAD6207499764E142FAD1FB9F1739F7F14
84C8C0A667EC2718A349CD257DE4831A9486C33931F922F6CF6C3A37A0101DB2
5985C3A6B2530C5322533D3DD9301A01E560E07D26FF83CAC2BBF86E555560B7
0513420BA33066670F1D1FFF9EC80D2C2139EDE33CBA60E9338D2ACE14F38835
BD5F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (rapport.dvi)
@start /Fa 130[44 1[44 1[44 44 44 1[44 44 44 44 44 44
44 44 44 44 1[44 44 44 44 44 44 44 44 1[44 11[44 4[44
1[44 1[44 13[44 44 44 44 9[44 3[44 44 1[44 44 44 6[44
33[{ T1Encoding ReEncodeFont }39 83.022 /SFTT1000 rf
/Fb 134[44 44 44 44 44 44 44 44 44 44 44 44 44 44 1[44
44 44 44 44 44 44 44 44 44 8[44 3[44 44 44 1[44 5[44
44 2[44 44 44 44 1[44 6[44 10[44 1[44 2[44 7[44 34[{
 T1Encoding ReEncodeFont }41 83.022 /SFIT1000 rf /Fc
136[60 2[32 33 33 1[46 42 46 69 23 2[23 1[42 1[37 1[37
1[42 12[60 22[65 3[42 42 42 42 42 42 42 42 42 42 48[{
 T1Encoding ReEncodeFont }26 83.022 /SFRM1000 rf /Fd
202[33 33 33 33 33 49[{}5 58.1154 /CMR7 rf /Fe 227[36
28[{}1 83.022 /CMMI10 rf /Ff 199[46 1[46 1[46 1[46 46
46 48[{ TeXBase1Encoding ReEncodeFont }6 83.022 /NimbusSanL-Regu
rf /Fg 171[91 73 98 7[68 3[83 2[95 14[66 66 66 66 49[{
 T1Encoding ReEncodeFont }10 119.552 /SFBX1440 rf /Fh
140[38 38 4[81 3[27 4[54 2[49 13[54 72 5[61 76 1[35 7[73
9[49 4[49 1[49 48[{ T1Encoding ReEncodeFont }15 99.6264
/SFRM1200 rf /Fi 139[52 1[52 2[67 75 112 7[60 75 60 1[67
12[97 4[105 10[103 9[37 3[67 54[{ T1Encoding ReEncodeFont }14
143.462 /SFRM1728 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 TeXcolorgray 0
TeXcolorgray 1249 432 a Fi(TD)45 b(6:)h(Ordonnancemen)l(t)1647
672 y Fh(LAKSIR)33 b(Rida)1668 855 y(27)f(mars)h(2020)0
1213 y Fg(1)131 b(F)l(CFS)125 3714 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 17.08206 T 15 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 17.08206
0.0 17.08206   /Lineto /lineto load def 0  setlinejoin false Line 
gsave 0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore grestore grestore 0.0 17.08206 T } repeat
end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  17.08206 0.0 T 21 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 290.39505 0.0
17.08206   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 17.08206 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 17.08206 375.80544 290.39505 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714
a
tx@Dict begin { 17.08206 17.08206 } PutCoor PutBegin  end
 125 3714 a 102 3806 a Ff(0)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125
3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 51.24619 17.08206 } PutCoor PutBegin  end
 125 3714 a 102 3806 a Ff(2)125
3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 85.41031 17.08206 } PutCoor PutBegin  end
 125
3714 a 102 3806 a Ff(4)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 119.57443 17.08206 } PutCoor PutBegin  end
 125 3714 a 102 3806 a Ff(6)125
3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 153.73856 17.08206 } PutCoor PutBegin  end
 125
3714 a 102 3806 a Ff(8)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 187.90268 17.08206 } PutCoor PutBegin  end
 125 3714 a 79 3806 a Ff(10)125
3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 222.0668 17.08206 } PutCoor PutBegin  end
 125
3714 a 79 3806 a Ff(12)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 256.23093 17.08206 } PutCoor PutBegin  end
 125 3714 a 79 3806 a Ff(14)125
3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 290.39505 17.08206 } PutCoor PutBegin  end
 125
3714 a 79 3806 a Ff(16)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 324.55917 17.08206 } PutCoor PutBegin  end
 125 3714 a 79 3806 a Ff(18)125
3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 358.7233 17.08206 } PutCoor PutBegin  end
 125
3714 a 79 3806 a Ff(20)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { -17.08206 273.31299 } PutCoor PutBegin  end
 125 3714 a 102 3783 a Fe(\034)138
3795 y Fd(1)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714
a 125 3714 a
tx@Dict begin { -17.08206 222.0668 } PutCoor PutBegin  end
 125 3714 a 102 3783 a Fe(\034)138 3795 y
Fd(2)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125
3714 a
tx@Dict begin { -17.08206 170.82062 } PutCoor PutBegin  end
 125 3714 a 102 3783 a Fe(\034)138 3795 y Fd(3)125
3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { -17.08206 119.57443 } PutCoor PutBegin  end
 125
3714 a 102 3783 a Fe(\034)138 3795 y Fd(4)125 3714 y
tx@Dict begin  PutEnd  end

125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { -17.08206 68.32825 } PutCoor PutBegin  end
 125 3714
a 102 3783 a Fe(\034)138 3795 y Fd(5)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 34.16412 17.08206 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 85.41031 17.08206 85.41031   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 136.6565 17.08206 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 187.90268 17.08206 187.90268   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 239.14886 17.08206 239.14886   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 17.08206 273.31299 17.08206 239.14886   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 51.24619 222.0668 51.24619 187.90268   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 85.41031 170.82062 85.41031 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 119.57443 119.57443 119.57443 85.41031   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 153.73856 68.32825 153.73856 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.08206 239.14886 68.32825 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714
a
tx@Dict begin { 42.70515 239.14886 } PutCoor PutBegin  end
 125 3714 a 125 3714 a
tx@Dict begin  PutEnd  end
 125 3714 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 68.32825 187.90268 170.82062 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 119.57443 187.90268 } PutCoor PutBegin  end
 125 3714
a 125 3714 a
tx@Dict begin  PutEnd  end
 125 3714 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.82062 136.6565 239.14886 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 204.98474 136.6565 } PutCoor PutBegin  end
 125 3714 a 125 3714
a
tx@Dict begin  PutEnd  end
 125 3714 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 239.14886 85.41031 324.55917 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 281.85402 85.41031 } PutCoor PutBegin  end
 125 3714 a 125 3714 a
tx@Dict begin  PutEnd  end
 125
3714 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 324.55917 34.16412 358.7233 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 341.64124 34.16412 } PutCoor PutBegin  end
 125 3714 a 125 3714 a
tx@Dict begin  PutEnd  end
 125 3714
a 0 3913 a Fc(T)-7 b(otal)27 b(completion)g(time)h(=)g(43)0
4013 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(23)0
4112 y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(23)p
76 4391 4 100 v 96 4391 V 0 4362 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 61 w(f)e(c)g(f)g(s)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 13 w(-)j(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray
76 4491 V 96 4491 V 0 4461 a Fc(2)p 0 TeXcolorgray 90
w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(f)g(c)g(f)g(s)p 0 TeXcolorgray 9 w(\()p 0 TeXcolorgray
11 w(t)g(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 15 w(,)p 0 TeXcolorgray
64 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 15 w(,)p 0 0.4 0
TeXcolorrgb 64 w(i)h(n)g(t)p 0 TeXcolorgray 61 w(*)p
0 TeXcolorgray 63 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
10 w(\))61 b({)p 76 4591 V 96 4591 V 0 4561 a Fc(3)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
298 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(F)h(I)g(X)g(E)g(D)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 62 w(:)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(f)g(i)g(r)g(s)g(t)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 66 w(c)g(o)g(m)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(f)g(i)g(r)g(s)g
(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 66 w(s)g(e)g(r)g(v)g(e)g(d)p 0
TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 66 w(*)f(/)p 0 TeXcolorgray 76 4690 V 96
4690 V 0 4660 a Fc(4)p 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 298 w Fb(/)g(*)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
64 w(C)h(h)g(o)g(s)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 63 w(f)g(i)g(r)g(s)g(t)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 66 w(r)g(e)g(a)g(d)g
(y)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 67 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(i)e(n)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(r)h(e)g(a)g(d)g(y)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 66 w(t)g(l)g(i)g(s)g(t)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 12 w(*)f(/)p 0 TeXcolorgray 76 4790 V 96
4790 V 0 4760 a Fc(5)p 0 TeXcolorgray 299 w Fa(t)h(n)g(o)g(d)g(e)p
0 TeXcolorgray 10 w(*)p 0 TeXcolorgray 64 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 11 w(=)p 0 TeXcolorgray 11 w(r)f(e)g(a)g(d)g(y)p
0 TeXcolorgray 15 w(-)j(>)p 0 TeXcolorgray 11 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 10 w(;)p 76 4890 V 96 4890 V 0 4860 a
Fc(6)296 b Fa(*)p 0 TeXcolorgray 11 w(d)7 b(e)g(l)g(t)g(a)p
0 TeXcolorgray 63 w(=)p 0 TeXcolorgray 63 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 12 w(-)i(>)p 0 TeXcolorgray 10 w(p)d(r)g(o)g(c)p
0 TeXcolorgray 13 w(-)j(>)p 0 TeXcolorgray 11 w(r)f(e)g(m)g(a)g(i)g(n)g
(i)g(n)g(g)p 0 TeXcolorgray 7 w(;)p 0.3 0 0.1 TeXcolorrgb
63 w Fb(/)e(/)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(h)h(o)g(w)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(m)g(u)g(c)g(h)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(t)g(i)g(m)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(i)f(s)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(l)h(e)g(f)g(t)p
0 TeXcolorgray 76 4989 V 96 4989 V 0 4959 a Fc(7)p 0 0.4 0
TeXcolorrgb 299 w Fa(r)g(e)g(t)g(u)g(r)g(n)p 0 TeXcolorgray
0 TeXcolorgray 67 w(c)g(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray
11 w(-)i(>)p 0 TeXcolorgray 11 w(p)e(r)g(o)g(c)p 0 TeXcolorgray
9 w(;)p 76 5089 V 96 5089 V 0 5059 a Fc(8)87 b Fa(})p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1929 5400
a Fc(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 83 a Fg(2)131 b(RR)125 2584 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 17.08206 T 15 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 17.08206
0.0 17.08206   /Lineto /lineto load def 0  setlinejoin false Line 
gsave 0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore grestore grestore 0.0 17.08206 T } repeat
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  17.08206 0.0 T 21 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 290.39505 0.0
17.08206   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 17.08206 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 17.08206 375.80544 290.39505 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 17.08206 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(0)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 51.24619 17.08206 } PutCoor PutBegin  end
 125 2584
a 102 2677 a Ff(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 85.41031 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(4)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 119.57443 17.08206 } PutCoor PutBegin  end
 125 2584
a 102 2677 a Ff(6)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 153.73856 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(8)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 187.90268 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(10)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 222.0668 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(12)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 256.23093 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(14)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 290.39505 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(16)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 324.55917 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(18)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 358.7233 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(20)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 273.31299 } PutCoor PutBegin  end
 125 2584
a 102 2653 a Fe(\034)138 2665 y Fd(1)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 222.0668 } PutCoor PutBegin  end
 125 2584 a 102 2653
a Fe(\034)138 2665 y Fd(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 170.82062 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138
2665 y Fd(3)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584
a 125 2584 a
tx@Dict begin { -17.08206 119.57443 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y
Fd(4)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { -17.08206 68.32825 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y Fd(5)125
2584 y
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 34.16412 17.08206 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 85.41031 17.08206 85.41031   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 136.6565 17.08206 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 187.90268 17.08206 187.90268   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 239.14886 17.08206 239.14886   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 17.08206 273.31299 17.08206 239.14886   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 51.24619 222.0668 51.24619 187.90268   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 85.41031 170.82062 85.41031 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 119.57443 119.57443 119.57443 85.41031   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 153.73856 68.32825 153.73856 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.08206 239.14886 34.16412 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 25.6231 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 34.16412 239.14886 51.24619 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 42.70515 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 51.24619 187.90268 68.32825 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 59.78722 187.90268 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 68.32825 239.14886 85.41031 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 76.86928 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 85.41031 187.90268 102.49237 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 93.95134 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 102.49237 136.6565 119.57443 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 111.0334 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 119.57443 187.90268 136.6565 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 128.11546 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 136.6565 85.41031 153.73856 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 145.19753 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 153.73856 136.6565 170.82062 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 162.27959 136.6565 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.82062 187.90268 187.90268 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 179.36165 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 187.90268 34.16412 204.98474 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 196.44371 34.16412 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 204.98474 85.41031 222.0668 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 213.52577 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 222.0668 136.6565 239.14886 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 230.60783 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 239.14886 187.90268 256.23093 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 247.6899 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 256.23093 34.16412 273.31299 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 264.77196 34.16412 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 273.31299 85.41031 290.39505 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 281.85402 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 290.39505 136.6565 307.47711 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 298.93608 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 307.47711 187.90268 324.55917 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 316.01814 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 324.55917 85.41031 341.64124 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 333.1002 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 341.64124 85.41031 358.7233 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 350.18227 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a 0 2784 a Fc(T)-7 b(otal)27
b(completion)g(time)h(=)g(54)0 2883 y(T)-7 b(otal)27
b(w)n(aiting)g(time)h(=)f(34)0 2983 y(T)-7 b(otal)27
b(resp)r(onse)f(time)j(=)e(4)p 76 3262 4 100 v 96 3262
V 0 3232 a(1)p 0.3 0 0.1 TeXcolorrgb 89 w Fb(/)6 b(*)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
59 w(r)t(r)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 12
w(-)h(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray 76
3362 V 96 3362 V 0 3332 a Fc(2)p 0 TeXcolorgray 90 w
Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(r)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray 12
w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 16 w(,)p 0 TeXcolorgray
63 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 16 w(,)p 0 0.4 0
TeXcolorrgb 63 w(i)h(n)g(t)p 0 TeXcolorgray 61 w(*)p
0 TeXcolorgray 63 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
11 w(\))61 b({)p 76 3461 V 96 3461 V 0 3431 a Fc(3)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
298 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(F)h(I)g(X)g(E)g(D)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 62 w(:)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(R)f(o)g(u)g(n)g(d)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 15 w(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 12 w(R)h(o)g(b)g(i)g(n)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
64 w(*)f(/)p 0 TeXcolorgray 76 3561 V 96 3561 V 0 3531
a Fc(4)p 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 298 w Fb(/)g(/)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(T)h(i)g(m)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 65 w(q)h(u)g(a)g(n)g(t)g(u)g(m)p 0 TeXcolorgray
76 3660 V 96 3660 V 0 3631 a Fc(5)p 0 0.4 0 TeXcolorrgb
299 w Fa(i)f(n)g(t)p 0 TeXcolorgray 0 TeXcolorgray 64
w(q)h(u)g(a)g(n)g(t)g(u)g(m)p 0 TeXcolorgray 59 w(=)62
b(1)6 b(;)p 76 3760 V 96 3760 V 0 3730 a Fc(6)p 76 3860
V 96 3860 V 0 3830 a(7)p 0 TeXcolorgray 299 w Fa(t)h(n)g(o)g(d)g(e)p
0 TeXcolorgray 63 w(*)p 0 TeXcolorgray 63 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 64 w(=)p 0 TeXcolorgray 63 w(r)f(e)g(a)g(d)g(y)p
0 TeXcolorgray 15 w(-)j(>)p 0 TeXcolorgray 11 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 10 w(;)p 0.3 0 0.1 TeXcolorrgb 63 w Fb(/)f(*)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(C)h(h)g(o)g(s)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(f)g(i)g(r)g(s)g(t)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(r)g(e)g(a)g(d)g
(y)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 67 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(i)e(n)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
76 3959 V 96 3959 V 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
507 3929 a(r)h(e)g(a)g(d)g(y)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(l)g(i)g(s)g
(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 13 w(*)f(/)p
0 TeXcolorgray 76 4059 V 96 4059 V 0 4029 a Fc(8)p 0
TeXcolorgray 299 w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray
63 w(*)p 0 TeXcolorgray 64 w(c)h(h)g(o)g(s)g(e)g(n)g(P)p
0 TeXcolorgray 59 w(=)p 0 TeXcolorgray 63 w(c)f(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 12 w(-)i(>)p 0 TeXcolorgray 10 w(p)e(r)g(o)g(c)p
0 TeXcolorgray 9 w(;)p 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 168 w Fb(/)f(*)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(T)h(h)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 68 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 8 w(*)e(/)p 0 TeXcolorgray 76 4159
V 96 4159 V 0 4129 a Fc(9)p 76 4258 V 96 4258 V -41 4228
a(10)p 0 TeXcolorgray 298 w Fa(d)h(e)g(l)p 0 TeXcolorgray
8 w(\()p 0 TeXcolorgray 10 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray
15 w(,)p 0 TeXcolorgray 13 w(c)i(h)g(o)g(s)g(e)g(n)g(P)p
0 TeXcolorgray 6 w(\))g(;)p 0.3 0 0.1 TeXcolorrgb 63
w Fb(/)e(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
116 w(R)h(e)g(m)g(o)g(v)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 67 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
62 w(c)g(h)g(o)g(s)g(e)g(n)g(P)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(f)f(r)g(o)g(m)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(t)g(h)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(l)g(i)g(s)g(t)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 62 w(")p 76 4358 V 96 4358 V 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 507 4328 a(r)g(e)g(a)g(d)g(y)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 10 w(")p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(*)f(/)p 0 TeXcolorgray 76 4457 V 96 4457 V -41 4428
a Fc(11)p 0 TeXcolorgray 507 w Fa(a)h(d)g(d)p 0 TeXcolorgray
8 w(\()p 0 TeXcolorgray 10 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray
15 w(,)p 0 TeXcolorgray 13 w(c)i(h)g(o)g(s)g(e)g(n)g(P)p
0 TeXcolorgray 6 w(\))g(;)p 0.3 0 0.1 TeXcolorrgb 63
w Fb(/)e(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 64 w(A)h(d)g(d)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(t)g(h)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(p)h(r)g(o)g(c)g(c)g(e)g(s)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 61 w(i)f(n)g(t)g(o)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 63 w(e)g(n)g(d)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(o)f(f)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(p)h(r)g(o)g(c)g(s)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 76 4557 V 96 4557 V 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 716 4527 a(l)g(i)g(s)g(t)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(*)f(/)p 0 TeXcolorgray 76 4657 V 96 4657 V -41 4627
a Fc(12)p 76 4756 V 96 4756 V -41 4726 a(13)295 b Fa(*)p
0 TeXcolorgray 11 w(d)7 b(e)g(l)g(t)g(a)p 0 TeXcolorgray
63 w(=)p 0 TeXcolorgray 64 w(q)h(u)g(a)g(n)g(t)g(u)g(m)p
0 TeXcolorgray 6 w(;)p 76 4856 V 96 4856 V -41 4826 a
Fc(14)p 76 4956 V 96 4956 V -41 4926 a(15)p 0 0.4 0 TeXcolorrgb
298 w Fa(r)f(e)g(t)g(u)g(r)g(n)p 0 TeXcolorgray 0 TeXcolorgray
120 w(c)h(h)g(o)g(s)g(e)g(n)g(P)p 0 TeXcolorgray 6 w(;)p
76 5055 V 96 5055 V -41 5025 a Fc(16)86 b Fa(})p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1929 5400 a Fc(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 83 a Fg(3)131 b(SJF)125 2584 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 17.08206 T 15 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 17.08206
0.0 17.08206   /Lineto /lineto load def 0  setlinejoin false Line 
gsave 0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore grestore grestore 0.0 17.08206 T } repeat
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  17.08206 0.0 T 21 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 290.39505 0.0
17.08206   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 17.08206 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 17.08206 375.80544 290.39505 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 17.08206 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(0)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 51.24619 17.08206 } PutCoor PutBegin  end
 125 2584
a 102 2677 a Ff(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 85.41031 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(4)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 119.57443 17.08206 } PutCoor PutBegin  end
 125 2584
a 102 2677 a Ff(6)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 153.73856 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(8)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 187.90268 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(10)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 222.0668 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(12)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 256.23093 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(14)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 290.39505 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(16)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 324.55917 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(18)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 358.7233 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(20)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 273.31299 } PutCoor PutBegin  end
 125 2584
a 102 2653 a Fe(\034)138 2665 y Fd(1)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 222.0668 } PutCoor PutBegin  end
 125 2584 a 102 2653
a Fe(\034)138 2665 y Fd(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 170.82062 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138
2665 y Fd(3)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584
a 125 2584 a
tx@Dict begin { -17.08206 119.57443 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y
Fd(4)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { -17.08206 68.32825 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y Fd(5)125
2584 y
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 34.16412 17.08206 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 85.41031 17.08206 85.41031   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 136.6565 17.08206 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 187.90268 17.08206 187.90268   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 239.14886 17.08206 239.14886   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 17.08206 273.31299 17.08206 239.14886   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 51.24619 222.0668 51.24619 187.90268   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 85.41031 170.82062 85.41031 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 119.57443 119.57443 119.57443 85.41031   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 153.73856 68.32825 153.73856 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.08206 239.14886 68.32825 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 42.70515 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 68.32825 187.90268 170.82062 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 119.57443 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.82062 34.16412 204.98474 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 187.90268 34.16412 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 204.98474 136.6565 273.31299 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 239.14886 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 273.31299 85.41031 358.7233 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 316.01814 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a 0 2784 a Fc(T)-7 b(otal)27 b(completion)g(time)h(=)g(38)0
2883 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(18)0
2983 y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(18)p
76 3262 4 100 v 96 3262 V 0 3232 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(s)d(j)g(f)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 14 w(-)k(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray
76 3362 V 96 3362 V 0 3332 a Fc(2)p 0 TeXcolorgray 90
w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(s)g(j)g(f)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray
11 w(t)g(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 16 w(,)p 0 TeXcolorgray
63 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 64 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 15 w(,)p 0 0.4 0
TeXcolorrgb 64 w(i)h(n)g(t)p 0 TeXcolorgray 60 w(*)p
0 TeXcolorgray 64 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
10 w(\))61 b({)p 76 3461 V 96 3461 V 0 3431 a Fc(3)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
298 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(F)h(I)g(X)g(E)g(D)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 66 w(S)h(h)g(o)g(r)g(t)g(e)g(s)g(t)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
62 w(J)f(o)g(b)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(F)g(i)g(r)g(s)g(t)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 65 w(*)f(/)p 0 TeXcolorgray 76 3561 V 96
3561 V 0 3531 a Fc(4)p 76 3660 V 96 3660 V 0 3631 a(5)p
0 TeXcolorgray 299 w Fa(t)h(n)g(o)g(d)g(e)p 0 TeXcolorgray
63 w(*)p 0 TeXcolorgray 63 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 64 w(=)p 0 TeXcolorgray 63 w(r)f(e)g(a)g(d)g(y)p
0 TeXcolorgray 15 w(-)j(>)p 0 TeXcolorgray 11 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 10 w(;)p 0.3 0 0.1 TeXcolorrgb 63 w Fb(/)f(*)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(C)h(h)g(o)g(s)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(f)g(i)g(r)g(s)g(t)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(r)g(e)g(a)g(d)g
(y)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 67 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(i)e(n)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
76 3760 V 96 3760 V 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
507 3730 a(r)h(e)g(a)g(d)g(y)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(l)g(i)g(s)g
(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 13 w(*)f(/)p
0 TeXcolorgray 76 3860 V 96 3860 V 0 3830 a Fc(6)p 0
TeXcolorgray 299 w Fa(t)h(n)g(o)g(d)g(e)p 0 TeXcolorgray
63 w(*)p 0 TeXcolorgray 64 w(s)h(o)g(r)g(t)g(e)g(s)g(t)g(P)p
0 TeXcolorgray 59 w(=)p 0 TeXcolorgray 115 w(r)e(e)g(a)g(d)g(y)p
0 TeXcolorgray 15 w(-)j(>)p 0 TeXcolorgray 11 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 10 w(;)p 0.3 0 0.1 TeXcolorrgb 63 w Fb(/)f(*)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(P)i(r)g(o)g(c)g(e)g(s)g(s)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
62 w(w)f(i)g(t)g(h)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(s)h(m)g(a)g(l)g(l)g(e)g(s)g(t)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 76 3959 V 96 3959 V 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 508 3929 a(e)g(x)g(e)g(c)g(u)g(t)g(i)g(o)g(n)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 62 w(t)f(i)g(m)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 11 w(*)f(/)p 0 TeXcolorgray 76 4059 V 96
4059 V 0 4029 a Fc(7)p 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 298 w Fb(/)g(*)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 116 w(F)h(i)g(n)g(d)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 65 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
62 w(w)f(i)g(t)g(h)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(m)h(i)g(n)g(i)g(m)g(u)g(m)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 62 w(r)g(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 62 w(t)f(i)g(m)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(a)f(t)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(e)h(v)g(e)g(r)g(y)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(s)g(i)g(n)g(g)g
(l)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 67 w(t)g(i)g(m)g(e)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 76 4159 V 96 4159 V 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 507 4129 a(l)g(a)g(p)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
62 w(*)f(/)p 0 TeXcolorgray 76 4258 V 96 4258 V 0 4228
a Fc(8)p 0 0.4 0 TeXcolorrgb 299 w Fa(w)h(h)g(i)g(l)g(e)p
0 TeXcolorgray 10 w(\()p 0 TeXcolorgray 11 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 66 w(!)f(=)p 0 TeXcolorgray 64 w(N)h(U)g(L)g(L)p
0 TeXcolorgray 10 w(\))p 76 4358 V 96 4358 V 0 4328 a
Fc(9)296 b Fa({)p 76 4457 V 96 4457 V -41 4428 a Fc(10)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
506 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(S)i(e)g(l)g(e)g(c)g(t)g(s)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 61 w(f)f(o)g(r)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(e)h(x)g(e)g(c)g
(u)g(t)g(i)g(o)g(n)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(t)f(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(w)h(a)g(i)g(t)g(i)g(n)g(g)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(p)g(r)g(o)g(c)g(e)g(s)g(s)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 61 w(w)f(i)g(t)g(h)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(t)g(h)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(s)h(h)g(o)g(r)g
(t)g(e)g(s)g(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
76 4557 V 96 4557 V 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
717 4527 a(e)g(x)g(e)g(c)g(u)g(t)g(i)g(o)g(n)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
62 w(t)f(i)g(m)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(*)f(/)p 0 TeXcolorgray
76 4657 V 96 4657 V -41 4627 a Fc(11)p 0 0.4 0 TeXcolorrgb
924 w Fa(i)g(f)p 0 TeXcolorgray 11 w(\()g(\()p 0 TeXcolorgray
11 w(c)h(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray 12 w(-)i(>)p
0 TeXcolorgray 10 w(p)d(r)g(o)g(c)p 0 TeXcolorgray 13
w(-)j(>)p 0 TeXcolorgray 11 w(r)f(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p
0 TeXcolorgray 7 w(\))62 b(<)e(\()p 0 TeXcolorgray 11
w(s)7 b(o)g(r)g(t)g(e)g(s)g(t)g(P)p 0 TeXcolorgray 14
w(-)i(>)p 0 TeXcolorgray 9 w(p)d(r)g(o)g(c)p 0 TeXcolorgray
14 w(-)j(>)p 76 4756 V 96 4756 V 0 TeXcolorgray 1135
4726 a(r)f(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p 0 TeXcolorgray
7 w(\))h(\))p 76 4856 V 96 4856 V -41 4826 a Fc(12)504
b Fa({)p 76 4956 V 96 4956 V -41 4926 a Fc(13)p 76 5055
V 96 5055 V -41 5025 a(14)p 0 TeXcolorgray 1345 w Fa(s)8
b(o)g(r)g(t)g(e)g(s)g(t)g(P)p 0 TeXcolorgray 59 w(=)p
0 TeXcolorgray 63 w(c)f(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray
11 w(;)p 0.3 0 0.1 TeXcolorrgb 63 w Fb(/)f(*)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
64 w(T)h(h)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 61 w(t)f(h)g(a)g(t)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(w)g(i)g(l)g(l)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 63 w(b)f(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
76 5155 V 96 5155 V 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
1554 5125 a(e)i(x)g(e)g(c)g(u)g(t)g(e)g(d)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 8 w(*)e(/)p 0 TeXcolorgray 0 TeXcolorgray
1929 5400 a Fc(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 76 113 4 100 v 96 113 V -41 83 a Fc(15)504
b Fa(})p 76 213 V 96 213 V -41 183 a Fc(16)p 0 TeXcolorgray
925 w Fa(c)7 b(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray 65
w(=)p 0 TeXcolorgray 63 w(c)g(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray
12 w(-)i(>)p 0 TeXcolorgray 10 w(n)e(e)g(x)g(t)p 0 TeXcolorgray
9 w(;)p 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 115 w Fb(/)f(*)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(C)h(h)g(o)g(s)g
(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 66 w(t)g(h)g(e)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(n)g(e)g(x)g(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 61 w(*)e(/)p 0 TeXcolorgray 76 312 V 96 312
V -41 282 a Fc(17)504 b Fa(})p 76 412 V 96 412 V -41
382 a Fc(18)p 76 511 V 96 511 V -41 482 a(19)295 b Fa(*)p
0 TeXcolorgray 11 w(d)7 b(e)g(l)g(t)g(a)p 0 TeXcolorgray
63 w(=)p 0 TeXcolorgray 63 w(s)g(o)g(r)g(t)g(e)g(s)g(t)g(P)p
0 TeXcolorgray 15 w(-)i(>)p 0 TeXcolorgray 9 w(p)d(r)g(o)g(c)p
0 TeXcolorgray 13 w(-)j(>)p 0 TeXcolorgray 12 w(r)f(e)g(m)g(a)g(i)g(n)g
(i)g(n)g(g)p 0 TeXcolorgray 7 w(;)p 76 611 V 96 611 V
-41 581 a Fc(20)p 76 711 V 96 711 V -41 681 a(21)p 0 0.4 0
TeXcolorrgb 298 w Fa(r)f(e)g(t)g(u)g(r)g(n)p 0 TeXcolorgray
0 TeXcolorgray 67 w(s)g(o)g(r)g(t)g(e)g(s)g(t)g(P)p 0
TeXcolorgray 14 w(-)i(>)p 0 TeXcolorgray 11 w(p)e(r)g(o)g(c)p
0 TeXcolorgray 9 w(;)p 76 810 V 96 810 V -41 780 a Fc(22)86
b Fa(})p 0 TeXcolorgray 0 TeXcolorgray 0 1105 a Fg(4)131
b(SR)-11 b(TF)125 3606 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 17.08206 T 15 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 17.08206
0.0 17.08206   /Lineto /lineto load def 0  setlinejoin false Line 
gsave 0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore grestore grestore 0.0 17.08206 T } repeat
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  17.08206 0.0 T 21 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 290.39505 0.0
17.08206   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 17.08206 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 17.08206 375.80544 290.39505 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606
a
tx@Dict begin { 17.08206 17.08206 } PutCoor PutBegin  end
 125 3606 a 102 3699 a Ff(0)125 3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125
3606 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 51.24619 17.08206 } PutCoor PutBegin  end
 125 3606 a 102 3699 a Ff(2)125
3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 85.41031 17.08206 } PutCoor PutBegin  end
 125
3606 a 102 3699 a Ff(4)125 3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 119.57443 17.08206 } PutCoor PutBegin  end
 125 3606 a 102 3699 a Ff(6)125
3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 153.73856 17.08206 } PutCoor PutBegin  end
 125
3606 a 102 3699 a Ff(8)125 3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 187.90268 17.08206 } PutCoor PutBegin  end
 125 3606 a 79 3699 a Ff(10)125
3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 222.0668 17.08206 } PutCoor PutBegin  end
 125
3606 a 79 3699 a Ff(12)125 3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 256.23093 17.08206 } PutCoor PutBegin  end
 125 3606 a 79 3699 a Ff(14)125
3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 290.39505 17.08206 } PutCoor PutBegin  end
 125
3606 a 79 3699 a Ff(16)125 3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 324.55917 17.08206 } PutCoor PutBegin  end
 125 3606 a 79 3699 a Ff(18)125
3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 358.7233 17.08206 } PutCoor PutBegin  end
 125
3606 a 79 3699 a Ff(20)125 3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { -17.08206 273.31299 } PutCoor PutBegin  end
 125 3606 a 102 3675 a Fe(\034)138
3687 y Fd(1)125 3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606
a 125 3606 a
tx@Dict begin { -17.08206 222.0668 } PutCoor PutBegin  end
 125 3606 a 102 3675 a Fe(\034)138 3687 y
Fd(2)125 3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125
3606 a
tx@Dict begin { -17.08206 170.82062 } PutCoor PutBegin  end
 125 3606 a 102 3675 a Fe(\034)138 3687 y Fd(3)125
3606 y
tx@Dict begin  PutEnd  end
 125 3606 a 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { -17.08206 119.57443 } PutCoor PutBegin  end
 125
3606 a 102 3675 a Fe(\034)138 3687 y Fd(4)125 3606 y
tx@Dict begin  PutEnd  end

125 3606 a 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { -17.08206 68.32825 } PutCoor PutBegin  end
 125 3606
a 102 3675 a Fe(\034)138 3687 y Fd(5)125 3606 y
tx@Dict begin  PutEnd  end
 125 3606
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 34.16412 17.08206 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 85.41031 17.08206 85.41031   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 136.6565 17.08206 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 187.90268 17.08206 187.90268   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 239.14886 17.08206 239.14886   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 17.08206 273.31299 17.08206 239.14886   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 51.24619 222.0668 51.24619 187.90268   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 85.41031 170.82062 85.41031 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 119.57443 119.57443 119.57443 85.41031   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 153.73856 68.32825 153.73856 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.08206 239.14886 34.16412 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606
a
tx@Dict begin { 25.6231 239.14886 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 34.16412 239.14886 51.24619 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 42.70515 239.14886 } PutCoor PutBegin  end
 125 3606
a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 51.24619 239.14886 68.32825 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 59.78722 239.14886 } PutCoor PutBegin  end
 125 3606 a 125 3606
a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 68.32825 187.90268 85.41031 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 76.86928 187.90268 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125
3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 85.41031 136.6565 102.49237 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3606
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 93.95134 136.6565 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 102.49237 136.6565 119.57443 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
3606 a 125 3606 a
tx@Dict begin { 111.0334 136.6565 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 119.57443 136.6565 136.6565 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606
a
tx@Dict begin { 128.11546 136.6565 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 136.6565 136.6565 153.73856 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 145.19753 136.6565 } PutCoor PutBegin  end
 125 3606
a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 153.73856 34.16412 170.82062 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 162.27959 34.16412 } PutCoor PutBegin  end
 125 3606 a 125 3606
a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.82062 34.16412 187.90268 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 179.36165 34.16412 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125
3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 187.90268 187.90268 204.98474 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3606
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 196.44371 187.90268 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 204.98474 187.90268 222.0668 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
3606 a 125 3606 a
tx@Dict begin { 213.52577 187.90268 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 222.0668 187.90268 239.14886 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606
a
tx@Dict begin { 230.60783 187.90268 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 239.14886 187.90268 256.23093 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 247.6899 187.90268 } PutCoor PutBegin  end
 125 3606
a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 256.23093 187.90268 273.31299 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 264.77196 187.90268 } PutCoor PutBegin  end
 125 3606 a 125 3606
a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 273.31299 85.41031 290.39505 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 281.85402 85.41031 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125
3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 290.39505 85.41031 307.47711 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3606
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 298.93608 85.41031 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 307.47711 85.41031 324.55917 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
3606 a 125 3606 a
tx@Dict begin { 316.01814 85.41031 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 324.55917 85.41031 341.64124 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606
a
tx@Dict begin { 333.1002 85.41031 } PutCoor PutBegin  end
 125 3606 a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 341.64124 85.41031 358.7233 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 3606 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3606 a 125 3606 a
tx@Dict begin { 350.18227 85.41031 } PutCoor PutBegin  end
 125 3606
a 125 3606 a
tx@Dict begin  PutEnd  end
 125 3606 a 0 3805 a Fc(T)k(otal)27 b(completion)g(time)h
(=)g(36)0 3905 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(16)0
4005 y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(10)p
76 4284 4 100 v 96 4284 V 0 4254 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 61 w(s)e(r)g(t)g(f)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 13 w(-)j(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray
76 4383 V 96 4383 V 0 4353 a Fc(2)p 0 TeXcolorgray 90
w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(s)g(r)g(t)g(f)p 0 TeXcolorgray 9 w(\()p 0 TeXcolorgray
11 w(t)g(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 15 w(,)p 0 TeXcolorgray
64 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 15 w(,)p 0 0.4 0
TeXcolorrgb 64 w(i)h(n)g(t)p 0 TeXcolorgray 61 w(*)p
0 TeXcolorgray 63 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
10 w(\))61 b({)p 76 4483 V 96 4483 V 0 4453 a Fc(3)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
298 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(F)h(I)g(X)g(E)g(D)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 66 w(S)h(h)g(o)g(r)g(t)g(e)g(s)g(t)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(r)g(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
62 w(t)f(i)g(m)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(f)g(i)g(r)g(s)g(t)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 65 w(*)f(/)p 0 TeXcolorgray 76 4582 V 96
4582 V 0 4553 a Fc(4)p 76 4682 V 96 4682 V 0 4652 a(5)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
245 w Fb(/)g(/)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(T)h(i)g(m)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 66 w(q)h(u)g(a)g(n)g(t)g(u)g(m)p 0 TeXcolorgray
76 4782 V 96 4782 V 0 4752 a Fc(6)p 0 0.4 0 TeXcolorrgb
299 w Fa(i)f(n)g(t)p 0 TeXcolorgray 0 TeXcolorgray 64
w(q)h(u)g(a)g(n)g(t)g(u)g(m)p 0 TeXcolorgray 59 w(=)62
b(1)6 b(;)p 76 4881 V 96 4881 V 0 4851 a Fc(7)p 76 4981
V 96 4981 V 0 4951 a(8)p 0 TeXcolorgray 299 w Fa(t)h(n)g(o)g(d)g(e)p
0 TeXcolorgray 63 w(*)p 0 TeXcolorgray 63 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 64 w(=)p 0 TeXcolorgray 63 w(r)f(e)g(a)g(d)g(y)p
0 TeXcolorgray 15 w(-)j(>)p 0 TeXcolorgray 11 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 10 w(;)p 0.3 0 0.1 TeXcolorrgb 63 w Fb(/)f(*)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(C)h(h)g(o)g(s)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(f)g(i)g(r)g(s)g(t)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(r)g(e)g(a)g(d)g
(y)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 67 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(i)e(n)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
76 5081 V 96 5081 V 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
507 5051 a(r)h(e)g(a)g(d)g(y)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(l)g(i)g(s)g
(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 13 w(*)f(/)p
0 TeXcolorgray 0 TeXcolorgray 1929 5400 a Fc(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 76 113 4 100 v 96 113 V 0 83 a Fc(9)p 0
TeXcolorgray 299 w Fa(t)7 b(n)g(o)g(d)g(e)p 0 TeXcolorgray
63 w(*)p 0 TeXcolorgray 64 w(s)h(h)g(o)g(r)g(t)g(e)g(s)g(t)g(P)p
0 TeXcolorgray 59 w(=)p 0 TeXcolorgray 115 w(r)e(e)g(a)g(d)g(y)p
0 TeXcolorgray 15 w(-)j(>)p 0 TeXcolorgray 11 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 10 w(;)p 0.3 0 0.1 TeXcolorrgb 63 w Fb(/)f(*)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 65 w(P)i(r)g(o)g(c)g(e)g(s)g(s)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
61 w(w)f(i)g(t)g(h)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(t)g(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(s)h(m)g(a)g(l)g(l)g(e)g(s)g(t)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 76 213 V 96 213 V 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 508 183 a(e)g(x)g(e)g(c)g(u)g(t)g(i)g(o)g(n)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 62 w(t)f(i)g(m)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 11 w(*)f(/)p 0 TeXcolorgray 76 312 V 96 312
V -41 282 a Fc(10)p 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 297 w Fb(/)g(*)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 116 w(F)h(i)g(n)g(d)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 65 w(p)h(r)g(o)g(c)g(e)g(s)g(s)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
62 w(w)f(i)g(t)g(h)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(m)h(i)g(n)g(i)g(m)g(u)g(m)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 62 w(r)g(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 62 w(t)f(i)g(m)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(a)f(t)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(e)h(v)g(e)g(r)g(y)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(s)g(i)g(n)g(g)g
(l)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 67 w(t)g(i)g(m)g(e)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 76 412 V 96 412 V 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 507 382 a(l)g(a)g(p)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
62 w(*)f(/)p 0 TeXcolorgray 76 511 V 96 511 V -41 482
a Fc(11)p 0 0.4 0 TeXcolorrgb 298 w Fa(w)h(h)g(i)g(l)g(e)p
0 TeXcolorgray 10 w(\()p 0 TeXcolorgray 11 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 66 w(!)f(=)p 0 TeXcolorgray 64 w(N)h(U)g(L)g(L)p
0 TeXcolorgray 10 w(\))p 76 611 V 96 611 V -41 581 a
Fc(12)295 b Fa({)p 76 711 V 96 711 V -41 681 a Fc(13)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
506 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(S)i(e)g(l)g(e)g(c)g(t)g(s)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 61 w(f)f(o)g(r)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(e)h(x)g(e)g(c)g
(u)g(t)g(i)g(o)g(n)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(t)f(h)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(w)h(a)g(i)g(t)g(i)g(n)g(g)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(p)g(r)g(o)g(c)g(e)g(s)g(s)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 61 w(w)f(i)g(t)g(h)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 64 w(t)g(h)g(e)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(s)h(m)g(a)g(l)g
(l)g(e)g(s)g(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
76 810 V 96 810 V 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
717 780 a(e)g(x)g(e)g(c)g(u)g(t)g(i)g(o)g(n)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
62 w(t)f(i)g(m)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(*)f(/)p 0 TeXcolorgray
76 910 V 96 910 V -41 880 a Fc(14)p 0 0.4 0 TeXcolorrgb
924 w Fa(i)g(f)p 0 TeXcolorgray 11 w(\()g(\()p 0 TeXcolorgray
11 w(c)h(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray 12 w(-)i(>)p
0 TeXcolorgray 10 w(p)d(r)g(o)g(c)p 0 TeXcolorgray 13
w(-)j(>)p 0 TeXcolorgray 11 w(r)f(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p
0 TeXcolorgray 7 w(\))62 b(<)e(\()p 0 TeXcolorgray 11
w(s)7 b(h)g(o)g(r)g(t)g(e)g(s)g(t)g(P)p 0 TeXcolorgray
15 w(-)i(>)p 0 TeXcolorgray 10 w(p)d(r)g(o)g(c)p 0 TeXcolorgray
13 w(-)j(>)p 76 1010 V 96 1010 V 0 TeXcolorgray 1135
980 a(r)f(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p 0 TeXcolorgray
7 w(\))h(\))p 76 1109 V 96 1109 V -41 1079 a Fc(15)504
b Fa({)p 76 1209 V 96 1209 V -41 1179 a Fc(16)p 0 TeXcolorgray
1345 w Fa(s)8 b(h)g(o)g(r)g(t)g(e)g(s)g(t)g(P)p 0 TeXcolorgray
59 w(=)p 0 TeXcolorgray 63 w(c)f(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 12 w(;)p 76 1308 V 96 1308 V -41 1279
a Fc(17)504 b Fa(})p 76 1408 V 96 1408 V -41 1378 a Fc(18)p
0 TeXcolorgray 925 w Fa(c)7 b(h)g(o)g(s)g(e)g(n)p 0 TeXcolorgray
65 w(=)p 0 TeXcolorgray 63 w(c)g(h)g(o)g(s)g(e)g(n)p
0 TeXcolorgray 12 w(-)i(>)p 0 TeXcolorgray 10 w(n)e(e)g(x)g(t)p
0 TeXcolorgray 9 w(;)p 76 1508 V 96 1508 V -41 1478 a
Fc(19)504 b Fa(})p 76 1607 V 96 1607 V -41 1577 a Fc(20)p
76 1707 V 96 1707 V -41 1677 a(21)295 b Fa(*)p 0 TeXcolorgray
11 w(d)7 b(e)g(l)g(t)g(a)p 0 TeXcolorgray 63 w(=)p 0
TeXcolorgray 64 w(q)h(u)g(a)g(n)g(t)g(u)g(m)p 0 TeXcolorgray
6 w(;)p 76 1807 V 96 1807 V -41 1777 a Fc(22)p 76 1906
V 96 1906 V -41 1876 a(23)p 0 0.4 0 TeXcolorrgb 298 w
Fa(r)f(e)g(t)g(u)g(r)g(n)p 0 TeXcolorgray 0 TeXcolorgray
67 w(s)g(h)g(o)g(r)g(t)g(e)g(s)g(t)g(P)p 0 TeXcolorgray
15 w(-)i(>)p 0 TeXcolorgray 11 w(p)e(r)g(o)g(c)p 0 TeXcolorgray
9 w(;)p 76 2006 V 96 2006 V -41 1976 a Fc(24)86 b Fa(})p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1929 5400
a Fc(5)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
