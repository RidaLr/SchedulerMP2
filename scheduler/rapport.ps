%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: rapport.dvi
%%CreationDate: Sun Mar 15 14:50:37 2020
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: SFRM1728 SFRM1200 SFBX1440 NimbusSanL-Regu CMMI10 CMR7
%%+ SFRM1000 SFIT1000 SFTT1000
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips rapport.dvi -f
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2020.03.15:1550
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: SFTT1000
%!FontType1-1.0: SFTT1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ectt1000, tctt1000, latt1000, lbtt1000, lctt1000, rxtt1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFTT1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-208 -360 1374 838}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1ED6A435B5950D131BC48179F5BE3191944DD
8626DE76AAFD8EC4DC8241F2ED33E10698DC7741D6E45CF5A02FC6D2068AA205
EF3C4FDCDE803F4D1D4FF03A079CD4FC4BAB3C558A8FDDF53D34AABB7D89E4E0
CF76F77ECE57575C27718A8074CE275DDE4AD245220A8236400BE47BC76DE13A
9EDA4BD5744C71DB407BCA39DBC9D857122A1DA969E6D0915FDC1622AB8BB88A
93D2EE72E9A2FA73193D6CDF254252980674DB644EEB36A2036E04DB649F816E
E70C4C43E88609C8E8B8B84A920CA933FA00F41F2FC3C867825E2AC658FA0F7F
331323E22BD193A0A8009B3F0EE6D55281CF1076F1631FE509E79941FF08D0B7
ACFEE566C76FBC09F3B4AA57959D4EFC34413ADB46292ED99CC8EC4436DE2CAB
86B8B48847353E826F5346762CD5D353727DBB502E08B934DAE4E99894706BCA
DC35AA52C8610137C7E336009D564831E1E7936600CC3891D3A58A539523329A
45DD54B8D76F43582CE621F74FE7F8FB06E32612FB06B66CBB3096C0DD63D097
08C206A620CCC9ECB49CDC17295CD0B3C9D2DFCAACE46137490589D72A6A57BD
FE97C0CCB9087CF31EAA7860444C0D2A1B230F1879B1CD80CED3863680AE37F7
39A117963BCA696B1EFA8EA500DF5B1C5F6F42EA16D46CC0687DC684B2AE28CA
8511448362E82092B10FE5EC94ED5667ECBC015A6817A57769EC9EEAD9DB20D2
171DB059E96BD97ACD9D5EF4AAD6612EB7D1A0ED6DE0C7A5BB6A1796DDD98278
F2222F94C2D9FABB1DAD4E9D5260EE9B7A881D2F26EB1EC11D1665CC06FB71F8
026DC8EE4278EC008A25E4F5C4D5D5090888E2A1732B36220758A2DE86A7E5A8
6B8B6249A125B0BEFC25A4A5795647E45B3BE2C9DA00E7EA72C25CF8C7E10810
995360EA2FAB43254E2F2B858DBC35ADD9A094154193D0526C198FC570C89C3E
209513E8D5268B987C05C0B9114B3F340503E3B35852776303A1FA1AE15E98B2
DFFD072B9A0B00EF0A7082AE4B7898B953E96400983B2A476965445B33C16B92
8D96469645E90DC393ECFD1F0D1FF1A494D7774DE8818BBBB81149773D0DF63D
5E2BDD7F55340CCAA2C29EECB5A9AF76FE1B7195F7A89A4DF974AB2D341C70A2
A97C9184CB81320DF07DEA87EFC6AAE69F735565B9A279C94711D7350422FAC8
2C374D5DA2920460CBB67DCFDB5A885DDDE88C9BAC3F458A51932D7AA774B281
2D6090FD4B1D4EDCC43816AD379AFFDB32CBB7DD7BBE902840B0E696B909C937
323EB4D4D854478CD058DDCA8F6F19DB4EDEF832CE2A982CDDFEEE1C519D6230
37D39EDBF54B68FFB571615C0EAA8BE59F75A9AF83248D170CDDA5C1CE6E9161
790F05A8FAEE3A845A1C9040D6F16668DAEAC582E46E13447122B95093F816F8
94ADD420E1B5749C3EB71C4EF774A5D79874B743292E0E0B6EDC2A19EB425740
49DCA5FF3091840199E01D25E908E4505E84517C80983C0D44BC29B509DE4C9A
4020E0C99E0D74BAB0E1025C33C1A6A17F95859DC19929F34995728F4B225616
FC555CD94593804226B0191860A062EA1FF4047A2705D72210735BCEA5735DF3
16A683E49F9334D7F1339D898038B50C0E552040F86001CA4EA354E74DBBE94C
AC3E80E5F5127AAFB961C0BF1CF18DF16ACA8D20DC033451BD6A6A518777CF2E
2BFA2AA697F27FC4CDD600A8B30CC8AD97D85580D34B6D844A30A5CD9A2B92B0
0BCC6B4C6F1E4B622AFFE3B187395EF316196C9D4FB2F587BE58063E5CE124B6
A09DF443DB066FEE28F67CFBEB2EE4AF7AAD78A37E8A29152315F5CE6E364D5D
18B9C5796A7BDA946D33464E7EFF3CFCE4A3440770BCEDF28AC65210C3652D58
9681C058059DC2EFC61EEFC10FD101B48FA7CFA74B5C88F53908837FA899E3FB
8440F2588CA7826435CFB937E6CA5478991E3259C878F260DF0DFBD65171980C
9059C488192AF1FCEA7C2E384AD62F4436EC6E9E515AF333A7E2C594F568B0C2
59DFEFFAF7CA831A87E00B4D60B2CE8882889AB4FF6866C81C444AC83D31838C
15C70405D9C2C0886337D8AAA2B6937BE5560D808C9D96D0D7D51FE92D52DE09
8194D4C2A9E505542ED950A6D66AE823D871F2E83D7D3E1F216F33D02958474A
A95A68C4F2B71336FE2CD78F24CC1B72CF4BE7BAA7B108793BA95659C2679B05
EBAB7F318DA3C65B7B737669EC0272C7BE8C807525631A459365B7FD44E96228
E2CB7B463B77FFB0D7A5AABDBA6E65A7C94A8FE239D01F59EF9D1F2A12D10CA0
6A9190F656724239EA5AE88B7C73FAF13FF8D90CC02040AD4102EC84DEDEECFC
D5E0AEB7E228F211E5786CF498EB271C57922952B5B7576890D0823E35D3600C
FE96CF3CE7F41DA9ADECFA259D1ECE055384331171DE95D29FBB84407FBEA91A
5C1849A85ADE38E1160368778A557ED09C2D3375EF314567EF7B00886ED9D52A
210969C8E350CA0CDA66B5FAEA03843BB4FDB905112EB251E08434CD1FB81B89
61F03E096889DC9024509183C63092B883926A3CB77DDBFE0100C486AD8B8E00
270682BAEB6C8A987D61514F6DF3B26B7144D84CD719A38F17FDD7BCCDD5EAC1
7A0786773F9120B365BC6033066A1F98CF444DAA16F66285778C3E2CD4BB631D
9C72C599B1D2CE99909C468AC98EE0E7270BA9A20E60B8E13F999A8DC745DF4D
00713E149B33B185AF2472E5C865FAADFA4BFA5AA1B6CB8CFFDCE0332FFC2A13
7FC9C9A850A7C60B8B4A6F4504FA9F8BCF9EB99084E8462D20F60E926E8A89D6
B76291894C0FE6433CD52E6731324FDA332655A716F859CA887CBD806310E1AA
F04B2FFFCA909E51811AB88EA5B505B5F326E0FB05FFC0DC492F4D7E318426FD
7CDDA75A3B768BEB3F2A33A63F5AA84626BFEE93BEB58046B83D590B463BCE00
9A580D00CA8E697ACEFF707C5CAF286F4322314DD5C21065327393CDA41BCECA
4E783D502D1FA1E0C5A1493F36FEC0709D6C33F0D17D9CADCC9D128B77574C00
6312B2570F43B154DB14220C315FEAF1B7B910D78CF9A22790A020865CCB496A
756436E98DA00E305CC7017EF7A7C42886C1EBBD183C0573B0CB9C97209ABFE7
D49F806F12DC7717560F9DAF72D09F8A5DEBB9CD4753C97BBA78C35D75E934DC
24A3D079F74410EF877C07E8A77B371B2E51404282845D720CD9A15C53B2A644
FA3DCFBAA6C5342A93321ECC688DC91D6A1A26CF64F60AED726D4253B1FAE43C
4BCAE40A8FF65CDAC34AC084B6AE0200252AE48BD87582EB6C88467D8244237B
CEB7CC260BF3D314DE03E8E6F42E7E490993A234B2DF61C2740A8EAE4450B763
5C939383F822C9842C5D0C6D95098E23536CEE02E71ED78C3F33FEB612111842
8CE6A1F159DBFF07ED4DEE51ADCA94A329EDE034A926A37B440D0A65A6C56CC5
D185F48FF161952FC9B7BBA1E0C9995F56030748279871E0171FF389EB30C3CB
CD6EA6948863F98AF49114133CC430BE71C9771CB880E51D42E4773BC9FCE759
46AD1EF858DC7CBDCB8F06BA14CB71FDB322ACD2143B36A5A0F80B0E1C5EF252
AD1B1D89E5835B0DD4B8AD25EB1EB36DA1A87A2B87A6A577651BF998F965C694
BC0C532891D2007CDC6DD09BAE86195EEF7264E6122A16D517E8C75200E44A40
AD5E73AFBE8CEE260B85C98BEFD29BC5C9085AAF00D000ACF7891ABB0F75E169
6B9FFFE0D1F7217AA400E50BBCA640F35896FBCE2E543520C013A368FCDB3450
4F017FDBB5322656862DDD7C3552C0B76FC6532659CF4EF37B0349DBFE5F743F
FDA8A8C167223A82E9239921FE58CC0B13B522B9F96977DFC55219895CC982DF
737EBFAA0D75CCF76C27A2D8AD61CB386C420D073AE8A72E5EB496665AEB27D6
DD3839DCF6BD5546C277FE4EE6E04C23EA07681C391F7CE0BB3FB9B0943A23EC
7F45612CC46E07875B27F853CB24E335E4F903E2BEC959F88C7FB945614482BE
E6C96DA9D0287E9C2421C1BF1EFA8C970B99310912F82C15F455167DED9D3777
0EFAF4DB59560F078DE4CF1E923CD41AA80955F86226CF381C72291EBB15610F
02C9986116DD0BFC419F724349DB4BCF0DFC91C23B8FE6B993CDE3133136F8BE
ECCEFCD41E7BA921D367B0F308A0BA859BE590A4D7A19F27444F05DC7CEC6D1B
B14993FEED7FAD9B7D6034EC2EB5E8B293C2B02EEFBEA5E17788F8D3C4CD4D1A
67BCB8C799089916303832B169786F2D749F10479516B3AC98E3C7F55081E4D5
F5DA3AFE742168EB971DA5FA37D5FA489977374C6F891A45A5C491B030C40E1C
727911FEBE1F165416FA9DF533BE64F594DD09F82CEEAFFFFDC70F4612AE90A5
3B0DBB1E882AE82292FF237556F04E0FFF033637639E26F1AC1603E753135452
46CECAF3EE1260CF3AF1721FDF376285B1BCC769425271A5E5B2F43DE4E302C4
4D08884689FFFBC3A0F74BA87F716315D0372E051156392E5295F207726537E5
84D7D9A2E145D1D0961BE703278B2023F9CC59C7D77E8CC2C54BFB8F5BC45BA8
1B0A8A00AD7FA9FA045C41D5986EB0A40B5CD95503478383863D4B218E597A37
B05787E100FD3C54002FDD1DE1AB5EDDC5A75360379AD865341C849E24353EBD
8A0B47FE17C0EFF2B0525CA523E6133B2B7CC7BC55ED73AA86828C9D45CBC37E
59B1DA90C247898549D3F36F6578808AE6489B9FF8C8C495C812E1BBB4E3B69D
DF28B55563D721660682F826C4E399F7B9BEB0B0192EA36BECCB4FAAEE690057
725918DBC5EAA17E79A2B3872A369DA7C5EA4653F83CCE1C184163D096D44981
1B8522B71513DE5D75116BBDA4B92CDD78FD3ABF42F521ACD3E8F45B56587CF8
25E7A60319C24281580105AC3D461EF59E7A6619D1CBEF62F82D0B50B7D79630
EB1BBB88603823EE8094625D5F7DF0EE61C185EB5D6C1CCBFEE4EAC0A5DE4ACC
F88DDBDDAE335E5073B23BEA0EBCF391BE9C945E7C3C9F9A46B04078D23572F8
3B2966D435FBEE582D0048908980BB7419C397B0B4FA4637B63C47C0AC7CE269
02FB565176F6C03190B02AB80069F7DBCCED8901F90F6CF2952F1238F1703528
1FF5EDEC9711F4EB08F9ED7D287D34A1CF9A6197941B12553F6462E95474D786
C8653BDE44F361E78967BB388E6BCFD1970E0DD4CB2B87834E45898C89330BC3
3E551987556417071CADB861D08C2F4DABBFB9BDCAA486B13F1E17BB4725B467
535AC80C18F244ABE9F2A95589EBF6B45D088CABA8D7F062204B651E83B1CECF
7227BB9109CEEFD2232849FAB1495E0C5EFA06069181AEB9DBC6F45C8A2EB583
47F31E3357071F763654680C500A09579E63EB6087560581E095228F59C50C5F
7E3119B289F072A9B114AEC1CA30A07C4C11B816639107AF64E711723807BB0C
9B27AD6231DB5A6CB507C48E6A998DC7088171FD000B792F983538F5B8BC1F74
F77C197D9B33CA1B374625051960DA427CBB19FE1F2563A7085931DBE1FC4705
838E516B1B4021598EA77954D98B78E17BD39CD5588CAAD1E91CC8A6715DF579
FCB3A2AA4E1B7B86948DEEE2ACD71ED5F66EC3B41746D69F860DA40767605D19
2C7474D68928C534D63F193DFDD31C5ED07EFFAF392B53BA0BCB0E709B7FA934
65343A7151BB70D36F0D1BB4C97D37BED40BF37B56363ADE66CE8EE2BFE7B05D
F417D39587518860C9B05156A54FD3546FAEE08568A98B1E0E8BEA41318D849C
05B0E24047CF42873A113116359FA58D44489E2A7F295A22390FCA60FC701F11
1B48BE85DDB773A45531FCA6A3415BFB34610D1A4FE64ADAF91D18D83AF7BC14
8498F04F23FCF151D0F503B4B1FBADBB424E8DEB9AFB5DBE3FB49851973828B8
BEF905E8FA521F1C17881008C268C635704A93491A61ADF484A1640C6CEDACF5
72324DAB9A7B6FA29987C4C2C750BE37AE380E3D2BE056D20AEC2CBA610716AF
FAD6553C6AEC02ACA484EB4BAE6582A123CE4EA6B9DA529EFAFE44BA7940D223
9A550A850DBF632156B715159828F2ABEF44057BB1513B35426515EF0693628C
05D6C447F86C8FD91B7D1DA3259676384C92D65E4480FBD0632FBC68F00AFFEE
9E086E6450E3FD123CAB6EAE2DC063095DBC491C8D74793648763AACFB3082AB
0165E0F936FD9673D0416BAD3A3ABA18DF3377AA039F2E86A65ACC7E68357FE3
59398F2D22223E9AEA8875145155CFE3CABB35BD346E2040F4D9ED7E3CCE3C55
2CCF8B83ECE8517C92C0A3D63AB7D27CC05C7690741C83302ED6B4736E2BAF09
2DF5E88D51C674C818C773AE158B3F90C1DEA8246B855939501C04F760F08D58
ED1885E0977B67C14827EE75E26F90FDF4AE8C7C58D60E9F2D6F8DD5A7F2B1DA
4620C8AA2E58E6E86824F23F695A1691CE8CE57ADE11B56D5462F2538DA561E8
6F95EDC4010AC0B6B1D7F33D5B4AB16301BDDC6863AA50AAB280D18F70784AFD
98523878C4F5C8E87765A9AD5648C12F4C9016F0536D8D5AAFCCB3016C566B04
255097450DB147850DC5BE7A268C6B0B4A5E0E8319C667D1FC30CFBBECACC0A8
28A47BB58CE1DECBA918C05E79FD1157F31A1B749B5B194646FAFABFD516F8AD
9BE81238310128E4CF44FB6CB84CF25321B119518F8915D26C7F5BDA42B2B422
8CFA829EB00947C8D9766E811353D344022AB91C8A9ACF420F2CB30D1B5BA2AE
C0F487E99A654615785BCA695E70AB0F47CD15D7207C7A825D08BDE7E506A2FE
66F68DAE9CE17319CC2ECC68C4355021430DDDB5EF76C8A9A44C9B04554AFE96
84ABB0991D20146347F5E03448350DD8CF4DF4BED62AE20551845A3706D05EB5
6DE5662883670E6E54378D78B9A9DE9BCC72F4E5D0BD1C80AC7D28BD9F35A475
A7A72FECCDDD6F4DFBCC8A504273FDD95DAD8DC0D480AB8DE8E7561404D5B4E2
46EA4ED93F0051B1E1E9631A82643ABD4A038022759EBDF9EB35D2FC00A0D947
02D2F9D1A136CCF816E7AD2773295B40002BFB9868ACB8C41077C9D30FC064CC
6CB30C552FF981DBB08EE42A76F11607C84F944D3FE5126940887D334D5F9E8F
791C86ABBA55A956919D8BA9F69A5E5657C8EF4E71C826E5FF81AAEE632F4D54
104FDDAAF375BE56AF47F976E659C31B4CA1D1428FA0E147553296D3BFD3E6C4
75674491455DA96CC30555FC7A40CECFB8CF71B77C58443770FC71B2AD037F75
9B86E08B5ED6823AF1C31B704A2596B53047B1059986EC5FF4A8073376B5C153
3AC8345E3D53DA4AB6E11E3ECA1B860FEF24B74B2502B9C5E232CB4CF649C350
3F08E2C7C8E1ADF63DFE9E3BE2B2ABD660D2B603B5A400109BA195BEB670F0DF
0644B2E6647268201063B1E386E6A2738D2A61D155583338E2829AA470A1CBCD
A289CFE59086E8E7043BF9C355A5C29EF4F8C47ED334C810C3E2AB48E6DC9400
3C96C3C084F337D1CE5A89C7298531871D6AA60DA42C5E456FCED1601BF5C457
2D69A22EAC5A3F9D962EB8CCDE6D1A394EB7B7831203194E76D3726E3F50F160
EED71843B9EA5A218FE065BBE91FAFB6680255D29719C192CC65DA0072523797
A0AD0CFE9A4DC6C58341B6BA6B08D1F074FFD2356EBF7641727AFF8DF1AFCF13
A96A51D398662F553BEDCE5B6BA16D5ECBA6603CC2C9BD3B16AB6F3C877462BB
802F05CD6EC3EB7E978B7113541C3B84D430DDD78479CAE6B97B372AAEB7D219
6F268A6650371F0D4BFD284560DD928B97F03B930396FEC2F9C91DA0DA7DCFA3
3037F0AC98670DDDCEE451D0E504C5A23AAAC107F629D885CD0D47132C98D9C8
C2E10FA573F2D6D8C7D8F1E782A3ACD5F34209414E329D0F063BE7F7D60B2E14
33CA696136B6AD2D692946ED079E83C8465632828C8C98FBFED958FBAF87FF44
869494B4028B4160979405292D01E9E43AC623E3D8C713E7BB5FDB28489D8877
423FAE4BC6537C670FDC930AC97D84290A953A235F101B670A6EE75D274D4782
DF9F213BD7DE8CD18C799992D38EBF207A83CC396807ACE71AD8C3ED8C840F1F
ABE7147F7EB2755A6B2434BCE500F78A24C631A1595871E3ADD1369E83B1F17E
F1407F512C2591DADEBAD154BEB335CB8D7296D7BC8CAC41419555F92E08EE7C
8370B7AF18CD4CCB756A12B6560312E9A207101BD32328BB512876A0065877E4
FC0E664FA67F0C661414952348DA7AF58914F54313F10A3C06E106FE0B35A70F
3D24993B7603C32C1AD88A0961264187B02C5300952D0388BB946C08C09C2056
86F211CBD4454AAB910BE8790D2C8B4E500D7D00A94B1DC4478067DE503BABFD
012A0B89374380B9DBDE997C279757CE1CF48A174E63E97A47825AA8182F5C60
61535199A8147612F8FE12D52CB2FC743407F97D94749F379E83EC049D3A6015
12F42E4C713D963466FE67F4977F31461F60C68DB63BA09D059967D0E2F84C30
5EB699EC1F215A3696EAF26AAB74E72E7A018DCFBA7B8DAAC562B406A8E5451E
1A21C3CD2629486D9658739F6712B28EA3CC399EA913581A462C300C919C9284
F51B59DECD77EB6DE0154777DC8C1356CE769551AD0F5BC948225A2FBE7A914C
456336CF8196F477E3E521119A06B3EEEE1DB28D47BCF64E4E92CC4FD0A896D7
D0636C61A8435E9E697F49E29BF23132364003B089656A8505EAFB42C4D3C509
3E0886CDF5154ECE945C37E8C3DD1B8B66C0576A01EDE4FF8029ED26CFD36869
FF970CC72340F02646EFB5C6A6D4E81D1E947BCEF3E7194022C27E4FA14EF0E1
433FB5D4DE363457A3B4444185BE81B08E09C8B30DE6764D2443EB3A0D834380
3E1D7D2B8C90FDAC2EE8ECB4D53FA905AF046AC092DF0686F0383670A99D2CF4
766FFD9EF3B35C2DBB6489677B31D3CDCF6467CF7EA72F4FA57E61725FCB8452
DD363CFA39A8EE6EFAAC3B1D4A86E70CD8A155D086FE17DD515FE0CB61A4A575
AEB7D488BF26B41DE77028F82C47E9D26AB98314281BA672505296CABC741A68
097B60E1B7C50249F7A595641BDD5B11833E4AE962A68C040CCA48C0DA166A46
9F67D70D8AB7DEDD6BB362CF629CE4DEA3482DA2E54F4224E8FCF854908E81BF
0ED2FC7A7C0FEFD235442EDB22BE291F9BA0187CF78E246AFA81ABE5149C2ADA
6B6D93D1E88439BBBAD6104690D7ECBB8E8FDD8D52B52408E3E8BC9125511638
5BA6A4CF3FD8B389526B0192B621C2934BC165F96B069EDADDFB64B9D9445A62
8099BD3466C25ACF8800501A3B32335894A1A69F14B82D4850A66762967822C0
C4D2B4C22EE38950733524EF1ED2E41BDCF4162689B16CD77F36A5AA76BFFB1C
07D20DB0DBA158EDC89F25681FD2C7D0028382213C10927E3AE0A422BECA4833
B16F5BD1FCD4C90D9763DE314112E205F0733AF9680463C80E9AC19292B608C9
A6C12109CA1945FCD0D0FBEF707B8FB92EA58FD6661207C0049559197A2B88D4
2AD04259C849EF6227B0E83E8010294A833875F9F16E68C2BCDE58DDF0633822
45754FB9E2D79AC4B8DEDEEB9E09B9CD239F61DB4FFDD73F1821C85FF0C075CA
3614956371CF4136782135AF79C5E2D69B687526B54DD18F96E8AEE399DA83C7
C5AC0BFFF33DCF47D772E8E2779E6DE0AD0AAC6F1B527131E7274EEEAA28E09D
B1FC39191954A6EEE713D22A147E3E44E11DA9A291FC9CC8D858B3A16EBBC716
4C6178CC7F6499CDC87F4B2107BA9A666A06FD2F798976DA5391E5CA83375DBC
655C61FDE0A9FE5FA47F44C4E2F2655CCB85FB2974B997536504D777AE66762B
CEB8AB14C84FAC3ECA2CDA6A11035C2C79442052A2B88BB126BB915C39778C46
34D3DC68E1353BD5BE132AF5A073CDB6B84368DFE42F76B007B149BD779C3C7F
4523AF2038AA1A96A1CE94AAEB38581CB95FE57D96AAF73F063FC1B9EF56A8CA
2C617B51DC4A2BEE307B901B0CAEF5934B2AC917DCFE5E9119FD1EA072B7E58A
FA6CB89A6F5A4285662526851CAA5746B746C089077C837925205CD1C2268F43
BBE3DAA009079565F6F5DE725EBF15D51CFD5153FA8ED05C720D28393B9D463F
5E2AECC961B0B1ABBD9239C9B660518C4EBDC1931641DE390FE8B21B332AA4BA
88CDDC2041A7AA53599FA7FB20654D9E97727D40A589699AD9307631BCAA8C53
4D966D44D1D906DFA78D98F352F67530DB5CBBA6E3315BCAB0E87099F10BE8EE
6D3C73FE1AE44F7FC260ED0E596CD2FF09E7A787826AB13EB5A93BD9CEAF5474
6AD6FB4289EC577C922C235BA7E7A47DA727CE1D9AE53BE7071E9BFE91B390F4
D303E06A2EC370ED603DC71B70B13B8CE9C2702D5063750404EC5C5C6CA74328
9B5086F392CDE3A0E93D890DDD9B1A016B74BE912B8256839463E14736072949
3C659C9A92A95D3020EC756F18E03916F8BA3DA967ECE11695BF4AC2EE65D1C0
3170E17E5538CA00FD78DB6E47E385A9785F3284DF72563F825ED1D5BAFB1ACF
918D43C409DE36BDFB17727D2AF7CC179189AB337D2D1DD78D1B7A61C739AA11
8EDA9511A3B7FC77303BE9A0B5873B8B67394830CA8076C9E7438E016D694168
6DED51A3C053760EB481A8C18EFBEEBCFF88C0DE48E2AFF3AECAA9AFABBAC2E9
92416B7B9BE2D8162F21D016CC773C94450381D6145E33570ED47FDA7694AED6
9F8621C034DAD9C193D44F3221D2A9C46CE0FC99A106F63E9DAF71F626757011
BEDAFF826D036E4AA12207A6C2D3D467A8805ED5563F49920F9A073C3AAB7129
F6D5314F0B7971AD959C81143241CEF6702057D971DC24C2F805F7A0245F6A35
2BE62154E3661B0247E7619B8C69F19A3EB77A62E0823D1B9F753B28EAA745D2
F3CBE8EA243A5B05241460A6A05BB8C3A2684ABD37B53E1C57888E4D56DBA877
CA985BF2B599D1BAD7F631E2DBFA6963E77AC9A19907AA27D00FC181AF79DDA7
EECB0F140507D3627F462489F20E18CC4DDB0863C810B37DC4189230B567772A
87A49751BD71A1F38E713EF90BE637054099C139BFD6E7C7289195CF3B2D50C7
84E00210DCE05E343B12232571BEFAA03D57A9BD44CA1B3C86218E7CDD30884D
DC2ED5F6E090F48C5B1A77D2FB5FFF2C2FBC2287D254802EBC92CC96421EEB20
715A0647DB52992DE617DE4E576CF98554957799D9BAFDC0D26222FD26B6B7EF
589F0BEF87390010A4EE2ED540CB493D9C239239224691640DCFC17AEB484920
133999E9F0BEA8418B63CCA4D5C10FF5681C7C8437DE05AE2F8A2DE569626641
AC490BBB2513B3555063C9BD12AC5931D8E1841DCB1EB7D69FBEE9B214EB7E09
1123B08B6D485057BFC6FF021416FF12A6C27A30ADCAC094EDB63C28E8C0D97A
1A00F90F2422EEAAA90590755F5CA769403C3B8019E9DD30CB28A3D428B65D31
49CCAEE98C1485342BD9BC2AD969EBF9F252E93E13CA2549C69765A56D9D698D
21A020F6254C627A1CF7D1EBE1F5590A1A07C4B84DBCAAE4DAE6BD0A302F7E6C
E0C639ACFBE7B481110F999645D8D464C94C6EB71D5311987CE12AC4C4DF8A08
2DE209B25B7B2A37D4B3683E1748E3B5803ABBECF27C0AAD52F75E9E3A6684A5
3F52B4479B93D6997A5F8CE5847F73692B2639CA73DC1425E44B39CE5265CE43
C38E87B56D7804B46E66E2111FF1EBC2531C890DD82F105E06B7F900B9940DC6
832EB967C32BAE3DD25B7FCB919DFDADFD2B68A5E0ECA0C520A7470026C7CEC5
60B2C88AF1BE6BFDE0D3BF7A096CC1FA00C510884851B0E2283FA61818266342
C514D418E4AD8365E1DE13C6A837B12C4CB8D969B2680DC6BF8A26B3C704E637
F8F4A6F6A1C0F6EE78C1861717997A857CEAF1BEC424C3BFC8A2F87023C435CA
4D40049A25249432DC77C55498FC2D2D9BC381606D90DDBE030314EFDA6B0F7D
F64C81DA33E9A68B9B83487417798DCDD9AA169A55757084EC1B33C8D05413C1
E1FF0E034D80B2D8860951277F5C187AD5A068F6A42402BA3967B10B0CCD4E3F
BFBCC88F46110E27EA040586F49FD91D3F426788E91AD157B10FBA9231251939
279DB0E47E7F401693E83C45B0C95D4FB12232E8A64E9A743D99995903EE120C
7BA6099EE2A9E0C84A9F4CBBD52425D933E8F581E0579781707A1CC19509B048
CABEB786FCD3F8DF86FCE519E27F26A8144C7D57622D3612F411771C1FEFAFD3
5068061FE700D2919F2AC80EEDE74532E61F0A414824E7D5B7136CF8A31CB87F
F36AA9AEAF76305955EEE57273103CC038A63C04DC4763D04D64088256DE3B40
8336BFCDA2D4E24B5E8CED2AC26C571264B72348E43DDF50DB540EE1F145DD58
3F7E287815E6206F29BFA9DF26B0A600056C5FA29492AEF376A4A16023895AA8
ADFF905F83E5FE32518B3904FB96CEE266FEEFB930CE01125F3499357EFD3BC9
1F5D7AABB7E74FB92BB94E671FEDEEAED379A9083CAD660AF79E4D36B4A04E50
63B2915A413C6B889393D35EC332CCEA3A27024C2BD73471C771FB388DEBCE8A
AE26FC92F53AE9CC5D9F226359B0D0DA1D46AE862B99365BB9D562A05B63B409
DF20C182AE98CFFEDAD0A7D875D0858619040A107D9250FC73D9DED2E393368D
5B739EFE36171714DDAC00D3D25D4F05F076C55FB467E2F3B5FE4D85A318B05C
E464122D7FBACA70F73E43D0698C1656984DA00263F9FB6D04779D328E10BB34
DC3834CDCB16D1DC69B5C9EC560CA9C17F6450F89355BC3919EB6C56390E5C44
CC8B80DEA278876C97225899D54679E2CE3B38F9072EB86D70EAEFF2DCF0028A
99608FAF943F41B7B6C7F29214E8FCF7232EA54E284D328926E00054B156921A
A86EB1323CA2AD8E0DB2B759CCD879D1FC8BD7BD5F2F0A4765ADEE5543F1571F
F48BB730B202507B75E254B5CC1334FE0A4ECC91420C848C8AF58B7309BD4AB8
0818F6C1C621BC6443CA56B09B90A74E190EB9D38748CF8CBBDEEE31883DBA8B
465207ACEA1E0B494ACF836758C3ABE7A86423F31457241BD76FDFDC4AE5E733
2BE4A6387FD8136A78460F2877A5F2F363499119B3493927E3160A1B02C1AE80
96DDF287E5D3A8CC567EDB6B6B56F9468BD27FC5B43A2D7B3F99DAA34E24DA9A
E789E42C389EDE846293F4F569AF37DB5A86789194FE988F5FEA5AF653093205
0F7BD455BE95F0F7CEB2BF8873C5ED71B56755DE5115610081CA4A3DC88377E5
A22CDA99317B086BD8B9189F1E95F04ACFA0C1E4FF502E773FFA380C42E6B070
A6A4329A7CBD8C66063FB55558FC58F8545711567530F6AF4BDF1543BBB1D0D9
F5CE5A90457DB09B591DE58DDF8D0F137FD09BD2E5412FEBED9AE61AFC1AF1B6
64E9BBAB13EA909D2AC98F943AAD126C6C238DE24F302B16C9CC09D96E7C7BF2
38622127A46E9DBC2B4CBEE38C4A5BCDAD888ED4BAA94F5957F12DFA574891D4
C93B609A3F376AD9409A5B40EDBBD3E7DAA27A7C08F0BD440CF62DD47E7DB9D0
55B9B5BCFDF4A396768284C667789C4F69C6A2FFD6EC4C4F3F841AE34885BC6D
6478202BAFF37B9C64801D47F41F722F983538F5B8BC1F74F77C197D9B33CDA5
2D689C35EFB70E7B391AF96354CB9740D07D332A3F1001D0D6072CA4B5D7338A
98789DEA96DA066B2F857D302CD728BC91BA089383208487CDA9009B282362B2
7ECF07C3B2C31B8FE7475736AE1662D531C6B5CB0859B146CECB8C340B13DDE4
627DCF4A8009E2840AB5F85F043CA3DF30886B28EBAF7DD784A959FB5E27C9F2
AF13E89BA11B9E5E8A3464BA9E9E48FE80A674B365795F72779F39FE933C9C75
2465BD8065F100485D9D554DA591FD1E63E93FA5806E6D33041F6109E96E0FD6
BAA8434094A5AAAEEF347C59BA39267F83EC08B4819411F01130BCD5E5554B6D
9BED63F0A8928C0C06829558B0B4A13D01B3DFAB38DFE99F8441B5B6FE9D7016
3389CE7E8A42E6842DF9D4D8E41706BE48675695018FF1765181852CBD82C781
D0648068F92EA79BFC91EA5246A71EE8310DB143A81F77615AD3E07C8923FB4A
F9CA17FCF77C1370C8BFE081832EFAB5813E8B952795555EB2BCB6DDCFB6792E
33194C43B68F8C6A9CF1E5C7245969AB8194BE9FCC657773EAF77A490E66977B
B510FA6AB5593076994EEABB0773F24A6BC3614F7E4C800CC61AC9E1561406DC
D0990EDDEE2C8FEF8208CC95D93C80237F52C50735438650521E082285F82214
2BB141B6FAA51EF6C23A5B8376CBDE8014C97D9505D9E7C7EBD59CF84FCD4C82
DE83BDC6A2125923088427475D6F1D88EF5573B5DB16572FAA7C4150100EF093
59A8CBAD1B46F2247027EC2EC8D96C49C7BBDA08EB1D3FE1A04FF28BEFE90531
0D848C8AF58B7309BD4AB80818F6C1C6276D0ED1EA283F58EDC99488B1A3EF45
EFA99712861A178802C679818CF8DF891E57317AB064E2252303D3DD4FFCFC95
483BB2A47966094DAD9B9CB52647ED165AF16EF5F3437DD80080627C119AA2C4
80AD837EEA8153B67EDF6DD029942C0B8F56A07C34221E7B618737885194490F
2D722E83609860DA745920AF52DD268B47C96D6801FDCB65DFFC4B1D9B837FEA
7764C5F02623E0997F84E47446A0E6D4B255D28DD1E80A91B1917B3B82F7633F
B174D178F4D94FFA70E5D14BB87B5C6D6132711F1CAB3BED624E3B037A3D1E3A
7F7C41E3074A5BE044F42EC0120C3C917A6ADAF849940F70238F69A4CE6D6AA6
CF3BEA450C7DF727B8F63BA7AD48009B9964F9767FE9396FBD2461D974DC68D4
E0FE6320A138B76191B06FEC97AE75953CE329891E0C6460249830FB1B873BB2
862DED2A90B8A2767A10BA2425AC897D19DF7253F9D0D23202142E52C14B3245
C688EFD09F70A9AD0E601FF5BC6A153AC5E32865496740F3FAAE650DE3C61569
8EC35D335F67A6511AF3970E6072477C0B90BCD0F1E8684A7C0C613A59A3EEDA
53854FFFE3D9F9FEFC23DA9A35EF64C6505AA73F91C02B6F1F52C0B0D1CC1F31
0E237C6DAAA88EE6187BED10FAF0AEB6AE1EE6D08F1E6042DBCDB9CD0FC7FD80
A80D1197D498923EEE9B65C9D7CFC9A77E940370E2AE269E64BDFB0C5B83408C
75FB1DC7F93E4C77E5952539F63C7A3A544C09EDE2B2B98457A95E71219608D5
00C80D9847327517EA65F75BA912618E0485330A41661DBF2D227AB63F1F98B5
3B1F4A09F1054318137DEEEA579DE0654DF90509FEE43B4B5BCECA6B9BF6A258
7F0A3B6EAD4783E0DB032B1B4581EEFA264993D49FC13B2B6DABCC9956F75DE1
2403A443527C5A3F6362003FFC561F3F3C91C1AC68C552D7EC09625E82893344
EE4CC83176CE2D14527DA0395A985015EF8CB42BB7DDD628815C8C74880A7413
E8635908D0EAD76F7633803CFAD6F8EEE3FBF9F74627F363ADCFC8B37F4B3BDF
D76950BB0C1540AD102C53C170F7176905567F1C8F69A4772B854BA757DE75DC
C1E837BC90F04F9FD3511FD8D1F0D3F3C798609482147DB6F8688CBB54383434
9255ED02837BF1B7EE0271E2233F7C2897FFF19FB1548383A968EA5D22124C4C
A56A458C1C4312DB9288A39AA9CEDA8871E8C7ECA5017CB3D93D820105BB7CFC
9391D989537AFCD7FC3E5B0CDFCEFC68FD0884E5BDD0467F33D14F29A29A5917
6CAF28B51272F27F1CC2B577766770EE23C52AA384A52C677760B57ABFD9C03B
07B035520A5E8CDA4261086E6FEFF7F0DF0E29D2F08BB2EE9BF88555F9928901
D24CA03B7E474178FC042921654FF33BE61CA7707EDED071FC3569595869BEA5
988D29F9D548961D27DC0260B7522E601C15F64FE3908AB3F675FD2DC35A56E4
B7681BD2A4E6874D9A0C4A7C4D1C0D54560A8432217301F3C0772DBD37F47D05
C459649AB45977E51B59C58B51B6EB2B43FBB29B82334A019B46D37F5DA1FB4C
0E145F747754CA79D8F6EDECE0E8BD883C606B8C153F0EF062F7495F9D9DA1AD
BB8975A9CAFA807DB3C40115C7E339BA3F435E6E99E851E6312F444E7DD3F9F9
0AE539D405FBB67F546C1D4B98BE2815F6DABBD78875175DED074B727868B4BA
C5C9FE00B14005DA510B139C96A4D8D3840792065DE8B7C4A49CF17C7AA412BF
BDBB6B95C298D29319AFB430AB8928C1428BD35A79B6D61069FEBDFC734C4FE9
AB1BD41BFD7640789E0DD3FF4A53F378A3F41513AF7100C965DAA8CD24FFFDC0
5DD565E5C3596AD5B763271552DA5E42054ED0AF8973ACB054DBC3EBF210A12F
FB5346D7A5C5127E1F8D696AD10EDCFA603F670B60B2D051C6CBCC1EE0BB49F7
FE6A5F23081191152C01A7DF2E63C2A04F6B12A850C0B88086C8B2BDB0B3CE87
004B3F9E163335F9B3729CCBD175F000EB04A52DA07143B91633C8A2EB23C7AF
C9E98FDF16EDAAB4E2C0FBFF0293C0AAF406FB3FDFDE631E094A1B65C13AFB62
72363D2D02FB39057167461593C87D090E04997FAD4AB324338B8723DF80E5B8
9A772C8480DE207BC8D4C9A35C96375DB94FE91E079DC80120F9AC55E7B70876
C750BC1FC4988F68315BA74D248BF012B5A18F9F993A39F71293845E57D5C51E
B9597356CAD657DF7145043C014A0C4CFD2CD60E22B004DDC9273442B4CBC2A4
82BE556600A300B8CF4ACD397EC0D24DF2716FF77F30AD5A2B83CF7E2BAA1C33
8259F0860FC065DD42F6C1CBCA7E3861EDE32B55B02AB53D4497937C92121303
C2266319613FB350942BC74AB503E55647E47290FC5D557DCAEA201F59DBA1A1
9E97C7D52A4641E53CDED8D74FB698F2DE02E9B62F5859E980CB066DF9F12B44
87AF410341D29407B28181E42E059FB6769E965F6AAD9509CCD8A77E38A4722E
9ED04606324FA073C1BEB10E83AA759CCA28A1E598E87400677C92FC9CBBBAF3
A1B132A68C61AD4FF21DB4DDE4E6894EE0F8A39060F99EF668692B7B1FBFD118
4D2F7777624B250F783C32B0DCBEB38BB5A39D16C2D43E99D94DD009D9A7996B
6C0DB5F2632126C001C23238B601C56AAD4FA0B5B7A967327FCE6E18A2140570
375556076EE6076E5212A2A2F58CF4C075CA3614956371CF4136782135AA709E
9270BA85FC78746416976328E1F0D49BEE1886C84DEBDAD43E75A878A64E913A
41F60C4AABBE388385AF7EFDC635611ACA260BEBA24915FEE4BAC95878C7F346
027F02A52AC1A537B5994E481D5DC2DE545CCDAC7ACFC5CD8BFF8C851CCB36D2
E15CBE3A2A3216A34CF47B5465BF471FE3136A120736CD964682687D561D1A2C
02385E5E7280471672398D67598FCBF3413DDAAB6BC6B8D8BF6EB75815920242
0D4A8E9F99E97B1A3605A855FD1A009539525DFFAFAC1DB7A4EC42919646E362
C30D789C9E7B29CDC48A75712BCBD9E67963016A1C77555FF8EC6F39CC66B4C3
4D09ED9039232440D49C70156511B49F95D2823F429EB36CDCD11C026236CBFF
41D4E80E24D069E6BC0989114E28A4E64D519F1957F990525B85A4FD24540AD7
1D9D100EE28DAFF7F66860D0038F6DAAC43A0057FED7D5EC27E028E83B0E4C75
8D50552DD84C7ECA54E95EB4454981FD0F073897FB783FACFED58772BDD4978B
C0A27D0FD1B80FF05BE4B5F309D748F2A53ED0299C1DDE7F8CEFA84D08D88C62
EBFFB218D23A0C660E38D79336D47A4C62566C08D7004D09B071CD8AAB617594
F0F8B26E985765D121CA3DDF124F804FC1368BC2778AB577C5BEF53E143E4F78
9CE0127CCE8405DA733CA2474A200F65EF55031CD38EFC48EBD2582F9528E412
DF0177A3862D93DB9BE58DD24FAF966BB77F57B4E1074C234E362A91FBF5D3FF
0733400997B2A129456A6B6CCFE54FBCD6E6C83130A2CF3B1CF3BCF8CEE94B29
CBBE863BDE25B2E470769CB56BFF435FC0ABF78D421998F8DD0DC2ED0F385882
27F7778D16FADD1C9318D860BD87BF9D6A2AF28F53FBA898F6D877139F78C628
0A58F8BD0B6B2DB2943BEFB94955CE9DEAEF0BAA405A0C2BABF0A2EB2C3F904B
D0E9E9307B61A664556C13952D6B15483ACC4016405B0A287AED44065F0596BA
AD00969C92D66E125C0EB1272CD354E43706244A8CF0971215ACEE5691E311F7
4D5D8E1B4A20F1FE41263E3BC6C1F14261F31CFD8519CFF9545877D6D79A48A9
700462FB215AB875FF4244C67E47A2910182DE13CF8447CFF335C364E32E5A86
932CAE0767AECBC8DFD5645313CD05ADA2352A43212B50C0673594882B491B11
F5A6B088C97FF713C6DF5182E14D08DD56B6C89E09FDF1901D8A43B67E620200
B66D77B6AAF302D1375E994E2E05E600E47023AC156DDB039C2E6E9E1449CEF7
9998C6F4DCD83FA0D7275EE9FCF97754D643A8EF8A7F6DA75FE704E26B4CAA7F
027E95F0C225E9C6BF96D598B545E49139F5357499F1442622631D967DD0B8B5
8E8E24D022400EF8F2243C0679345EFD56307165AEDF16E6C88AA3E50918E57C
288783D93CA182B25F69BB2CFABB64E7CC0E29D0433D1F9AECDE47A187E3797F
3A9CCA1B21F6246BA012FCAE85720C7300E1D7C5E3D6161FF626461DE5AC5602
2AE04350D46B4AE6895648A667812B109C7A2A808449F44D04C8F05A2A17DC88
804923A00CE20B3FEED7BD0DDCE24912C89A0255D652B35B7A469AEAEBB48599
844DB3680FD2726E5F8C4DA03A85ECEC28DBB54C017B65D376515AA0D7975BAB
77F013A0E601EF88B9D63C0291AF8BF87CDAC9422147B8485D1CC91D48E56655
1150795FD9DEB28DF0BC0904F6355244795F8589FF78606FFA98C1933B76AA66
A6A13F05A35AF3A789662291F5302DED60D1C56B301384F9C0B58AE91A23A379
FAB021ADD52EB6C5E9B31C837EEDD00FDFF3EECF3EDBA68613236620B633FAB3
ED51D3219ED5D06C044FCA52416E7F381F36DFEB6612EF33A54D250E3786B7F2
25C67A7F16C55B067A402344799F8EB9247CB559FC666649F755B02FEDBF1BA3
9488BAEE28A225013BAC92E531CACF672002B146CA120A491C31F98EF3E4655E
65FEEF6BBF242DC8DF186C4ED33D753A65ACCF561F67527C7E4644BD269E4CA2
A5149785C9B0BFBE5042F7035F77E8E58AF666BB0EC4074A2DA43ACC97D99BFA
EFDDE789302D3CF381FBD18FEA91258ADFB0B4B8AD6EBD33FA71BC5805BDE8C2
7688B2FFF11D9A551707E8C84FFB41ABEE5C4D96208D833F8B6818BF7C03BFB7
55C8D5CDD137AC7CCD4F7DC4F844159294B83CA932CF05589576172636D743A4
D33F0BD5B5C693F732870E41CD0FA17906BDB310233895B9C85AD1DEB9498269
FE4FCB852588C5298471B84D24B7974CC9E811E864F2425C2F627DF0F9D7DF40
5B877DB57F85F0EC7A019705E4AAE8801CDA2C70E9E5D3EEC2776D4DDE20B7B4
C583C84EE7D36ADB450E1AD2E1C89A639AF53C3380BC1F17536E1902E82B66A1
CCB1E181DD06B48BF73DDA42EBD5D0D23281E91DD38B8B6BA6813BD4501EA004
CBA10F60682E843199DD34614476BA788CD2CEF2B4A75BF833CD83CCD83D77A3
5777E2D1412AF8EBA1362E0A5BA0187C7F090C4C06B1E10378CBD780A1FF8559
DF9E8AB8931F1C9294475CF302E03489954A2BBFCAE08D822D88B76037037E79
3A476F0ADE432ABC8F6F7705EEB99A28941BAFE16CAEEC0DE8C53E0BE42BF741
AFBDD9D24624A72B1D7674BED21E1140167AADF297FC852EF2B7292FCFBA9D98
889C6DCC72CEEAA108DFA42DEEE11D4262284F8288DE6C041BDEFBE7C61CAA10
4EC7256D8603ABA54382FBAC39F6B52F0F1124DA4A8FB4D301378B9F47FC29F3
246AEC0CFE9410E9329939775A755AF37BEB2428FC6003E938F2A1D32AEA9BA8
93F17AB9A8B584045676017161375153167CF47D6C1BB06BE9F886F761A0A24D
17F3D15D14039580BAC0A141F04375839EF5540A30BECCA0318D2815BB3C7642
88C408BE781DA16CD6316F5A4F261DBB9491F445114FB265E238F5D9D199000C
D5A84961416338D136FB96E443669CA5809F6D43CDA4983D20B805962D3F5721
955366BF278E6931353AF93A55066AB9BFC0BB6CC55A89C2529A4F261AD82C48
80244A1D9CE79A9A319C6559B46661FA8F3FF2079549BEF30C77464FCC7C4BDF
775183F7DF8B3905B76DA60A3B7EAD188847E46C60C4B529060F62F8EBAD3E49
030BF702FE82B656EAA018CAC9EC9CE64D66A306A1CEDA9AE6CCFF29BA1BC76D
2F7046CE91042EEC4A5CC7B87570ACC77E84FD21A3F4FB2F67A825679E761F00
21972D457FA60B2B187AA9442F2EB04D276B5A3BC57827A87B70EDE271F6C329
A00C2886A429B541002EAB30E0F9C56866D5C8119014149A54F4FC6144D250E3
5432A73889CB9F56116A49FF377486A6E2D93AAFF92E3CB7AB82AE31CFD5E808
2CD992386A0FCCBDF36529476389E14FEDA66F6B2479BD96C7B1F0A60ECA7598
1E943CD72FDB395D3EF502D08E9DA897B8373366E02FEEBDBC7724C83E86E960
AFECE29E29F8A3A92CD6DD1E293C067815E2CA4A60E42852725C304EAD398B30
18FE6B4F370F7F61CC95C3176727BEC7DA2DE22ECF8AAFA7F606900E22379609
D3824A76A540F89B5C7F3E4F8998D4F8322AEEF5EF45A81F2D361112069F2E55
795939E3534506129E0E759629BAE7BCF913CFBAF43241CF989755B7D83FF82F
A4478065D9D13660D2F9CDB2E3943E9891140667B47E900442B6D42D58FA51A5
339C193E514B6CE4D54A3C6710D90B4F1395779BC9B4094677501BCF05FC2437
5ECCDAE5AE384A1F9366CD6C4B82C6C598CB3818C9425973BBD6DF2722DA1DA8
D60BD46876CFB75A80A16712D4F76531BC9E93052D692A88622F5920C96CA8BB
F659093FAAEB7235F75607754854D6FFFA195AE6C3987AD991623645C99BB5AA
331EDB36BE642BF599F6719EAC28BD4F04876E5B62CD35A5CA39882C6B0E2218
6C56E22109DF7B5CEE3A7CF276290101A50A82B2CDD20616686C595D705207AF
5D954D610E07C03D09DECC7F3DBFC0ED3E34BABA439A9E37DABEAFADA3596464
160CC7020D801E77B36491295345188CDF8229A2A00756F9524C6D8792B40798
C235D9B2C747492C95408C94CFF85B3751ECFB9D6D9812559025090BFC95F051
348F2A5D7153E1B35AC30149BF74112EF1FA8506705B095567736FF6E041ED27
199A84F068ABA9CABE128184C7AB1FCD67C6CFB9A22E3AFF0485ADFB51E5E31D
3B8A985CF7B2A1CB257C3A44A16F16EA630F4019D2E22488F37A789ED599E79B
36D9E48E1BE994C9B7BD92EF1188ECEE4B6B88ABF5B5C3DC10D85D0D54BADC84
1298616EB93949028A6B73E0262EB54C02A1C171AF3DCC112DE7330A23712FCF
BF392D9EAFB891DB65EACFBAE82F3C8DA142F3D6F5144C7D2DD24979B3B5A027
1B263458D397D2DA9CF40711405A1AF3F0D00396ABFC831632EE8A70D205D410
7097650E0DEDE02E1050BC8E868942C1161912F635EFBC5533AF30E4D1AED22C
2EA722504304168A60094B8DD6181DD539CB0BF3E96F60BB3315EF78512DE96A
A157139227ED2A36C2C5768F08FC478E693CA7828D4180DF5108B301320B15A4
735ED4D83C19077B534C0AF65DBB169134FA8DADD2164C296FD410ACAA955CEB
C0DBAD7B57B980EB8CDA38FE9400C351D86CDB7C52B728791F1BACBFC24CD6FD
194571D069C0A7367B6A62803794AD57A7150C01559F6EB6B3CF229E523ED893
E679B394FFCBC3866DAF29A67E1A922C1366334C753DB7E40D89789D4717601A
58AFD8154C33D63407E2EBB95CB0509DF133C8556B061B4C24A3F74A2746E3BE
67C356C00DB46CB828BA39482E44A97868DF7FAB67419E2012362C5E81BF78DA
7576D9EF0B58644849DC7A72C8CDFB2C261F5C8A22EA30D1DD0EE6B51A1675D2
B472A1B89AC2426725941A5060342CD11BD4BEBCA784AF8BBB11A67E3F57ABE5
86BF27CA4C67CAE9C46AF1BDD5D1A1627DCD13A3BCC64EC36264FABB4C7C4F88
B33262CE40C25D74C9E1119C96D4C61B8E86364A3C893AC06779DCE619BDCE0B
39828C003D3CFF770C9A081C48447E35831C06456F95A978BEB35D3727058142
A26D9CE8014A5E3ADA3E2FB8D779CEF6BE0B4712B3BF19C160399427F12302CE
23D0CA8B83D4AD3189F50E2145BC7028330B9B39F1E893972D782A86C04073D1
33947ED36F34BD68FCF68DF5BEC6A0A706AB29CFFE5A804F7EB664F355748923
6880A4C03E8F27E39AF188954AD8D03ECCDA89887AA164FF6AE3CE2BD98EECD1
79D8120F947A058DC0B1604ACBC17CE38742A92AB814BA4C11067D003515FF32
52972F028E73F8E8BBDFCCAB9AB2DCDD2E11B61E3186ECAC4EC8B559A3228C58
2BC4ACD9224F0ADF9A441E6F57C3595C415EA4B8DD3380C54395402B625D5958
B38CAD1CBC7F39B32311ED14C1D7622F76414FAE216E4239C618F1D0EC601C7E
AB530EBE6ED2DF0CF38F782C9AE7702891D6EC2684D87B06709C44F011DFFEBF
D9686E229EFCC6D041AA4A2A0BEDBEE371EC6EC05EA00FCDD2BAD14E541FDA27
154C2F4178381427F5AED3784CB873F375A9CD55DD39C6B1821305F5EA02AF73
118735243727B47EB3D7F491385112D368489DDBBD6CD8E5F7FDA30D9878145E
5B330EE1705DD353944DAAE92656BFD9FF6C32289C6FA21BDE7E037D4C437AEC
69F92A890671A4042D11368A192D2B36C959067BC2EBF94CD757246C43B51206
96075D04F2E7058513EF8C55E381B08C8E4BA8B382639BA361FD54138F1FCF2C
FDCA9AF0B63AF9DF8F0DC55E41D8691790BAD0751D913F18A1632BD0237C1B23
E7A55B6CD0D6F2267B362D1BCB4686FF4D1611F3602613775BE150AD56FD7CC5
88709B3AAF3D95C22FCCA71137A4FC4A5F9BCF7BAF9833C2A6086855CF36DFD2
5611F7CF1655C212210B73185D2B212B363F9AC2E412CF0A9F03F39351C5BF83
5DFA9FEBA662EB440F0FE08F149D9FC5154EE4C2F2A4B51846F3BDCAF1794C18
E1CD6089DA4F8DA0621A8348D70CA13D96B415982BF5FD6C097D80179D2EFD29
36C1BF69396C53565BF5D428A93D1DE5EDEAF22CA1BCC348CC4C685CBB70D2E2
CE7BBCBB7078982C4EB04A126C2BA2487ED8E6E56B41285CB50362E940030879
C263F53833C57CBCE7E09A29F0538AB98DC224A4CBB9A0A870AB880A65E81019
4FE359D12A2A41C66A45FE775DF1B546DE01497108CF0AE8B3365CAE8A4117E0
DC93A95C4D46B4105E302956913FF0D8830E901BD171838E564A9DA900766CFE
E36331C6165C8E7686746397D2686F5DE895D867B69CDE4C5F2E37A4744074C4
A2E60DC211257D4FB69034EB7994D2969FF94B6552F418EAD563D53FA4041B00
FC02A09FFABB5F96312C2B9A22BA4F3C68835B53B5AC761963B9FDF740E1853D
4FFB08260E4872E323457502743C5305D7D016E5505AD2C50C8B4D0F436249F4
B8A39D48B2E04E4AC071A38D9B1670BD6D0C8D6481E9620F2082A87758FC1D8A
D4E0F009DFB73DE66C4DCAEBA17C9FD9DEA9D67D900827D62DD959C71F158363
994EAF5067F8EB4CC00552AE181174469E2EDB0BC2891413D5ECCAD1927B94F2
C93F2661518DA18276B140DBAB955C25FEA9827479170AE80AF09359A8CBAD1B
46F2247027EC2EC8D5137BB78576D7D76559AFEC2EB64DB70601761C02AA7777
592B24C00C8368A9D042004D115BA52DA22F3FE79AFD8ADD64A0A7A236D4007C
6DBB2E929ADF2C40726B1EC0F6B319ABFBD6FB37895B44E7F9AC0D226D7C98C0
43289CCB2885585243B8DD330716FF44D84F7E12B8E5B2CA22485A5D5466A02F
E509C306CD759B2F6F443D3741B5FDB03EDE5439BC94B59035CFC5D31224B8BD
85249F4FB170B4B6F5108E5185180B677304ADD1003BBFCA4207436B6560BEC1
799213FA3E00526EB158A5EF039C8ECA083C1393FDF4F8916FEDF68C44148B89
4E58D67EB3DCD1349BAE395715DE7E2D6A6822FC92CAD0D92646C1A6509EC4EF
A5119529D161A338769616C7C50FD29A563527BED45763C35BAF0768CA9F8A3A
B3321C9FEE6E93FA06C62FC5AF126BDBCE2DD08FA2EF11C813DB56D08E75819D
CEF46669AEBD1E4E961584932746E90B3BAA6A8ACE63BB8808C05A595D19EE15
E663AE76BACEC70944AA82DF5108B301320B15A4735ED4D83C1850A35F2ACC11
92E8C6C5599A52096B79553B23B0D8C21D15097C81B2AF5DEFC753A318F185CA
B2385A9E487AE854B9EF34374F8CF2FFF2E2A593DB7AA7618487B1D3D92BA003
58AB6FC9F2050BAE18E3C94FE80AAD33CBF0CF112256778B0EDF7CE218FC019A
419E7CA039E9A5E9F53F559C88E400E64680C1E507305C1691751A5D0745EA05
678060DCB3E423D286C414E89C31A0167D93B9854CC62FDB5E9F371DE9339E30
4203D29CAFD8FB8DCA6ADCFEED9BDCAD47C282AD7AEACE514F11C4E2D5BDA139
B8A3086A1CD9DD5181FEA89AADFBAF707BAB5F1B0A2DB180C712B1442AD53D92
7E73D12016975E4E3C164EA2D752C23B476F55A202BB5A041B22E5E1F95FF6E4
EC39A557E6EB5872FBFC899EE436597B397093CE3DE0BF7854BF4320FA641E2C
793CCEC2FB1DD91E3BD52430C1DF2F080CD8E9861E5FEBBBC8675CE57FB8046B
38A50E77F656B02B6DFF3EAE8F8B7BCD2A8CE8340758AEDCC24EA63876BB3F3C
C3F51AB118DE5321A022EA5FDB659CF66AF18D3D5588A6C65A9CBA58CCA0A903
9ECB29B53311374F809B3390FBDA3D9E4D6B1326661BBEB53C0EFB3535B8F159
090FBA65CE6E9AD08A7F035020FDC7097F6E40BBD704E1D9F468464493DF480A
E5548D39F43EDB3C3F9448D07EDE0C1A72D2AECFE62C8131D60BC25DAF997842
6E6C7F2C6C36383668DB3FB5638BA429F048EB9AE2FC98C7572C4D8DDAC3E33B
3F38C962790108A7467598BC640B4ECC3FCCA3EDAB984BF7A3AD8D316B1451E3
8907B58D1C9662DE1250E46AF13A236BA11607EC8573CD09057B6789C3CA5FF9
D0E0CD879B9C67A40C1D82FDCBEA468D63CFE51F1A1610FCB55C5D031A9F8F86
3212F1D8DB22470CCE287D15A709E55380BD9D21D9AE8C10E28C6BBC07D833D4
AA8A36BE77F584D4963DCEF3DF8E7201A7E498C72B59FC8B724D77D0C69A58F6
8D0EC160DE8C752E2E45B8C1677EDFAB3F935229A89547785D57AB4B9C4A301A
8D777F2079DF3CF06FAAAE42D0F647E5F8BED8AC5755291E80ED90F60FB936DA
003EBD0AC7E3ECFE81B012BA84AC04C928B8663C9865BCD81F1D0D7E8214F303
27A09E39107F8E39D130F15FECC354CE0EC013062F8134ADB0EB49F3D6A7549C
59237139C639A5442C42546203F684F758FCABEA3182BCB9984E3474A9C4554A
086B80EA65D1E1A17E8C61CC15333BD0DB5AFB480E981B702C43FA3190CDB554
0149643F211172407C39AC0131065CB500385362C273D4A012A3F65A63950D1B
9DB8A6631974ABA413DDCE833183DC23E00484C793159A4BD8DB7FA2AD99C9C8
E1773288AE47B1A35F0E7FF41DEEEA3B4584439D2436226E55C23FC87BED076F
24BB4EF817C3094F008B156E60DE6EDB539F5DB1C1989464129284A50ECBCC16
BAFDE43CACE3D33A98CC7612DD6081693CAE5E82A6E25960467011A1D594F9FD
D3F6E679771FA5BE041156CEAEDBEBE32208A0FAF948D7A91A4DFBB8CA5ABCA3
387C78E203E7BBDC927970F983C721DB246CC8CC072B11B3AC54C08D06A6B392
C9209C5A43E0A3FBA8AA196E33819D2B39AFA579F91F534B15A83436BEAE710D
5F86795D343A4EEEF97F87C59290CF2FAA611BF4E002ADD3EC484AE662E06B4A
BF0520FCDBDF4085690E0EBBB96D672132CD296FFFB953607F420B9228C3B45A
26663E149C25BE681BA215ABA14D088EB223E95401B7CDD0B4F6F53AC268DFCB
F94CA8AA45EFF92E2C85EDC76A0C7028974C473885D4AF6BEA4446AA2EE6378B
76607E94F04D1B7B354AE32F763EFC212C69E54EEC1853CFB9D435CB9B01416B
B52132598833C003943BF3F246E5094B6B4B28A8FF933FE588F6BEE2D753DB52
D6A88E046B7ECD10D8390E91A587DC9F82B6BE0B2A07ED0090EB9E8F78F7775E
EAF17A4FA9AED4B3E88DE1F0B07D1807C680AAA607148A5257BBB66CDADDC56C
29B4CA959785EEB0188119846408C2D3CA63159A0300C7F03BDC406E504F0E98
5B4FE5E4538DCDFEA12550B2D618339ECFB7AF2F5F0C9C2F2A03123AC89F962A
9C877E144B9A7176582C49B933DB03DDFF8DAAD9717C5F25481982F05E0F0DC6
E93A7777ABEB13532B309AD92D87411188C875A3ECEE8D07FFF217B9A8731FCF
6FDDFE7DCF86D9E96F685589C5F1411BF492640EEB1DFBE8CEAD30E705CBB81F
D21538E323C8D7EBA4461B4F14B213434BEC3351C00DFD29F397413DF9687AB4
BFB276F7089F213F7275BA69DCCE0B53F102096B866260134116D47650F83C29
6A621330A1E07158D555116A963C0547A0C0F58F4275318ECA1FE479B4E35985
FEEB5D4A9ADEB532804A381CAB2ABF9122B7E2064A376465EF207E9E36EA47D4
03FAE9E71879CF8386180B096B7B6D40B5C19BF9571771DC8C76A8F4B35BFE0B
21DAD678A9FAC80990BD7BAD05176F4330E444E65664EC52070597073759A48C
C3C62EF7F3B6E84FCADA0C0070CD016F4709137E82A6F629B801453ED2F28B1B
9EDBF53FFC02842099E14BCF76530FD861E3A8381E49D14A94669F3C3040C6A9
1E3B75A4F0F369AB0D0FF87D6FC3EB33C3702DA3BACF1E5FFBE997461C46F8AA
A08B1B0BB86F9EFCCB1509860F4D512ABF4A895B7B801881DA24C91C1965B07E
124F9DDBDB416F69CDB2B6F8C21A258491FFBE0AB9C0FB3CE54A2AF8C847C842
53F5CAC8315D201FF99CB97155C7490BFB9C965B8D8FD8D8234E1BC69AD30D3A
037DB040BCE3CA6C0BDE2B67BE5B206883CC78434B7BE9CFB3137BD9AFC3ACEF
3AC4890DEF5150662BD22991E0AADD5025E5DBF15404468FF6A49FC46A0E8232
2DF73C3A70212E4B461BA8EB776B482CC1367457A1632F50FE4DB17F461C93C0
708F3A02D74030883D4F9DEB15ECD7598762770D9152E6F2E278070B1FA8D793
B1DE31343CBE5E643A2EF56BB692F6094A8A71F70C8F06A64B06453D56A0FD51
213FC29A0FE8B6817DA8346254A09349DF9D70DB7987C808BF0E9167880822DF
FCD57DB107E0D5E728CA781CD07C992E85A226D4DF1AA509737DE521197C6510
F825E62518994DA1849A5F552E93429517B060621D7887E6D24D8553E18D5C5D
184F15DCDD31F2F3BE22AD097C23E3D43BC2A56EF63CB501C6211D5D40336AEC
B014E2B65B5C3323358226C5CE066E09CEBB4DED573B688E8BCCD4DA76880BF6
DB5AD71040ABA21FC0FF463926964BB1F9DA0EE178E6266B7FD342065EB3C238
FAD877C8818CEC5F7D18EA999ED27FD3AE78174F735571866AC1F806EB13CF9B
AD063CF4F6F259B8E9F871FEC6431082E692BE4AA7896819D60EE7829B00A456
4D9A9C6EB5F9EA152542989BEBD49F84FEF4C2CF83F63F58A3DAE1C7D28F9D3C
44EF68E4E09A0E265A263C6E764DF1AC534E20FA47D4543528934BE457BDCE81
9DF1DA3844E979EDF743F2C75CA4AE1F98DAF128FEC59BEB64184A3E809BE43A
13728807DA6179712958D1F81BECD4BDEB5B897087525295A1AABF37E3C1B6D3
DA1F1762E9A240803CF44B0A08F5D46A50C126DAD1C273004192ABFFD6A0D606
A24984276F4838727E6C4BE242BDCDF8259CA101C52F7A0F89A52EB0A4C3F910
C3387BE15D70E4A43CB3A1A220E717CEFF296D5828DF1BF84531D6616A960515
BCE7B2A5437B0749170D2945846FCEA1F0ACF4A1D162512FD1604BF062EC5F48
29ED22D09A48086B40676990E4B52975AE8955F1DF7EB064E9926E9589D61F62
1B1C51CFF129AD70CC7288E1032DF92C9DDE43B62C069A0ECA345E3D53DA4AB6
E11E3ECA1B860FEC9804646A93C6FCDDECD49EA04D85A2B9A839F2E11FF75D8A
3DC98300E2379734E9F49C0E6A6D9E0886ADFECDBFE5B1D606E8E43DDE179D45
C0238483363104927A2F54153571397342E9B18C7FF8C2D534ED5B03E86137C7
DE7082060DB48B6BF3DC2DF69EE874DF3C2D253A917B5417E1762D7D2CEFF02C
32B8B91CC2364E7F4D66DD2684B2737A6A325BF051784EBBFE01F9B8C65A3817
799AAA5A32A3737C53237A8A52553C848088BF730669D197098DBA0F172A1900
286522FE8ECDECECEA7062B322B87851BCE2F658E07099DA3B71E6EEBCAC80D1
76DE5A1043B26CD6643C199797840AD76C90D1775AD2C449774E20CA85246DFF
8B3E1446FBADD16D472602C227A9D4EBD5E32C525FADB35AD77D866EAC1E5B55
BB1251BC4D0556B334E68F282E0F6CF621B41C6DE0AD92E4D5CBEA52E4D77A93
C30BEEBFF2BCAFB8ECFC15303503F21C2C27F891AD8F8A081BEE082E10265999
EFAB82D300511B05C15FC42AC1EEB4EB46395AEE796C5083512B168BCF1ED1E1
CA038B1BCCA8277F8273826F0492B5DD0B068D6CC3B31AD39587518860C9B051
56A54FD3546C058A9245B9BE5281CB07EE023427A92F9CE85E9DCD8C26B19FCA
BA39E28507DAD9027186C18ECF4ED39C9C6FBCD7109FA661F4D48AFE04875493
95CED7A72EDD3BC0CEC5B24B93A225B7A6E0AC4D7E62C82A0E03C14593FB1046
FD1046F62D488E9F098ABA0C2A04B2BF0094B938BF4A95F4DA2B17DEDFC6A6C6
52186D61E199D1076B3AFE4977270D6C2F70F4C2B40372CB6B3FC8A6CE75C470
2CBF0E6741D8BCCC5BEA9F48E9FFFC8F7DD8D3A9EA1A862537B251CD23BF2C07
355D78E4D5B50C996F1A54AEEB1016097F93C13CF007E8425204F3689196C3A9
40E4C4769E0499592A55341A10182866171000587AACB0E431E03E170CBDA9FF
1FCA427DF02D6143F71C9806AB120AB51C2D9CEA9667DA7D27DD67BE764DE6B8
486568DBC601E298F7D00215A04F0BC5A5BCD11F6313488F97E20C5A4FFE6C09
2F0B163D58AF491169D7F545D1EC0AD9D97B0D1AB9AF519C586F6BCF6AB155A6
30EA96F88C869DCC73B23098C20065E0F7F2493351BE46B1F48F50F6787ABC2E
9CCC69C8AFA93DCE5742F2D4F917DD620660DB48B5721FCA3CDC3DC7FDEBDF9C
D047624512D8C5AE3BD558D7026DB6D1E2CF5F084CE3AABCF4158B07DAAC0DEF
A64F762A9B14F265505818C336107989D8A645A32F679C3A002C314816740EA9
B262DF67065C92733A204523DECF86D70447A2BB03839019B06BF8B30FFF0E87
D0272625C2767D01FACEBF0A9AE90D059B33327D2D1DD78D1B7A61C739AA118E
DA902829D2D5F1361B844EF9401189ACD8EDEAAB24340F56F4579FD3050FDC4C
5D2CC96A891F9C6F41ACCE665D840B3BD946646F58084A7C5706771A5BB43592
340911675EB2AAE536E5981E65098D21ED468F3E9D44276DFFF4415537BFDBA6
B73C464726A4E028D2232734DD9B7754CA5666D2C1D17FC43203CF6537CA712E
79210650121A7BABA636171E6814A1398DCD7712695DE65E36E69ED644624811
F7AB3C01A2BF5A2F5022454C05F6E7BE74AA08B9E76D1CEB1D4830337DDA78CF
77653E23B38B5C7B3BBE5136F323DE5D841EEE5BB46BFEC2D34AFDE7724F53FD
403FB6F0F38A82A1E37C877C133289F948AD353C1160654D865A3684B6E430D5
C9B538BDA47427D0E082B57014209F2FA7169529D0C497BCBD3953159962E0B0
1C5DFB099C969E46B3979D61DD175A54FA8DD249F8D27A04EBD9FFCF04B34BBB
659382B803A6AAE4FAD58A1931BF7FF2E9351F8081CA1B65B1FDB6C707E58865
6B193C9E323849E5A8761BE6343DCE5A3CA9B8B8F2BDCBD49F4CA39FBA8DBE4A
99B0E7AE70A587F859FA6AB02F16E580936E45EDFA194B4744286F89E913D022
C35CC31123C070925E3F5BEE5AF007203969B78A83A9F9E02DACFA57E13CB0CC
B196A462A2C651EB76B552E19DABFD49091C5D41071210DB35F90E7F3FA85CFD
58F8482272C24A3B73FF4ED02A4AF6F20A2E7578F783FE3E4B37B7C27F295D9B
362AF06864141314CE48952847C0DBA88A4CC2A790D426DF18AFBA650A3BE44A
9A016914FB7A7A67BA19A5203A130702729D7B24A5C17DEA160D817B6226568D
05ECCD3D2538B3B328FF3DCDB8299A2C0FC15DAB7DCE48D2C5CA7E3A4EE26608
FA2F48C9A647F59C9D93817387E1008E89241DEF3224534B166E332CC39BDD7F
1560D58FC968EF269DA475EAED963F35C9AD1CDD5B5C57E4EDEBCE7C0C6E682E
91864909E4EC12014E33B72BD8ED2A6605758681BB6B0BCCE0D508EF485539C7
E59D855DAB6C6EBAD0FDD3F6E025AA14564481DD59EDEC189B41C30A81769F62
E131E8C07A8F002F64BD7E00FE599D419B3E98788FF65CF65CC23916BEB031A7
CF17FE688D3C21C5A5BD397AFD49DBC0317AFFD85FA1A1CF898B92DBB3F64574
7BA3E9F143C7E347570AD63E31266B99B80F3D42E0605A9110116BAF971879F9
616C1ADE9373DEACEE2127D85E213A42370A8142A26D9CE8014A5E3ADA3E2FB8
D770872E50B8E91DBD0424ED4D682D6B2E5E4470B542ED2B428A212D3188AF2B
6D8D7079F3CAC359C494D3049706CB5FF8EC37092ED0A93F85BB0295582598BE
041F093B7E72F543F36EBF16863F5CB104BF9CE1FBB610A4C6F8A1713A64C99E
A0A864F3339E0AF4CB954B8D0C08D4886CCC9C827FD15EA321BE3606C2DD6B05
53111838BAF7A2392FAA03F29834854FF29104C105CC74E6444370978A689CF1
DF8E35E7D30FBCE16F23FEA2F6224490FE5626C85484125FA56A3EE671140217
9B84494F7BD45B893938FF859BA4BB2386E3A698C125AE6CC4F5451FDFDF5CAC
B2605BFEDAE595738B082B346FE3ECDF23EFC0B8D4EB2B01D5A9F66C4F808777
6D4DD9DDC73442DFC2B6C2B667E14A64221B28BF5E815184A99FF881557200C8
0A7A44AC3EA8F52420EEA36A5D9C2EFE0D82006B5E61E4B8920ED125D8C5554A
45816F11C1711C1436BC13F049ABC3E98FC118E144743051B19AA92F44B26DA2
8481F353411F9774670DE9CE6FA995F89E2C131533D11B2CD5F5F471B1C4DE53
6D96C58957DFCDE8D4099FA355E9BA04AECAEFD6021E95672E290117C783D9EB
A4A621112900203797B1BB9DFCB57C5F9919FA5D7967647CE47734D1CC5BC9A9
BE0E1BD49D9B089B9D3242AB61F3B2C742FD653E6153F972E31C429B3BF323FF
2243757696C3F131565791966304AB31D224045184E81C83C06948308B388E7C
CB0C17D6B04C83FB8EF288D2CA2B79B9091328682AD25388EB347390DD0D3DA9
032AFE78155BFB319F17E89E4CDAA34BFD3562BFE612EB64C4DC165BD6C64C44
F448EF1E8D5D79A5BDEE7B07BA3E87D05609F98B86B9DE9C6EF35FCF21087617
1868C5ED5B3BAEE75E65E69F88169F3E45D356FD6EB9859A6222161D648F013F
0A06284218CFAF1B03149A7002204F94345FFB6121289BD5D224B6773A160EFC
AC525A242788C2C5D2025950BAC30C1CF07335D834F1EA24535EED0EC22A11B2
283329D736A8E92B55B44A26EB148E00C234CBD9283E1388EC3823D030DD8DF6
5430114AB55D48D4B8BFB71D48A40F623E2050CF50990D0054D0221FFF60AA48
B80169F6CF1E9FE72F61908BDB82ECEA94395D64C166797ABD0AD52B93518CBA
FCAB425D7046EE3E1072BA0ADA88CA6C88585D746C0BD2F8664253B09D554A51
D7F0934E467D0836E61D7168F5F61A185F9CC9FBFA1C35574DCD40BEA70F6073
CE5AC933FC037E5F2F94AAAC2F79B889E01CEA054B1B7F820C3860BC2E071B46
0F9CA0CA1549E57E7D8F78FD6593CA914C8AFC02EE9C4488BC1E1EA3421BFA6E
E9FE5CEEEFBE156F9CAF46C80BB2D4C82028AA8559013A676E0F538635CE2654
5EFD834FB1852B89AF087751A4CC63E21B96747F462E592E0892FFCD20D4F617
5B29A63FCE57CDDA5787C1DFD5E7EFACD3EAF8D1DAB8D2823EB8EB14A9EBDCAD
DDD26157FDFDAB78EA08FE0720BA9FA145A5E65F4E17D216F5329079A7451583
69D79B3C9E5B11F57B2CAA057250FFD4B5CCDB919E94D8037D2AE7557743F6A8
6466D0AE89FCC43C09F831D7698B2CF99ADE944D3170CDF535C93A81CEFD9AAD
AF99442469E751DE805FAE820B142DF919479BD0F40E63B9E58CA6C621599B79
7960816111F24E066D4309E5C79B78B3A92E908F56D1E50261EC8A5A72B37986
9F508EF0CBA84915DCFC5C665FFE262BC00C93964EB65A20C06A4F84C3E07272
B3411C1B2CC001516E6FD2FE6DEB5EFA9B08B1B596E6FC572CD65FBCD34FF179
CC45E4315DDFFA8EAE9935CE519AF6FD3CCAE4EDA4DC98F5FEDE3FB3C78B55EA
420B0D305B346C8B2746DAD5D2FEC28C825765379390A0762F21B4BC764C594D
F88DF875FE7DA25BDD9D2966D8D49EFA11474B5673916DA82712EFD88D2627D4
F45FDED64048E638DAD360813C3534C7DA7FCC6F86B3C7B63E2AC804AA7BAE5F
1AA29B9DE1CB6C4A440955BC5B91BE2EC4735D1CB6D11F5694DDECD2D0EABBB6
1E081EF4165B1E5ACBC1014F7C1A70AFE4DEF500BB7DF5A028B4B211C507358F
C6ED7F957CA50A8424B8C47BB9D11B0E2ADD686D7741ECC589E490BBB5235D10
255DC5F682E76315D54DB4127E4913EDFDDFF4EEF10748D687A171B516033CD8
CF008D35E1F3EA72ECFDD597669E202846B5A534E9AA7D140C116557F4DF1322
4E6BF50AE978B47289AF16AE1131858D1D285646154AB09C4089919CEF3EB08C
046EDBCB0EAE35CE4C306CAD2563ED98F54CA399CE75BDA7BA455B12198FE9AE
74FBC99A6A131EAA9BD883832DFC61B43509FF1EF0579A8C856CEBD8C9C17CDD
59FCCB243E4A43255ADBE147BF847BE25DA6564BF0040FD3BF33078FF32920E1
BD47517CB7972FC490BF9A24A7D6C645A58DC40872F0D4FB3846468DD0E1B6B0
7C63B2FF553A7E1727CB5AC1FD8887B5891925BE06129DD8582DCBA6F60B4363
6466DF55A6EAC6373A8B8275324761902070C78552A2B6F5D152DB007A5D5057
4FB05C1CA1C7031BC278E045B1E3BF4C95EB87F5F94A6D768F688E4C5CB9404C
2141EFD1ACBF58EC5B71D4D8CD0E6A706829FA42E103D27C5BF22EA86143EE1F
5F431C6424116D78576E6AF360ABBBB3510271FB9E0E3B7447EFF5064550D32B
C1D17273C76B9489BEAB22BC593A7F568F6DBA9C226499777DE84EF2DAE9C671
3827FCFA487E7C317028FE1C257013C8665F0A3C7A770B7E437808EA37F3794A
7C09F14D61DBDC8701FD2BC30D69FED76BCD763209EADC191D02D264EA4DFFAA
2A86F7813B03972437FF4A9503514D60C800336699B6E5D7E59529996D350F94
920667FE959B98E610B9B05AC46C88E0413F442A4D6C4EB576C5230413C7C15F
6CAF6789FC606114AF21C41F5F7EAA89DB2B708E4FCD39B27117F50547117E80
08EB4A79CBA71E7DFB9156A97F3BFFDC172681615E466510F54821939EFA8F33
D4611E1BC62F8CD5798A328755192754C7136124AD8A42A1C3F4C48655B80AD1
3CA252116C7A155C65E19017DEABF5F0BC4DDC77492B95C5D023A593F10DF9E9
CADC79CDB4A6A97C53EE7FB04FB26D886BF823E658085E0118FC8D058ADC92D9
9340E775300223A442B5C71DEBDF2900F1C983743F0CE4073E7ACA65E7CBC502
10003B7D928BACCFCB7088355D6E86CE1229E6A31A4C30E2613E5B974EF890F0
529C5E6793AF7318B1DA3CD543C5DA787B77A9A416BF0B8F8FDD00BF7D406DA5
4BDE778D6CF5E7474EC0512D0B497A23F526530227DF2D3A89FE16F2D19D4C88
ECE4CDCC9BBB17BA2FAA627493B820B350B08B2DB7F90C8422A2062870DB5313
5CB0F1F63EF9923C4642F6D128EA0DDA8923090A771BA12FBF48B4B14DAE4A0D
207FF4906E1A6966B9D405D7DB9AAB943163ADB74BE56EBB99AD8E3496634B3C
B3C694DC5C73CBE48B5FF8AA08B64AFBC104282B35E5D4BFE1F763F47A22A833
6DCBF80DFA48B94C43DC71A92B211A08ADA27B36C4A7E0DC5C7D5B5BAB3E2DC5
ACB986170DDF924AFDAB7E1EA6BD92699CFDE25C4703FB61DAB8A41486B51AD5
D73DB7D67BB637DF8AB79D09CF7053E07FDFDE070646A8C0B5012660901F7F6F
EAACAE7577A6E26212C17B749E633203FECE72BEB45159931840BBCEA9595051
14DC5E988750CF2DFF8A7D5D9CCDAB675F190F19C8702AE7E0E09226C2A6209C
14BF4936EE167E786AE8322004214C225EEE82CDC14BE36A76720B1DEB9E5687
58A54AAE1E05E637A68FFE7C34E3F174C8C286264F1F1EE65813EC952C5DD519
139A0AE8D844A8DB2C8A2F80C5EAA1A120F74CE51AD4D4FC9C52212BB14CC701
750E250036E972D277A804452E3AFDBD41ABD2821D169A03124B9D1FD1B16A48
269401C3D5897EE1657A635C1E4E91683D6FA033591C0EFCF957DD3E4497372E
7CB3AF2D0C319BB13D4BD0B021651095E3D6FC80B64A4A96901D4762920494E8
9AB0E32CBBD1F53D80AE36257C8B6587F91144EA217EF7CDF1399A0698CDA8F0
272FD85B73F9AE5A34EFD956E80D1DDA2BCCFB0F8BC12085CACF4ED347EC902D
99F02182C18245670FE3AB55140D306A6451D7146A9BAE4E8E3617B86FAB4782
4FFCC66CB641CE624A7091E939B3936E0DF006165126C0EB3BE7066C312DB761
D57303E1C5F40B9DEB7930EB1F2049B259C75986EF12B16705FAA5C4FD2EE185
B93723A8B05F616540A135AF1A9C1095E8E1F472FFEA48E2DFDEFE41BECA5515
06007F5A03DAC31F728442DAB0B5639634B01F4D0DF28D9837DB38719496F57A
02CB665E68612F46932E4BED73139C6B0C2D70A1D0CF25272663585D0F3ACE38
EFB4C2179B539288355F0E04C76E11FD224F27CB2CECF935166CD196CF54DD58
D42D108A9435F31BB986D7AFD3EDD23F20B7951D2AFBE938897A297B4FDB6FEE
AFEA9DCDEC6A4AA556A20095EEA2FA1F6F59F1118E9A1D890C56167C0B3ED08D
3F3AA28B30FC1255BA6FA49916CFA73FF962A7FCDA1C19ED5DA3B1B70B69726D
A179EE9CAEA3411E2D55E4F196C0C7AA53466087ED66327F62129501A2A4068D
A94738318C5D0B888D30CA553CAF36D079D3B029B4AAFC48BC72474D55881C0A
794FFC02B4401545B675BCF5D4DCFEC1D0567CD0F4DC7356A6A8417358BD0F22
33C33AEEC36FEE599FA4F0D57DEDCF45D50C86D34A9403DACFE7E83A0AE01635
E4C23737C23E3882C9FD2887EDEB7705DE586D9CDFB89CF942DD6FAB8C0FACC7
1A0ED94302F94AE0C2D4B23F2EC9913D99CD6BD9506523DC7C8D16D62141D0C2
E0B5B7B1E2C0518CCD1C46C773C5F92AB268C620700014D672188DEF6FA08825
7068F387BA9B208F137D44B3114F444F6840AF6DC40F261787309FFB43DBF121
EE10BF79DF2CE201C4547D79DEE50CA66120358A9E7E793B3DBB47B8875550F9
CCEDA615800AD9345A119CD26ADBFACAEA3D150BE1DAE2E09E8571A184BA719E
01DAA04A8ABAA6E2B607E482E6D9A18E76CBD6722CC54627DF986D36A8B15F2D
FC7A9E0E722B3D1F061DF933B9DFF9AEBCDEF37056F7EC89ABDC5A14485FA97D
157FE3B205D2FD12E85439BE81FD3CF55D031F46651D7ED6D216C8DD1EED2532
2EAFF36256AC2F32AF9015DB8F28A9DF36DE1D29632A35E1AC26B990DDA6FB4E
E4F32B8971F9AED7C458A55104A3D592CA32ED9619CE57EC9F3D6BE122C05CB2
59E2CD24A82857C8AABAB336925D2C477096CEB834596047C72462C3CB278AF5
EC0AA8F24427E529B4BA00E2114BDCF2DA7DA43AB2C410D199E264A24DDE811B
B042A06E2512D19A307F0E8337588BA9D2672BD5F64EC2BB0C204CE7686F1AF9
6F3CCA144C001A4D3456AC53414B7189B358D594028C3D04144C7BC3059E30CE
04CFFA5962970B6400B2F13829EA8A1539B69F9572F172EA85C4E2CCC8395223
D6F6E0B9E2BFA6299493B97D562CB912CA8D98F4771D7CFA8EBF7967750F8B18
8FD92224C42D746567FE2F8AE7F49E2D5483EBF9CC46179D4C7EE958FDD868B3
EBAFF3A8FF9D95709D48A9D53BE43C914BAC848275C2AC8B4AD96297944E02C8
D1242FC082767BC8BADE75E890769368299A98533EF0A33D7C299739B3E33AF2
3B079A8192EAAB1F7BA8C673D52E0ED54086FD1E06EF015C0F5F9A1A068EADED
4902E8DF99E1E6037AAEB313CBF1C260EDB41FA91194A30A608DC79CC6740BD2
A3C8BDC7A7726FE35352DC1F5EEBBB215AC82235D755D95F202B3635B5AD8C9C
44DCA31BE0A40FE6F8E9EF245A496C1DDC059B7A130120FBB1550F7C7142B50D
7ADC6FA2437BDE99B5C0A764BADA87BFD7B94DF69BB0EAA854A57AB1B67F5FE2
1A7CCD672543D065C1B766A4756FC5AF6BABF664DC3A2E5A3A68FBA78BCC44D4
8085F6AB0E6AB63A4835C7A9DFA9B9534983CABD4F142023101E8718942B52E2
EB3A168D32A17A927E91C621BF9DD83D29D298EBBABCE1E0EFD6E02334BBAED9
9E767CCFC1467945191DC8A196678E055FBDB52808C1BA37B545D69521C0B835
8DF351A30763C17894C53DB896931DB596C72CDB56CA151AFAA2B9A6CFD4AA6D
8514625AD0C881E43EEED1FE7F0EDF852304890FF98E307AD5A3EC91B26B4CE0
B05F62287A181F6F49EFB7A688AEFE1C59BAA6404CF31F23E381FD24A588A223
9EB6AAF2DBC842CDBACBD113F9E78C4CA09D347573760092E1B05DDECCF3EC9E
7D2A856F809C49E97F083AFD34DF42682EC1CF0BC639F804CACEDC027CCB014D
180C78D8148A478A707AEEC32B62209008347C7070BE367A6514600CCCA8D8AC
ED80C82143E9F60E843E7076F4F578E16F0A3F2F529FF0897D92F53A21E49D65
A042C34E424D861F13DBC4D81DE98EAF7E9636E2C960ECBD61CF3DE703432761
26B74DFC9B25F43D86784740B8CD17866C6A256C4C9E5814A3E7E3C9A5F2D8A7
1689CF87F9E1A917EB2086303400156876F96ADE04770E82FE5E1D3CA9608AB8
774EFE9EC971B2EB5494DF90D7D6A02BD00E99DA4BFB4A0F8367E523CFCD5FEF
A0246626D28440BA90DB500FE9B6CD4FC887B63E79672E94E35A94C04045BAF5
9A5B34D011A809A583ABFC4DE3E8F768487344D5230F9F407E92FE63BE6F2867
A30E4BB3E9DB49798D05428048A206FD9B8F1014B23EF37EC8997BE0C03F0214
117CF1A5885C75199A50D5B33C18210D142A6D607225974A50FE45BD6E30E64F
6D28C9E5CB18CB27FA4C49ED25C9DF5EDD952515B975F57B41B4AACFA5A02FAC
CD94735D555572941486F733909B1AD59B3B858405FF66BC404C4C54458D3F85
6BCBB9C4E60761DFEB6E33A7E240C34D5E3D391BD4D02D5CEFA8720AA0FA4F39
A4FCA6A6878CA854FA395B3A553A90B310229C296F79F32323B10F276FE99980
3852D8CD7443A1E671F4356D46784F383A981A24B0A77C0A4FFBB9EB2CA2432F
57D1706F638F8DE50334BE118839F8573FCDC1803ADD9765A1E2A325121616DB
CD6E87833526608ABDB10AE6F36BAAC3B5EC53105F28CDA944DB25D1D84520AE
290C0F8B9488FB63EEEB88EBEE743F7DABB2FB9AE8AFAEDD34EF5024B45F5470
0A87078DD01ABD041BCA6876107608F8AF75D8F4ADA85FEB5380465B596DB4D6
8986E341982A0D52D23A285BA2CDFDF1F0BCE01D3514C6055E8701F005B3248F
03448D99B9FAACB0D108ABB980C4691DBF9259E17ACA9EF5A0D187419AC58CCB
6EEF59F36356D504557A8D3443CE87AC5B0AE0F1E09ED7D5495408DE2DD3FB08
29A403C08460627E748F2BB0879E8DD7A64C8732200B6879574CC5A55847020C
E585136C047FEB8AE7AEDA7E9E71F09C07A43A4C5B254FBC1BEB71E11159C3BA
0CA3CA205C9EC1ADAAE53D8D220F1F2315F050D5EB102500DF5BC7CB303D43EC
7FEEED4CF04BBC21830A8C9861CF2D0D2ED5F4C9619F082296A833918289B521
BE7AA723C53EAAB5F2D54AC54D1A67BCB761BBB6AEFEB174A1EA984CEAF61A99
67A4C1381D0DDE83EE052446E636535F7DFB2A9E048371524A4419C9A848F349
A87BAEA2FE3D696E81238FA8B8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFIT1000
%!FontType1-1.0: SFIT1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecit1000, tcit1000, lait1000, lbit1000, lcit1000, rxit1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter Italic) def
/FamilyName (Computer Modern) def
/ItalicAngle -14.04 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFIT1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-70 -360 1392 838}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1EC5CA76F3FA433922B4C840F1C54D4B410FA
232DA4932F27F16BF8CDB753CD6792A9900A99C9E3BD6F918ACE957247053A6D
CDE451BCC8152EC7EDF3B9CE759577DD04909FD40AB24CC6AA440A56F2CB9532
A73D218580C6DCD7E84886ADCE804D9F56F691CA8CF6E04FCDECDC50E89D7302
BB4D479AA36196E44A9D011AD1C00057557163AA01AA4B4C20C209D06ABB835D
1F5282F47D7332C6619F4935B9829E8079E6C4C87C5A575D0C55C7DCF7AFD6BC
F67CF36212DA945EDC9224B1ECE9EB6152E6B57F3BF4792E91CDADD900B003C9
38CB162E3C1D4A8A925425634B2B530A17B104E9A21ECC2F6A30B3231C7C27BA
3EAB9BF231CED0440B8597B3A35E21A3E66C525B80AB147ECFE4E152371A4334
7DBF05A7A1276CB46FB64FE8C2484AFADBBD17B2F94A506A34A9BA0352A91B3D
EFCBC9CA192F4D8DE86416ADB1869D73AD1A69D249329EDA2D1D461E41213E6B
67BC4EDEDB56018F4037D72E6541578BFDD16144EC5F060B95A21772C4119DE4
65FFB95D789B8CB67F10DE655754C0E291F5D1FB382E99E176828D613909BD2E
070F7DEF8E24A4F500B585D8B6CDC52556327CE9C1CC1340A4FE7C15A9E0DE60
0581DE277AD86FA6713EBFE15B8999EDD0406BBB0F061882534458E05F47E30F
9EDC56CB842043ACD4E4BA5C7E082994AACCCC572024A2FBC82DEFB47B9A7ED5
DAC997F0C96EBD73A06BD8216A3C4550E6174C2367BF8124D0B1DA92E27362B2
B9578F0F8E2742E4AC3390ACDFBBFA745CAF433C115BC700B365EDA52C52D99B
BF3C16AB5A6F265D4BAE09F326C7A3B460F007C1D9B1D0194F525E6CAE7FD75C
8C34E6B895ADD598B347947BFB29E19B19B7B1996C96D8B52302D9B7E47FD932
AE04BA80A0B5C87DEDF27CFD603C275A1F76E771B475E1A557A52CF5D26CDF0A
EAD7DAB007222B745D0B23C18060C4CB1831B22948BF12F26C82B2DAC99069F1
62BDC009DCED2FCDDF7AA5E402A021411BFFD9998F9AEBE37DE5068418F41A00
7E64514ECC2A92464398A1EDE91EDC4F4ABE39D2E21CE8C3731E27B0875ED86B
498E4793915F5AC9E2301686F8797624292BC3926D03E4312FB7EFB1E3181CE8
AA1E1021BF9D790BCD66B9872418F069ED55BFFB7FC986E5F6CB5689F1A9FFB7
1AA7E9AC2E727754189AF4EC871967BD941D8D902967B91008513A04D2CA8953
09CC0EB0CC9F750D3E83208C1680D7EC237281515637F0A5F17D7FB87BFAA3AF
BDEBE3188BF82663CA731F3585C9B36A75CC7AC35A6FFF0BE78E130BE08DA99B
91A1A28AF31522A66B8E9D7F2FD3D3F43B63C0A85906EA4630758B5758A5F889
A5F503843C952897FC91509B6B005BD64976069ADDA18339E60749C218E063B3
95D84D04AA7720241888D3B8A97F5F335EDA4288B928203E2A322535DB173570
90B097E6BDE9FA15474AC675E8EE1F8ACD91E467EA0CA90AC3D4350A1D2629A0
BF31DA39D896411D284071D290F35E9B5A8B9C7E229F4FC592844ACEE1A51AF1
286DB7C95F1BA7E3806A1534708C378F4040B24E57BA7672E19E360549603C07
27A4C0D16EB37C370007FD788E29F5307474F5BC80E8420C2C6821DA85B67247
44DA0A4001DD7FAF6007B39AF03107E692DE39C36120FB8B7436070F4ECFE8B4
85C8713C7F7521A66CE5EBA4A3DD01B7C3A294BBD33CF33DAF8A4BC2C999DA93
F9BDD9A430ECDE68909538D6EB53D9EDEB8273F35B5525344780C3FE46F28CEE
9055AF13161B0F081D6BB68257AEB962FA833C544AD27F09499AC5CE6853F0DF
9F7538A7CB7C78A8C6FA2C41AD66D3EC9336767AA7FC3F80225397856BDA04DD
10EA95BC31763F5B08FBD9B21015A30F22586073086AB006C5491F3C9C9235A7
D5504E3D19C9D40FC304CAC934D15F54843673A03AEA4A5715C490B1EFCCACC5
8A1FEA7C7EAE33C2D9039CC3ACDB83FB1ED7D11499EF300E5CDFCA88076A4D46
7ABBCF8AA54D8B208F973B30B14681571753969E4DE4886646768299303CD0D8
39F87ADEF6159361BB0B9BD43D4B8D7191ABA95918FA239B603CA9EAFFEE039C
DB86451D5EEDF753D98DE208137F2DA6C21235C6C2A77D5E12C4DFBD2BF4BFE1
6F013EA511AFF68F29ECBCBA6F781036AE44B7095C1DECBFCA593B9A88B37BAF
7CAA5689A784ADDBA4FE86B13236C6792C972DF81E1E424444BB684B00FB549A
92866A99B8C1DC48D348481F850CCB77143983C5F3D297158E004EEA31CF85C3
0F4545A5AF9515E57AE70AC9A1348DC7B8A82516AE3F39574F4183D4EBE24EC2
0B32463D48D7550F2B4E0F32924E1C6F28D8F4810E723C0D953E9900BAEE2FA9
14CA821B995E240815E2A866A4A74D6EAE39BEDFCA270D52DAA835C2F5AD4A68
6AD08D403BB53CA7458DB1F0D03553A5965623E103844D52478F6545177D6B1C
7CE49FF009D32E9F6C460C203D7DADC4AF3BB8317F8A749ACFD5D433FCFAD9CB
A9F009AF07230FC9DD3C3E037A7D9611F4BA3E0CD4739A736F44FAB37523E494
1D032F2DF6FF5B2551BF8EF7E16BEBED01C6860AA8A1B609F032B4D0C796C291
702228C36C936559914ADF426FF193765CCEA9FABA3B61F7E812297D0C6D5072
0D6913F4FE6AE08598572C707E3CC5C40B8E50E255086311090CE3CAFE150568
7BCA1F8AC238508C65B7AFD0141326A5EA62521A4C3BDB8F30B5EA397AD6D271
C2C6A164A4716C5A23AF13E4F06EC1EB7A9F2F0F62B69B54677867DA3E9C5887
237A054B74812BC536D0293C010E453253991A2E6109B17FCED82E187C1A64D5
BC7918D6B94757EA91CE30F65D01884D696B91932A0EE233ECCBB4BABA17A284
B2C4B8B5C38ECC1BA79C3424E5653DC73AC808418FCDEB08CCE088FC7543CE98
CC038B3F745E070077E0E26F3A5A6E87548099AAAFDA263AAEF21B9D4995EEBE
7796F312E5AA29F00CEB40DC2AC104F1B69387714E21E6C23C7AFFFF0C55C539
A213554CA0AB0124492B397CAE856B0889023A437A1CCEF030FAFDEFA9CDDDA1
58721753370C67118F6FE0A34913ED4CAEDEB7A177821D9F63DEFBBD6E5E186A
CD15F7A1CC4339E97EA1684275778A369CE0C8168E8287F53A641C89A9C255A2
E1DAE2DAB15E644950CBD5B5325C879B537E40FEFE7B98F536190FCF1EB9AC02
E701CA4270B6D38CF1DDABE788F00D864FFE0F06DD5CEB958263392771B239E8
901F1553A8769C8F652DB2943BEFB94955CE9DEAEF0BAA46716F0A15AA2CF2FD
9BC138B3134711BCD2AB2FC36BDCB5E7211167974D58D6E0EF2573472DBA0C43
1CCA3A2BF283747E516D0551DA9B725F285733A9BF81ABB89CE842E89F7BBCB8
09309BBC70D28B513A5D5AB9079E7577D6DE9168D6D401B73E5B001469F2B705
85EDD63E1FF9624DFF9CDDAA73DD1DCA44AFD99B1591999366F0530DD87079A5
B0BB86729B8F690ED1EA283F58EDC99488B1A3EF45EB5497DAE97E08179532AE
10702A48C722EE4E1676401EF65079DD13F42BE007D82B2705B89D6933E8D591
33310184304ED277398333C5E8A53CFC084F49015BC19411F5C75BEFA3BBF939
73555C08EAD8080518943EA745F01870AF1AE278330DBEFE8C3E1729FDD2B190
697F97D20668D1DBF03E92CB257AB68A56F5880834F31179B83ED766137E191B
DFBAA276C5247993397F57E0509776B8C851017885692002CAC58C1BEF50462D
AF73B9091328682AD25388EB347390DD0D3DA2AB7840A16A35C4D9B26D709951
69483F42301CE64C1D898C0C6631E61DB881C15BA269C40D8A12278793C93BB0
D3F91FCE03190A2415F87CAE126B8877CBD1EF75B7381AD84E17043398D847B9
31D9857C3B14C9AAFAB8B70F9B6B24B9F2B52D8028486E3E03D1FFA3031B3979
2B869AB71AABE3CBF892ABC771A38D9BEAECEB71A83D9CBB7DCB80856031CDA4
94966A1EB11D5CDF6CAA8964AFA649C5A3DC74F0071B5D1D8C53866B380BFCF6
F358E67D2180A261F0EFBEB96888A64663D09EA119FC9D68F36A6280DC72F2C1
50CFD529209D70DB7987C808BF0E95B853086D10EC7EA6A576D1F082D7E51307
7DE26B66C99D7DAD53E7448D3F583665F851C87D2F81388B0DEFE1D87E55E5EF
F52B9326BC94EFD4B859743A67B0166AA2EC14469ACC021052DFCC7E59022311
5919D858CBD0C5CCA7AA0C9C10066C5097EC50C26EFB0E83220271657FFE4541
4C6E3C488442F7146135B19093D15C45204A4608398D901C8A9561F4DAFEBE8C
2F2E0762A9360F7A61EF6A03E779B3C6F646B3AE4A670E49B3B4906948723B14
D175945A3C89DCB80E9036FA6B6F5ADFFD90CF72ACB1484FBC1F36F28BDC853F
8C09273B4BFD002A4BC323221F8B3F51F58ECC5212E30B4C0C948D12478111C8
BAAF293EA2D45C26803F091EB88D94140C7915BEB10CCF4BDCAA37DAF0307B34
6F7E20690BB042AF23496D88825AD6F47CA40241530D7E74D177F0F3AA902CB4
295EE894F413C4914BBE06F15177732EA19752B42B823609AB8CCE5C35E9A107
311E0996048F0406983E4AFB8FE87CB5FD71067E0D2A06D39EA1AE7C904D5820
59B0C0BA40B9AC283A59805C1C3D0AD9468A0E43A553D712F45D8AF8737279D6
28B6BB486FCC1A93F55CE9CE5D0291C6B85DE5C970B1AC6B0C5EA7754F42F07E
AC8E1B3EBD134082F9C9DCC8F566B2EE653CDF1EEB58E722CE4F82C0E2ED453D
6CA88C522E0F11FCA548F7F154FE53A31962915381D16EEB7D2AA576AD57D84F
F3EFFA537BACACE84997791047868AE2041E4C2EF31409229EF4C4916DE9E0EA
5BAC093D74FC73C4EE34DF1659213DCF59EA5B07797E0E88022C431A2E1F1DA0
E40E78DDAB0D4645AE26BBC6BAA0F4C6CCACA739A584A2DB27C561C832B2F591
CC48B8DDCDEFE2C775A9E06AF0E57E46FF8294E59503A65CD10A347EC237DA94
D28303614722B9A33EED607789134DCAEB163C653EE79C2F15794CB9F4EDD4D5
E59296D1B58CDE1B2761BF9402FA697941B806E1699CEA86AC2CA7624AD50EF9
5B139E0F24C43B8E7D0AEB4E770E9DED1AB1294F2E62460699E13A88BD545A96
B78F6A556A21AFB1AAE50272EAF7FA30295A8763F08C8AE6B1688FF8D24296EE
F6E6430D240B19FA3CE2C36310B2B5DD1AE673803E8E60E45720B0C53E84A0C2
6144A6D953333432D5BEC5066196FB743B3BC171AECAA004D6D91E32C806C11B
4924382B0C84B72B2BCA8AF5584E8048A95BDB54CDEC59A4699F22069DBCBA92
C77BD6D6A99BEE23DAA95C58746767341D056A4CBACE43314F53B604C1AE4392
4D62746A97DC2777A9DAA1A0BD59E31ECCD9AB9794FDA42E5D2E35ECC2296E73
B2012D42A64E31D2F75EC6106C4A167E4FC70BA15585D4E4F417E77361CEDA05
A346EC8C2D88FD550AF4B902B396867C97967EA5BFB45363451A7835400C21CE
4724C8E0A882D4BBA1DFD8A1373B617E06110DEBC92D20E1AE1E5AFEDBC94135
84CD0A763EFB968868126430A293C6E8A6A87593E33AE3EF1C7ACC0D84D67D21
BAB7AD3B0F9044F40B20592F90F3ED2F94ED9D6F1DE7DB6AEC9C30F8089EC539
ADDEC1E338E66C74B54A386233E4D86BCF8DFD2944F86D17885E684465C33747
1F2DFF3EFD6B3CA54BE8C67E809D79C1B7FD27227E7933A13115050F6712C1C9
17A3310DCEB8F91CB93CBF19C572A9ADC1D305CD666B0C5D66E40AE25DB757A6
85DC92A142EE33D86EFDBDC92B4246D4F6A725E4348CF9EE0EB9208A27D9C85E
FE5420B23247CF5DA686B33A391820EDCFBDF53878DB1ED61D3383ABBF86B72A
83301C3D51C008EC7531CA6808C32592BAB68F99AAB96465315D2879DB8E8D9D
56D653E0A5EBB902998AB4BE7418101EB39D6638DDD31528711BA0E3FE7F848D
35BB3CCF9929D49BAE65EFAED723ADD7E5871223E78EDA3E3D9FD637C98BA46A
6161F9AEF56B0D49A70BA8A7826EB571B8428AFE58871B16764464A7041799BD
B336AC4F5BAB319DE5409D6261EF5051343DA41EF7DED1DF25DE24F38A8574C4
47B702E2D40285073EB6031D74C2AE23554F73E2A945D007DDB6B2C0EBAE8EE9
C0285EF20C2408E39D36A49FB7E7999EE5A420BC4C3E34B998965FED4CB2DD3E
EF0434FE0808E13770A8817912944BFDE4942DDD136B8992D1E80050D2367FEB
C1EA4D9C3E7F59BB1384DC2E637029860C137226EB16D3762E4F749A571A343B
E342795ECB59AFCCC0E24285A33BC2ADE55CF71AA37E09492872199FA302572E
EF6F56E22109DF7B5CEE3A7CF276290101AF7BE8797FE4BFFF819D0CC378E7E5
51F5BB61455ECB90ABAEC6F9F812C3AD445193B9DAFDF30C0BA738D655328161
98A473F1FA9BAD5FF7AF4B8CCE095EA5A433E787DE9CA5307AFA4329DA60A02F
5778FB84A350322300C995DB65F0E08A5C0793C26287A77FE4B4D68DD18F4406
AD9459756FFD8F5C7A674EAE05EC2FCE3A8ED9C99307E7D2EDD8D8068B2BA2F0
DBD6740197EB95D3FF126D01A09B4DE523F383ADAF77A9E7D404FD4BC2DFE334
62492893808D6C41A1AF04BBE634FC54F1D17E880B3856C0E035BB6FFA5075BC
9FBDEDCD125726908D7AF215D939FFAE4C561FBE274C932F7D53DB0804970814
91FFA47A16D3416A817FF9A8F6527DD6BDF5FE9BBA449EA8782FC9D80B9D5767
08B769156C29F9B59BE5C74895721DCBDF10ECC0E0F3DAF1920796F6674EACEC
039D3780B9BB3C8B3F378447C8E1BB394FC627C1D3DE23E96BD511E7AF1FD781
69DC857F9BC4C254488CCDCB8D1051E82C80E034A90CB76E727C5EA4F46C8D26
9DF15DDDDB891B3CB5DB1F5E5E6666D22B2EF635DFA8794F978E6D4B50557620
692DAB0A9B7D393B8B4439DE5C0C487406E9D1F33C1F531B0D8E15A3A6B5A638
2727FACAD26A3EF284A9444E2BC4B61578D0463EC34E04962C501FD7FEFCD46A
17E567CA5D51FE030812442BE5650CB897895BE98763C82D8058CA06A6C900A8
899D8D13F6B24282C90BDBE389CED193E1ECB704D723916C117F2DDCDB725BDE
8C5C0880633B6C4DFCE85F4129D3D220FA41480C95F9014D2A1A0309DC2C1CFA
6831E7A14FDC31E62D02BDAC7FF72800B470F6932B63329AF01A263FB19A11FD
16499C1DDA8FC94A12AC14C9271F506DF3EC4985238738468D9FCDA67B7E2C42
1533291D78AB56DF44B270B725819E276CAE7CFC7209F4A4AD06C321FFF0B0FD
F48A94C2EE1671ED6963DFC24E0D009760C3F6F7442575753A6EF539ED8AF544
E782E3F688BFE943C25C039681D98C00B4B3323F7F251092627CA0CE83B9C8CF
1A8F2E2F40DF97D528ADB4433BCE6051C76A1FC3008391B20A9745747E0B5789
F43135A5C93CD1B96E7D0A4107DD5E1C6401D6FF57DD76F6041A5BF89C5B6792
B78F0CFFAED54FD98F57DE7E58C30BB085B87BDE178DB876C9593B4FA4AFDAA2
C9B021B46FB6FB60E18DDA9D18F1FE61E6605254A4F555A1F764CFC535AE63F8
87FD33B40DEF7CADED16D9C451DC4141BCA87F4237B3E83156D4533EA77D663E
C228F4CFC3DB2BE1046F05D2D31C0A36823DC364060DB20E7F562EDBEDF7646B
64165A55DED91178BF148C4F81F536ACF00690334095CC94E630ADA6F0E9C8F9
0A93AAA8A2C57AEDCC26F12999FC2CC90D8161646AF1B4E859D84D5164562BE0
397BC4776B6984520897A55C88B7F000DA9CB220AAE72FD4653F41FCC13432FB
43EC903AAAADA7E8B59C3BBD51123C18314C284C6669D18C7AFDC4CE39D2706D
90AD4D93D2997FF03384B33BC05A3C744ABCEF2759D25BEFE3C9943F3676651A
9E3007B3DE0084A9E8CE74049FB76B2074901E4D8CC36BB005EAFC2D7B8991BE
92E4F1036CD41365900E7934F4B6615D5C324302F339B7C913B5202517957983
587B8F726549048B8A00B7FBB64F153E646297F9DBBC9ACDC3C7338E10A433DE
C3545B8A2B4822BDE7441DE00CEDE05B9A97C826E2C4F588D6428A3D138E5F33
1E6D52502BD71B368C3E97C6B0EB9D8C27D9919F8F6419499B6A00060997CCEC
D24598127D60F4476B1FB36E4FD02A4AF6F20A2E7578F783FE3E4B35D91FC50D
99FEB9298CBDC3E5BED447B2B7EF479671EC721B575A000CFC63A7179907FA87
ED77E88D2CF94C3C25F6F41132005C1A52087F9425CA32D5896A1190E7A68002
B6B15AA7B2D81B7AF776C50D6F29B33E9FE0693A459FA98A52F77F302FB569BD
40505587383FC9128F0A138DEC23A633E5159D141CF11AF4E17CC1054D05B35C
A24FEA1A0F9A6A58CAACF3F27316CA78B2E29575DCF9EC03905C09DF3782F0A1
B69CE8FD6E2ECC77D2A2EE87BBFD24ECD2CE93CE7D08EABC94A534A787D0F87A
F30D4D7651402D5CE0D7E9AAC24A9B95490E49C16C8AEB2DC3E2092DFABA00C4
A9D139FF222E949E21E303380CDBE800B60F67191E6BEAF8EDE7C91DC941D442
8FCAD2145288EBFA21BBC8589DB0500AA6626CFA1D2C8D9F2F62F3EAA17C558C
D691BB0ED4315A5AD768D438A2C37CBB5E63453D37944C4900E2FE7DD3445D24
DFB25D61371C06013BB33267804C0E19194FB417FEE12346CC103EB5550286FC
06CCAC868410F72D92D497FCBE91A9397B3062E5ECEE9D3629475DDF9CF1A646
DAF4C0EF614E656201B842F6A2B583A9780ACB7700286DEB7CB2779151CD16D3
DED4F1EB83CB1C994DE768C869B0BBEF2876075B3BEF5EF2D89C6D95DA08A11B
285ABD80A941EFBA0237FE9564DE410769B5C15D3972B2F0681A050E57F080D3
8FE8CAAE702FDC9D3FEFF747F56F6B3CB10EB6F7E806E51B294376BC721B0EFC
75AAE1EA70025BFD7D46F14F25DB267AFA967F80C8260340BB7B6AB94DAA37DA
1CADABBBEF72842C8A882CF26A0AD5B7D57626E991D425FB6CF525A89982589A
6116B72C970BD8C39AC821B1B553C41927D2D17B1F65EE64FF20157DBAAF8174
A24B0894152427FA059E8EE2A34BEB5AC39468AC7789A24E2E273455E189047C
61C5AFCC98CACC15DA6F5A9C5E0ADD9E18FD28F530020BD1E60FF15C6D9BA7B5
856745600B2A952397C18CE43BFA1DDEB499C71ABBEC78D97F81EBEBEC38244E
3684285DDA87F387EFFB7FC9969D616A2AE8C69D2C5A056F7D84590C2A96513D
EEA1B492D1CA53780B487B85B92580755D85A8A4C3FF125A01AB3AEA8B2B5D40
7E5D72C3DCE8F613C8A8C9820243C8DA1ED5F1E5F0E3740E009C07FC85391D87
7CD8F2DB849E06FC42AD1B3AF2955B58685A8AE8C38AA279C7F00D9789569DA5
9E285C75473592661A9EEF8CA372ED804CBFAC2A71B390F524729C46C851260F
F8D869F009155E87FE3AF852E839CD586AB3C348CC4C685CBB70D2E2CE7BBCBB
7A6DE68EDDF79FAE685CE7F8000D71140AE06A9AB63EB0C473328A6378A9B1FE
313B07D9F9FC44A27C8DDF0015F8DD8E99CEB62717D8378747452C3A6FBD76EE
2C4A30C931626426488105E35F636419E69BE2380291D3CDCC0754F3CA8F1A51
5320E678DF666836C1536661237A3A152B4A39CE00ED9FD458A368E64FB833A5
974BBDFA70075A922EE6919992C4610247B2754E5A1596A7A3BDCF9C3855BF19
3BF37113698F742E5D683B9354270FD3D2E2DF4EA4AD13E84E1169003B52D2C9
860BF66837DE0C4A5A5E0722F3260A7F84E841C65ABCF7345C51D692405EAD70
65424919FB5808F074650745F3F239427773EB78CE8AC3ED4A0978DC39AB7CAD
82D4073A7690664EFF3E68182DCEA45E59567FF713ACAAE06FF9882F2D198626
12DDA28C5E559E239DE13FB817746FFC0D9454D3C0F392CB8534D70129208909
B1597C8683472886AA19931690915FB719561D54AE08FC674CE95120DFF083A0
4A68B73340A3029469CC84B3DA00944250EA263A157E9A7ABD6C0B7350D1C027
21E5913F1D146B28799D1535600038A4DFB7A33F96A0EF46C6E8BE0B61489CE7
9C8D264E300B94D15AACD40BC350802E61978CF6ADEAE4C82760C094BC0881EE
82A7D62AAB06863CCCDBE52C4C273FBE61E030D13E089E9CB6C0D61EA8F9570B
C1CE3F75D7B6653DA44C4875F78921B6443676ED83FBDCA90F6FC0A43049418B
1B184F53A25939ED58A375C6B24AB76AF1B05CFF762C0398CF5AD241314FA52F
01E95EDA8F05424CF37B84C3E066B665ED5557C1861A52D64C7797786696B28C
7AB13B86BF72E87320269C319BCC71B0CAD1E5409C419D7FC4F9C50E4805DD98
38C5C2868E7C1BCA24E8A2950996E56660FCDC33788701F3A83BD91C8D697C77
307D48B04CF0589FFE957A67890E71ACB58148DBA338B09BA8C432BAFB66F052
CB767CBE7858F5790958EF26ACF6ADCB86762F1EF45FE6CD98BCBCBC1DFA8C95
B646438C413C222E4BC5A47A071CA580EBE454E4DBC0CA81ED1DCF62A66D9732
400EDAD7906328F7CBBF38C5C0B6FCDC24F4EEA1329BD0B6784B1D204DBD2F10
A9D75E5ACAFE1B24013B718F41E719C4E96A482B294D000EEB53972E2941C993
76A140674AB560ED0E258DE2ACB8E3A59C325FE225B83D27A8918B4DA11DBBF3
43A9A00EAFD5887F20BCFD5B5FF7FA2EC08BA2AB96EB827FA3329C64A5E1664A
EB24C96F028F0E64747FEB7055A6DB8A0F7496601C39A6B8A4B1F70F0CAF386C
119CB44204B7F7BCDA15586DAB0F3D90947C94C9D4473AC6C5C78229D85F651B
2DA40EFFE6AC02231177A75B13609222EC8E442952633AA3B213547B34563AD3
18CCBA52FB56F20F61123B85303190F6088F0838CB2FC217D8C5655E4F5779EB
BCC88B85FE3341FE43AB64725A3BBBF30AFC5E0AED54074004E5E037020BD1E6
0FF15C6D9BA7B585674567D50F4F8688DC0A423F54FFE3072F05FEA042070D55
D70DAE344243FBDDFED8FA29EE6F86251C3BF6B996A3E0D9B01F141F46067EE6
02B4638B8574377B3775D92F981A7F1469105943CEDE613C1B5E22BED8879706
2401C5DA0BEEDC74712CB8A6654F600386F04AA63A597EB50AE8B6AA80698250
F9CC383FD3DE6358BDBC1E00CF3107545E86D378141DC99F7609372170A19CB1
975BB901B9F4DF389AF363A8D67761C0F2A1DD706C83FC0A94D5C77B6DD1A051
5E4D8E55B9352031AC19251092627CA0C8EF34426A76A8D9DD64D148F993B882
B610620467CA4FD6FCF0CE21B44220443B845C787F91363F1F2013A3C82366A4
0C5371DBCF7EF0F4BD32E5729F38823FCD7FF41BA0AB8AE783C3A191546D7C03
D407DBF4E83A2AE764B894E9C5F328006F628938193BAC22D00B27CD76A99127
CF39388F0972D13FAE161A66167148E248778F395B9FCF935D3CD56DF9238F39
3BFF78F3B6861BC85CEBB81823F01F93008D171F58E2406D3AA083A407B30ED6
7F597EF4F02839CBAD948586AACAB61578D0463EC34E04962C501FD7F8C0DAA4
65B9B507729B7D3B3CC1AFCDF3D03EE7F07A21D84883585F79768AB4F5AA161A
E1D6E34E5149C137FFEAB245AFE9025DEFDB463E5F69B2132E235E63005CD570
9FA7885A97861303E35B53A4DB14610B8295FE9F076268FDB3F20CE988491CA3
0C9453A04549A94E4252147F0D322B621DFF3FCEEBAD901F5A1D1ECD916FCB2B
513340F4C5D18E9E2A3A5F30BFA407CA9483933B7BB83FD9F48F7008C85264A5
B585FDD86AA628A5A3979AC926713FFAC8CB7A70C4E9745BA8BC44D14DCD5118
B5DDB671B5101B5A0B5640CEA3A080DF80A4AADFF5938EBD5314D156957A2CB4
16B920AEE59541F8C0D3C5187D9572A5463EF6D0CDD5D03386E20557776CDABB
96A9E568F4B42BA19D68D0704585B969251F67BEBCD432403FEE8AED72C2AF3F
39B9F44A9DE53E47A3AF75201F04FF1F7D94F130E5394BBBFE6CD302F680A6E4
5C06B685D9B93733B92769CE85AE0E66F0970A4099F55529BB528DAC71AE5762
1681D58AD7ADA26767763C8CEAB5E15361A2C717D7D4008F2F38960F407979ED
0CB3CC20F5F78B7473EBC160B0436C3C872A66057CB085B2E2B250BB54274130
AC90636FFC2B2A584B55CF0A88149C84C35B22A1248B9B7A84E5AE76314344E3
85DF4FB88AF6507BE4D608D72543F7692E2DB5B3AD8F7834A846853213D57585
91EACAEB3C08DF02B146CA120A491C31F98EF3E4660F0BC2C734929A2E6A22BF
5DA37F4B3EEC077523495184E025633AA478EF7D37A5A480038F140CB009A24A
80270037C9B5E51335CD2BEA504C976E945512A38F8096C24BF60E28C5D533EC
873FB16C4CE30DE9213FCE367262F059BA21048397B366C705803BE6A6CC5660
6309998AEED7E9E5A3AA58122A2660BB4F53103F1F59D889B0195430221CEE7F
0EC7E1709AC7299196A7A874B7AD6132AB57BF1FFF10D184F38C786F5189E87C
7F6B509F0626545F7F7387C12541AB4EAC52558A33CAA9A3941614B61A4A3DA5
0B180050E238EAECC3CC784F162B921A44C978BB2917793A90FDE9DF67FFC990
27842708BAC0B62F311D604921DF699339E66CA772E3C6D3148452A0AACDF40E
F7C7866BAFFBA9EB89F319299D52EC2608A7888A003C28DF68ADE20EBB752C95
66CB17ED814D2C701630551E50DE50B9D00357C70ED2E4636814A75314AEA30A
E6B7970427BE89D485AB93BAF8B93E6C4B83EAE2FBADE07410975E7531D2E852
23BD1BB8C45D78CE03E835068CF463FC8417AB9E75B05C6F070D7E86471986DB
D233A32A1CCAD09B42F93E4ADED7958A2CA55685D2612B7F36AA67E42ADBDB35
8F242BC959B11423C1DDCC0994130B51AAF8657D1F6B2ADD4A1F870E3626DA50
E6180EFE2BEA4EED04B3999B814D50658922D2D7C97649D1F87B7481DC9DB515
FBD205732EA42C088E99A21CC19F581EC026D8ABF0B1AC7BE543E18D96DA7D36
1BF47CEFB55823E3EBE9BEA0F81818783960D641F829C587C3BBD6EFB2EC02F2
9908C3FD76A0DC7E0874A45B4F0134359BE446C30415CCFAC5A6024574B5062C
76AEDFD200384EC2EEB764F08BDDD4D8BD12CA7EF18181FF138C07E95372559B
2F971E9DD853251462B2749399908C8E318B6EBD769D357C79A3DE736B820DBC
1D7C6F186B84CF1DFDBBD7C4D47F5AEC532DC5B15B89EFC6E5F571A540E2F06A
2EC738963B6BC1E0CEF9F4F6CC8B7208BDDBE7EC346B86DADD5F56B84222C01F
0BAF8F69E0E00A7D81F892E5C290EE070787EB4B70BBAB698C09E1C8AB9B0D71
1FC6F7EBF97C2795CC1A219B802CF965F69013A2FF4C6727AACF167F36378445
F25ADC6252346FDE175DB86D4FC06E57BCED16F4DC21CB0FD7898AE61E7F3FCA
37380FA4E165327B61CDB02A7623E77D6B5C58DBDDFA806CCCDBECDB14366598
536699DC80FD90A866830BA8EF40F1C541BCA63E7919499D35A59EBE7E971568
2B60D326F6302B4A52C138FBD48DDE121321BF3C7BB8441296F8C11795197CC0
051CF106C8619AA1EF1065CC4536844846B803D45D4E2A9B63D5D06DB1786BC1
41B42AA2F71069122E96F8F7A4D8807C9F966EB5BB14CAF071A4F8C642FE5E99
634CA5705BA7B1F4C66739DDD45FA7B62AFD447FB4A93A44EAC57D23895CB435
69371D2AEFF08C05039AD736353AC4E227EFF769FEA7B0944AF046A602F9D93C
1C0316115EE02BE6C7C5BDB280AC6A7F20D13B338C19BD687DAEA809649F5BA0
CEC0EE57BA8C282D58BF100A9A5818D5A1793EB147DC0CB43A032F0A9D572910
AE98FA9E1A721A2317385A5DC658392E9D79C538EE56D000DC0CEF42D9AB3740
8D2A094ABB1A7C14D7F78EBC1ECD45DCF841F48BE7999D64A763E413D25D8602
F8552D5A574A376BBA7631FA27217435DD0BEC84762FB60C1F941C071FCC56DF
9912C7815441CADCBEDE49A2D0E0E997CAEF9659C840EDC72A5DF6F7B740F9AC
34D8F34EBA9F6CE9935ECCF5FA6F6E1B5E8FE76D7554B11B73F8A93F1A0C7919
14392567A82A281B764255983C3006219F47465231691AB1797135DA7D97D322
3DC2A70A37F7C83415374D2C37E9A6126C4F0E485E973BAE14C7DE1E648FF28E
BE5570945EA3793D0870A3D4F480A7C9E7ECC8B3B01B9B88C659BB9BA63F57F2
288DC8CA6FD8DE5E60829177B934A187A3F5EEE26C83D26B3C2216070784D566
2A0E58CBDA9D8015AD00E219135613D5834C1BCBC7E0B8A3B062B6D732AE4135
4C0B76991CF963436500886C93F399D8F38A537B30E48F8FA7ED8D22ADD6648E
624C62F042CDE0FB79221DCFF97A6B18CD17E5EB5CD67344BF556781A44D8729
2FB691C87D37189954F8613921EE2CAA7DC3183309B3B411CBAEB961956C9A98
A22BAE29AAE7D5405D11A27B7B8C4389AB4B0FD9F3ED0657FD2CB530C920ED50
1BD8692A080EAEDAA684B07FE68EB2735C64C633E2CEF199D7843D0624A7A3F8
6B55CBF0206FF63B65CFBCF40C0A431D263F22D091D0F560ABF6B12F2A49001D
A45CF8A86C92D88C73154E441C6ECDF5F8A07070FA058CA1902F491C8CC6B913
F1E0FC9EDD73CF405215F6A4D7CAE8A9E381B10D1A048E7EA4DE356AEE04B5B6
7096F017ABA020BEC92CE628CB54536B8DE3C730299CD99BC82F9E61598ECE5B
C859A7F81F9407287810BBB9DF2DC211CD78CED13E24F44BAA417CBAF2302DE4
53D3DBA70774A4E926757178194E2A5A6A5295C9A28D237646845B656DDB7F30
F59EB17A232FAB40DF6F4C52B15F5FA7EAD1994EB3ECDEF2ED9623FD65365EA3
71823F080281979A2189C12EF50B4F473ACC165EF655F541C12AF3863534E245
0583F6ABB520C27AEB72C74D071123137205D7504F626A4AEE2D4C95B2D1C916
0C1C722E4D3F85ED159D3F7D8DC9AAB261C46DFAAB577C1A3423FE10A0D34630
07DE8A0540573010CCC1170D7C8840397E1AEDEB10253864D3B589B583633915
19D2A0B4ED540E4B094EF37BC3344153E1CAB90E183B80ECAF61FDB1FA328F9B
F3EE8AA7BC73BD23FA168AD5390B54CF0ACBAD73CD9102C519DD8E5FB8A43CBC
BEAD7CE1751382871876B0716DE6BC5E1030EE1B728988DC551652655D61D453
352537DC267019D8E0996FE7EB5BB51CCB12AA5A65A09367C2D304F15FA40BF4
F7C38152DA0973B37CEAA85C2911626F17D02D74E2C19877A038B3A0D8AFAA69
86F47917C66C7FDD787618067769C9F677AF37B384E23D073CDEC76418CC75C5
9DB674B8684AA0C7CAB8CE5FDDE5A68C814FB4BD59694228F4D5A82E91C796E4
038B9DAB42E32C9BC59413621FB3A27D8DFDE6C38B3B46BE617201E43C22DDAB
059141FFEB21FDE3016BF4B4E7BF96B0FA514300B8FA63640710D369A373FBE7
EDC89F778A301FF0D080CDBA62F8B5E51CBF14F150A9461882B54AD63C130BC5
1121EB1EC11D1665CC5AD1E87C8DDA445FDACB244F442411E096D44CA34B00B0
F3D465F779C69F84CE85BA5F0AEC70B39B8886DC799F2750E6E7E365C24EE33B
6A3705BF4E16211A12CC2054F4015D0FA3286468E4EC306BE9FF1A2BDBB44F3C
4C453A80BEA1261BE184354E8C9610AFDCC3EA95DB60E95B57B37CEFB826F9CE
CF5AEC6075832BF385D0781B75E0F1027CDF5266E18619DFEB658FCC5384DDAC
234B3A29D8E89E034315B6CAD18FBAFE89C1299D94203EC69F3F8E2A7CB9102E
24F7A4E9FDA6D4CB21014AD2AAB9AAF8D83D3F8B03A7FA9C0D39CE26374639EF
BA75100EDFF726FD162A1188A003CBF00B53FAB1D886DEFFCBF4365A305BE831
660C66B0AFD9FEF28EDFC39C5AFDC6379EA02CF70A46A67F2784656F5690DE18
A477F2DAD4417251697F7F8BAAC930DBC8D268F7262128F932533EEFDEB0C8BB
B979C49CFEB0423C4EC3F5E0D224556E556A591EB52AB11DFE899F5FFD7C70F6
7602E3934BB8DA51B8108E58174D7F2C9A1A7FBEB3B6C103F633F3FC8F605FF7
EBC195AB879700F41F3591168B4B594CB7F7C536C45CC4380DBB9E5CF8DBB9B4
F4CB6F38B45D104095B1E8AAE808C890BF72F5AEDC98B4111935FAAF7A7DB810
D055E29E08452591BD98D198ED988F593D5401D3B92B55DEE274A3BEEC8A7165
07690BB862AFDBC913541295D0082639D8BF38200EAB6660CE197359188E81F7
5D29536CFC65DAE1E3403FAFF41294971E32E3308C022AD927F2543ED720E724
0363B3708C71BCAAC6D88F078ABC6378CC2AB7E8BD7F2A2FED307BD4456EFD74
A8AA4A50D4B97B6CF7CC2A8E354B177932FF8BD968BE1E3146E4898EC6EDE2BD
31BFC6A25D2D0840346547BB0AAA6C1EAF719D34D5A75421D6FB58262AB6A045
B024B187C45A711A346C5B78CEFE52ED4CBEFE704853A93082587A0E7889F3C1
732539B1E156FDE9E4787A337728D032B945FEEBEB852A140EB7F669B44C0045
126563A671470123910272BC1213B00A70A5D200CD55164CE4C1D7E603BA8431
1B1F21A31BDFFF05716976CA024F162655033C9B3D6C3EE40977A86F49FDB381
9F8EA212D2BF709771EBB353B84C4F7FBD2E1DA05DD462985F0A52B32BD3D4DC
6FD3667910645F137957AF6E4DADE5A4270E576D84C6AEAB13ED2026715EFDA9
FE33E691EEBC3E6F6D4B3F9F98CB9FB33C6E30C092741BA7FFD098000E5A53B6
D6CD139F54C22FAF542CA4DCEE5FA1ABC3C576E91158482A0CC989762E98859F
DCFC04820E2C57F585DA96C8B112B248052A9227D80F675F96F94EB6D89A66B5
1DF03D66159F416B170067B51D0134D7DC4C9081AF95E28E33D1D5B53BF96C2B
B366C7C79F5131371E0D1C13D02F8FBD100FD8E708355C1C943C64A342974F55
9027A49CD62CC1C9CFA698F3D5BD5FA826AB32E8F51177C94007D41265C4C5B4
1E4E6B5F06A1F93205614BEEE01DC6DB2E16059BD51F184ED11971D411C93E5C
E2C263BE329072D72BC735C815A974B8CC28A53CBD90F60B228505EE8EB72491
7753088DCDF88DAA8C32FA692C5E49A1D35413674AA6FA7E84B2D7E34D4C9132
C0AD46595DA14C0C91219C6FBE72F5FDA555680CAD76325914F3C614DEF25915
569A8F2A93D9997F399B511E3BF6AA1F746B4F19A38CFE860FE1A87F6242AFC1
2EFDA830553A09A1F34CF876D3D154D44F284DE0BDA706F122CD157327F8002C
1BF752F7C02A48526DF20984B44BB61C69422DCD2785089BDABADC888B65AA93
0CD2E6C83130A2CF3B1CF3BCF8CEE94B281A0E9B68B378E88E66FE3EA0DD5382
793E5D563F321192903A4F9FB2A08B48360A2DD6FF52BCA358529E56A7B8DF3D
9BB2161C735696A469D9B3A69B4B1F862B102690CF9B0135A8561B6723736720
3424FF349C16606AE3E4426A65F951712FBB26487C1395F00BC2770032C3E7B4
5ECBAD1E993050B7C1FA584A826FC240A1DA4B4B2A47C068A4A273EFCD8D1FA3
4314D031CBE64808E61A414CD38DD3F7E980DEEFAA42C4A5614E01269A9961BE
ED657159198DFC48995AFC73AA9E2DAA6D73BE41C8E5FFBA53EE47B67629A111
C1CA782B89F18DA4AEADBEBE94185FDE520FE29FBBF7503E4F55B32C4866193B
FFFE3897A1F7A36E19CF49A5475C5C9F353F1E8BF463DB5440F1F794FA42FBD8
969B5866C0E152CD0752C9D3EF94FD342BC3C9D9828F903A1E8CF2FF04137C70
6B0CC729C87F960C58C4D0926ACE3E12340D6D912FE01B6B52206DF89B127FAB
EF6FD03DEA2EFEB9225C8CCB7CF035013420F1AB3ACF160B1208C1F1306D8DA8
855A022C1DA295B74A875DB98CC14829A7C1A434824D694811A8159DAB8EE4E0
F4D1CEB599C47DE9CB963F39DC510E7C8570BF9E1A8A8651D78032570C3BA774
0231EFA08F9CBBE5E41176C70EFD8B44E80CA19D0878978C821D33E72D53A7FA
E49775A17C36BE4DBD3DE66FD022A29410009701EB1BD8679F04375B9CFDC88A
F6B58CB0E791657B6DAB8CD21137199DBC8B013698ACE10C85093A9BC1F8A013
C7BBB9C659D71C4F0786F1445B8413954DF056B03D0B547DA4420F835168BF1D
DF72B37177A8C161B1E4A2BB935EA6DDAA4684ED31E27512B968ACC608BB0F79
650251CD92311A625AFB5DCBD4E24FE68BDD4B8FE08851881C88417827D65EC0
92CD5E35949F4F0A374B21799ED7532B8F115B94FFCF3D8431C031E0EDB2890D
3E5945EF265D6DD7689AA7D997A5EDB1C7865C7B751E3E9462BC07C8BD105A91
3C910B28AD3DAE54AE8A85318F25ACF07A282E73FC996B5D111D5385AD1EBED8
B0CF35A5BD580744439513094F110E15A8514105514962358A707613C3397337
46E4D80B5C6F9FF8A0B223B1189859B895EE94A5EEDAC954C033A1BBEAC0D465
8F20665862CF6D7C75BB6F0D03471085AC24C2A48AEC3F2E8C6CEF5324368469
2F314AD96FE2982BECAD1F233A909C9E8EC6560BAFD11AB0633C816C3FEA2F97
D671F197493C8FFB77803CFD7592DAF39988AE6C6245EE9118D788482471894D
8D3A8018F567076852D810B785B161A9A36DC6D2A3FB027C7C2D1E3B1B30D408
169D105E4738D09B932A7A2C21BD5F361C4686FAAB794EBEDF692C59DD3CD0D7
21B9A212AADEF8F3E2121667C30B5F557CAED5CC322838AAD2F48AC005016170
22EC7F92A6D278952CEC510767A669265AF62F01E4AC601B97C41B9296565006
38CAAE75F8F6954E412C3E88E3726567638660F3302931A00761D113BDCAFEFD
0FFD2804417F7A88528B742B87CF1F9E97E8411C8968C7722D9C5258DAEEB74D
447828624ACAE5652DAEB53FFE6A603B142057070356489E7285E869BC16A58F
C394D09E6573A6D0313F55091CC5BCC1A675A4BF65C0F7DEB01D457704F17C4A
3FE2B2C0C7B07CEAA48BCFE3525B3AD83CA1303AFB20DAE08314B5277CDE9280
D5C2F5178691C2B6DFAC07DC2CCE2F3A123C6E267745CFCA896FA6DC2AF740B1
064F0718A52ED50D49F4B1AB7776D85E4213C7D27CEDBAC9BF78731963DCC668
224AE79F85EA99E840637CBDCEC15F12A4F8D9BE40B40335D2279C3B4C2AA8EB
94830D4806C134D4B3BB450CF133D0C15D2ACD8E2E0C84CBD9B0CC8D4FB000EA
FA0F564ADE0708480B4ABA46A9C50708E8C5A846C7C44FDE5D45BF586978A94A
098FE72F1C35C614E8EF883AF97D367A659240CE120724D07CC224DFEF5DFA13
FCA8A68999DD504ADCFEF250A1AEE073345D4A438CC0B245CD3D2D0A0F485DB3
EECE7D100165254F7C9906EB3CF41DF8AB287F2D61A03EAD40298A6CACB8E2EB
BE31163BAD4F2367A927614E835F51E63E09DB93FA92B4AAB33EFFF3F8410CA2
50EED4242B5BA884336BCB80C9DF7CC441A486ADB7A8C8219E3CB4C65CB786E5
F349D306ED11E5CC505FD7D855C8B7BBEEA3E86021F595F9DDF1D50565265393
F766B3F3A578EFCE821DAF071AFFA4D9986AE611A9A2B777CF374ECF939A911C
757A2194AA8F2D9485EF31E40309ACFF824A275DDB6A89D89F5081F1FE098F43
936307F49002F8E71FF532481524AA0C07AB47E17888FC2C1C9A3DFA6C31BFB7
8C3C7A1BFC68C27E0637B85DA3C9310C947C0ED509795CAC8426301058490E58
07F4F15BC7EC6056EC396C478608FB060A2ADF530BFEE43B4B5BCECA6B9BF6A2
587F0A398CA70F3A2320EEF035EFDA3B1C4E79B49E7E9626A104D9601F647D3B
89066A22AB07DF5D6DAE0821069229BF5801CB52B5B4BBF83505B7D97487543B
3297326D4053C7F26001BDDC6863AA50AAB280D18F70784AF89366256DC925B8
8E94B846F4B343BB10D3DFCDCBFC3CFE4FB3F4FEC235AF963BAD312182B04988
1A8BE400570B5E2E37512DF10B52A2C4CB43DA2F3BD3868D6373B736D2686A06
566C19FDD85AD8A9855641CB315560F587023C8BE9FF7EAA10C3AE38C42A92A4
63783F8481090B52B946F79180E3C9FF8E40E9FDC847D1A7FC826CAAA9635A1E
F7309C86220741A2252B48D2FB4002EA3DD77FD2A91D53E5EA41A413A6BB7322
8AB47A1445398E7CB44266C5AB7D9AAB4A64AD71BDDE626D78913193F669CB93
716D9FFD940CFA37CEECDE1DFC1F2E553657A2E0B1EA14C129C4E04CCEAB8425
0AB6BEAA35BDCF3E5531DEDC5096CCC5372BE48A48E44CBD558C95C01F308DD0
8EB6CD3ADF46393E03890D305FDB486E030395A31E4B54E615B61BF2F92F1563
0369E97A5F7CC74C182CBEA350291A464863CDAE6410726873ED7F471F688B7B
49FB00632F25CD6E4DFADF71D8BD33A65C33F1550905B5B746B094F3FE00F2CC
D85C32B90410822794C48EBCBDF6C5DC8C0E2818433AF2D5359097BF4134FACC
7A30CC263415B1868CF7EF3596ED4329CA6199339710C0A507E0706A26C4E2C1
A02C5AA044EADEDFA09B71D7A38A31BD8B06BA800EF049119903F7AD62D58964
9A46ECEFD7C1753D8A3BFC5163851DDED48A7C32AF3BF0C50C911573733B6615
DBC47A437167CD4BCBC8C1696A27183D81D91D675E24EACE65E347521D309CCF
61F96FC864643ECBEE8AC807D90C8226C1F0E53190A84ECCC365D8FD973E5472
E8A410463EDF950B8CD807F9BF5AD53EA82C95B4A15F1D574F4239258FF87CD7
2A939BF461816B2E687D61001CB5FFDD107594AC2DC28902DAF47045F06AE97D
DA518C0614C750A2FCF513A7D00AA9212A38302D0E518D6018C713F4CF99268D
6FB8F184A32166AC45505E1BBA500489260E977798462274F9C90E38C6FCB445
9B8447BD20D7BB70843A21C9EE3B4D6BDA2F9922085B18A11F0EF93960C4E772
FA632844808C9987971F373A12264D7BCF5E96369EB44EC069F50C42BB869DD5
0CF7C8B502C9824498BD05B2A70E71BC68267332E96DB430CEEC7B38093D370C
C55F5DF07EE36BECEE7451A63308800B64571087F77524CBF68EFE4BB93DBFD0
63EE9C41AAE9575607500D525B06E742ECAE483E5A2B0C77CE0B91159CAE619A
A012FB52DFBB09CE8CE305C104B8320F06C3EF51B800601293D995AEC415F1DF
42C92D2809E1C0267DBBB35C0A3EDEDA588974F8D31EBB9012C6F08FC19D291E
7551DAFF1E0A03C66A6EBB246E5A5AABA30FECB66D1C87BFAB8D7C4BD37CD83B
C726814F2E97E788A8543430B384C3610D8787F2A02E8945D37374004AA24576
836543FC0023299FD06BFAE98C4BACFCB4114FBCB2B6A447EBED77CED49DD134
62C1906829E36325883AAC5AE7938DEC2928F6212A5949698A49674F966C4A3D
F87AB9F1CDCA9DC8E88910CDC86DB0E45D3FA1303E704FCD2552F2C46FCB5AB6
BC0215D95BE200A5B02FD4EA3369BC9A19894237B3063B141104164FB0205A6D
962C23AAA0334910AF9695B770DDE4DC9ACD3B58D4E291A947A32936EA4A2E92
961B4EC3F1A408AF1FA297E86525C09404F2330FC5803065C3A3500C17FAC918
CBB6DD817D60453E43D9A1BF682C46F70F7D93706CA2AA81D51DD9BAFF20086B
448FED983B47F5314EE59572D0382B3E7679ECDED021144F27FC619E588ACF5A
1D4915AB7ECC86E71894E213305C067F2919F46CAEC570193CC317A38BF24BBA
9E611B995354B398C8D4D72A92CAB136721272FE33E94D275F45EA04E5912430
3929A65683321F16ED5CA783D1793033C87DF81DFBC8706E65B1A07F2C6DB268
C0A8F8D456D90A94FD07B10532B920F10151375AE8395A9E5DCD17B9BB724345
7F23CA86FB117398DF3DD75B9EC58DD1A267DA48D11DE5BFF859BBF6D50F7A0D
35BEB5DFD9DCC3C59399A7846627B028C3B70E04991538DFEF80D07F06386B41
7F15BFAAFC0098D13CEF6920D934E74E8D3DB0FDC46F72FCD8032CC660EBA979
DECFC3589CDB10835A373F92F551AC9042C81E26DB3538BD54A910499870013A
AC7C9B2E475F796F2F0CE3ADF91053346DB3094A0436371CF1DE451FCEC8206A
C4F009E264088F97B5594C17048B2CC3523335B29E60E61846CBF48A2971BA28
46B650B9E12DCE5368AB972920D0D09B6773F33C86994E654FA5ADEE57BFBFA4
F9139BD8D93E8756CBA3CA0512C8010B5A6AAE193B473C97BBC23C02E7CB1657
2608C72ADC0C5FF65071BE3791442208A86791B54A8EBDD5F0D025C98D7A6DEC
8266A57C99D918AA745224B5AF8A16A780DB3F69B7F003F48B447E93F9293B96
835D6C67073F5A9854532928AF47DEDE54833B22CECE6F13BF5EEF831F7A0073
634070A2FEE10A9C850F3E6E2A87F27B3121D4DD87C8B0A8E075573A9BE63110
FB54EB5EB66F1CDB4421C42F6FA43285D73DCAC4C30AD33F00BC3E787AF8A5FF
5CDC4186953FFFB1607D55469B068C734FB1B1C6A8D5380524CB9A6A87E42829
09E052F4B7CBAAA38AC6CA86C865859EEB7D78461A52D6F85AAD0784D9B65035
FCC6C5805A53583BAB666BB754EDBC37504F7B4B2CEDB720C4342AC00F465BED
972481F1E490E51033D27A1FEB813214A70F48BE200A70532B1351A223C4247D
A0E9FFF15E8CE1935B7C3E78CAD6F57E43EF55F0F9309DD500B495A8700FC41A
C7CA072EE122FCF68311A533F0A8BAE54923949FC247E4F5511D695679123EA3
E9341059E66354852C00CE823C2E1531707FCC42B4AF88A55A2A81FEFC92BEE3
D33346187C3272E9FBC145A82466516741C72D0181575B98A424EB53F9916458
E8882139D8FAF5AA1D9012E36EEA32A4D93B1FE3759C8A5D2085B2CF686D8A1B
F76495C6D299C5BA21EB3091A0CEFF78483313040886B70AC123AEA9CA4237E0
14C04D31DACB7824CEB9DA4650389699CD0B541697FA08939EA80AC537AE092B
CF2F4B4178C34897C30069FD8B0ED190CEB8DC8CDA579ED81D06A328E53E4781
19A81B0B144AB6F1E282E1333FC032451B90F25DA2BF67C1663A5EC374C9F5A4
2A4F07DD8A6B3088E633A909071DF3FCCAE147A0424BD4EA7931275B537C37D9
88557596AD933FF843516689A9C7C0C577426FD200E960B2FBDC9DA029B60A0E
CBA72E517FFF08A4DBB535D2C93E7C1CE652E77F57AE882F3ACCFE245813EC6A
8F485B46D7302EF5BFD4DF6472EB331643C436AA61BDC4837D74B38624E106F8
F7AB5B605718077F5A460D779619EC309A53B2DFB75B6DB5D2706F7396EF1C6B
9B504A042D9D4060190E485B56A5867B7D1B236470DA8CAA9DF23F30BBBC0D4B
9ECE8006375BC50A97A08BC6B8A4489CCF1DA031D2C2407AF13A5D49C09B5DA3
3DA8375A0E6E80F704841621C20E906E286A6E3E10B5AA34C832BFAB656E379A
83B705BBDD50FE5A7D7EAECB8FB6FCE2586839BE0EF833D5009517654FF340CC
229EF37BE7CE131450C18F2333662804F644C05214F6273181506FFD81AB75FE
1158E1396C4F796CD927F30A8369FA373FA72CC533126F6003451314F728FC27
F51136C7855246094810359113B6A9B992BB8279F6F39C460CEA84D2EA43214F
C89EDB8A29BC28DD32FFAED06D67E347B905A1A99DB23E288C98A1BD6929143D
BFDC33338AC3FAF8AB5D6C987A922E48B37D6F43C0D4EC97A8E718296B04FCC9
E130C0D01DCABCD73C15A63A79EDF568EF6CEA822FC2BCFEA68E46B501EB2791
122FB69A63FBF13001F53527075BF47CF5756E0038AB68D279352AAAA820FF7F
AF1F414E0B3A90FE4DB9AE207C5F0E6FB5286BB7DC83E36228FC2E42F99D0622
FBF1AC10F75AA92E2720100C4D61E71FEAB1C36D358C80452D1E05FE0143E178
88FCD050FA4CCD4D50D25BB23C5A7E4A97D76755CC545FEC509AD48B900D09FB
B68FCE5D9933079DB0FE1EA4B7BB953CD76140398A682E6E9CD2379244EE1AC6
512DEA16D8668C0C9FAC8150E31F85770FF95301A4C79D9E0ACC42419D0A596F
AE57A639394AD395F3C47D9BF00D0576DFEC152ACCBB02AE7F8589C1893A4406
A9EA7414DE00B6BFE3823DF6ACD8B55FC6FFFECEB39AA58EF05F04CE0DEEA4A7
086777066473513C9A5017EF151BAAB1E85DA36A7DE60D4A856D9588D2414B0D
3893863240DF35E91500EB836970A4D0CC469A97650DE3F30593C76A946C0E2A
6CBBFB5F649D2A631BD4E068C783FCBAE7675358127F00181297C69829FA652F
7797977D682755A48D2162BBB88AF4DFED93CDE6CA1375005617CA11FF89E57C
77A6E1A705691BD09A98EEED73CF849B2540D218BC4D0801DE21F92090FAA39C
B553AEFC9CC158D10EC1336EBBB0B3D1A03E5AB72EB3995036BFBF304D33DC21
A647D2E13C1F799958FEEDC0E8978FF7FFDF265B908071443DF8ED39F5354564
DB29A3ED6339B1F89F923881C66F60C1C66C9EB5C9284908F618264DE17F4D73
50AD9A052406D11AAC6955A44397D0A377BC301275F733B65BFF142E45CC05C0
5830A3288CEF0CC494CE15314096D6A36F85BD27C6E5034A0FECB29D14A6EAD1
AEB373C01FB89B2BB1CDA2F4FC89096D1ABC65649A8BCB7349630EB8B85432F9
7AF5E0E4A6829BC561B4C7C71B9EB2CA8067B3C607CB7E5F0F03204081B8BE97
BBFC12215B29FEDD4593D4EC897A5614E92C3D76B874ADB00E5E04708714F678
65B00D12E6FA49189151AFCE3A7E2EA6542C015228DB8EA0E50C907A1F63D270
3F46FF5B8026639412566CA5C0237B4BFFE3EE0D39A557576E7B854040E17DA5
FC7A8709532C51B6E3C8AE5E40EF531840A7A0392CD44144FC7020E0BE3056CF
F435B26DE77783DA6A34A5BA0A55A358E815325B5D08994A670FD2BBC87689EA
F151697A8B6F4B868C46C3EE34364128EE9E934854008D51637BB123B5030DEE
C3DA5816CD29CC457E3085DCCF91700C8E75BDA37E53357BE7E11EA04FA8A1D4
17D83AA65E42B23B3349C0D94AD5E6E87113025CFCC07FDAB27E771284725816
0FEAEEC3C2B8FB78DA38A9719E8B8CA1DF9565522E778D1CE352012D9FD1ECB5
8FBE59FDE11619D05BFC9B0DBBD2BB89FD84E4E08110CF956470A82C0FDE59B1
C31D6FACF8D645462146E4A19BCC4538574F1F9A202233C45C7B8D37EFF41F3D
E7521334724A408CD32E3819590BF38115955B5628D0FCED21247C37EBA04EE3
99E15C6930B9FEEB48C847362337F9C20625E4F927C588FADA20C54C87BFD1AA
89235B6F75F366FD506B73D5B52EA9C5C1CEC458195D88449F780DF74AA03627
594917373AAF74CD8D0536BE1F607F5E5E216E413BEA148CFBE0DA2A514C1B53
7D6169E5FF85BAB71DB85C1C7FC40F697B8436DD9463FAFED2698911A9D0768E
9F08805E145A2B9036F8D2345920ACCDF6DF39E896259A7CD26893B12F3E866A
8F73F2A45ABA51146A5FD0C3644336FE829A70A917F45F1D3FA2A01C0F3CA071
2375A855CE0866296F59F33A22C7DC060970A2B00C0EFBD5CE1424CC77D951AC
A56088B48590F95B7B8D9615327D4AE6D1ED4D7AC8ACFE6B092C9985F52CF68C
61622AA2E8D6AC39AB476222DCFD4B53C94D2392009F1FF812DBB322F2B043F9
CA02710D7F07E3833DC3CB11F8943D30FF3421CD466E94E940BB2E1D2C61FFD4
1B2275814D60D90BD188122118F99C21C77E730ACBBA10EB87A96B030E72CFCB
CF46F11D2613EE0841088FC0DEF71D83917A46341D1D3BB5D4D7994E36A57B9D
B1C602085F60E48735696A3B8559ACA86536EF9DC3241706457D76E9DB514C48
8ED377E46F03BB52273C17948362619F6DC3FD280917B21004950C1E6772E1C1
F9C3CE26B0B426CAFB5311AB32F159CCDF59A9CFD0CAE5C6AA8BE0E6132C7BFA
D4538CD8E9112DFDD821504B73161B663812E6D36629424974B9637E43D3A9D3
AE9A36321B877035BC757780D54B989C9EEE9BBB1F8D06F22E19891E7AFF202F
C29ED2949DA9F60910A78CA4F6C78C7857FA6098CF9CF3DDAB84039DD7B0128E
30F8779E50F6F996B11075464E476B1D35F924E754BA673DCA44F8833E90CB2F
01FE07496596101CFA6308F1AD2F46C867B89E15907CBD72A7D872C8094729AE
1C0CB1AA70E571B9F7C708A0EB3AD446CDDDF714A19385E4852E3C24F5E342EA
4D351C4CA3E6B99621B6CE55FD9A3D08566203CD7552744CAC3F0EB05CF949D3
3B51FA86E185E5CAC0C3C4D436C69062EFA0049E1A68A71C69073ED52CE14C3E
9E8B21A801E7E880E01FBD3EBD8D3EDF098DCFC40CFC7833433E3826266AE08A
FB3AF8BE6226BC7FC79B2701F8B61956DB90BC00F10AF1F2D99C3CAB1F0C333E
4F2F40D2856F5BDADBB5AF427A1DA0FD703E54815E46CAF9FF68DDA90B18A257
1E5A0B11916F1CA90E3B2A6EA21949015FCEFFD1EB5D45E6A21E0491035B2DE5
695D7AEF16F17B57B73494176577205D592E3D1B02A432053153FF34C60F98FB
87CC2D5DCB95B8B25738C102DD0B1F1C99164998001581084198F4CCE3D48DD5
643EB276B8A9457AA3E53A4CC5CA96A1045D844A3EE983EDA851A10F3C245242
63BB34DAADBB72E11B0B6CC4EFBF40313228A2AEA580F2B752C8B0B11323C049
7BE3FC6481B5DB82997FC6CCE3CB506D30403CA9914146CABCCC99BE002EC6F0
3A3ABC9A72B1EB87AF6CFFAC01E8AE3A2F70F42D2F24247D0751386828AC362A
A3CA61762138E4E653BAB9118EA278CA9B6DD7ABB5D41D6D597E9C7BF7CEAF63
A2E4D25F4D671600414DD1F9873BA2E67CEAAAC1F4CE32CA4DD233D449574C1B
3B4A1020D4DD42B97AECEB8DEB1296219BD5C00031A3517ED45ECB75F8BC24B7
07D714C9D25538F2CB31FA1553F1A7241A1C6C5A9ED777DED349B8733206080B
3E19F18E3398150C2E22CE71DA15BEEFAED6D8577DCCE6FBF38A8119D4922435
CC2120B9F2694B28AF0AD5C1E9F79274F78FB84225CAFEC530712993508BF457
AFCB9208F72889BB5C87EA4987153DA7EF6E36C19250FA7FCFC99B1E0156630F
51F043ADE90001BD7C3BE5DF885AA66AC877EA0638D27AED089CAB56BCC37A45
1699C2AE5F0461E78B52019DA3FDFE14DDE12485A18D71EBDE211E487768CED1
5136AD5B5E6679DDE4C67EEBE09395DB7DE81B06F204B243EE14D878653CA232
B51492A6601B704D25000BCCA48F559333C6190013F622DF4FC262D063D49C97
9C54D10A8E0D906C10FFCBA9B6BFC2F68A3B4D030FBB1F5A25942F5CCB6A3C44
BB6C2B6689A8C7549DB64F35C9E268E67288D91BF83069EFC2B497E171122C3C
9DFC07BDE277B5B03A15536D606A82E9CD3B05D98902566527AD4AF557532608
2BE219B07A5BC296F42717E940CF0AEFE3329E9156E1DDC344B4A9830057C345
11100F2F9A13BFC9244666C2C5BBFD1516D588C0081F461426B07E9D2186C8C6
5774928D0430B7F830509E790FE201AE77F319327970149482021A2A3AF9996C
682A1C3033E6926720FFBC8797FF87DFF9A1B90B740B9E9E36A85B1A69F38AE6
507E28C2A8FDB718AFDF6D47C7E7CA93414C5989BCA3D818D4BC2FBB1E60121E
FA231FDE35EF0E8BC006CE179370AEECDC54669D021BAA3ECAF078B2AE24144C
100262842819679A3AE7052FB1B7D1B357A3BFF5DD9AEA660E011F8089C8E4DA
5090ACF758BE22B804EDB25BB9FA9471FE3ADF6026E1CDE261832178D7CC62D6
3B51DEF4F5C4A07CBD61835594C60E0C2165FF3D09EA9883544F6EECD62B4EB8
33F3DE4010FBC1665F262A8CA1DA2DACD0AB15417B88FDBA6E25306E14279E3A
9BCABDCB14305AAF4FA4DA28EF58AB3625E23F1467633BDD8F146F6F59296F3A
3A415D31E40262E0D377876B53DAB5BD19D23941A59B10614030F51A395A5DBE
9B2F988190B67D832D83407069C863CBC6217264FCCFD328D58D67928F30B4B8
F5D81FD43A537A78C758C90A339CDC436154E532AA32DF29B7ED6B1CEAA16539
16E856C8D1CE733E734773417E937A0510A10985CF6A9B02D22773480C261B8C
132F10F90117A6FC494D9E35D4E68A14C0801D60F13CA451A91F7BAD6598DC53
34DFB3EA573441A61FC0A2649BD065C83FCFCFB7EF31A52199A451D201437F74
D9FF92A0A1D12FC21182785531E98EB6CDC4CA1F4083D0083CF144BD032728DF
FFE9EC60DCFEBD5CD72BD2EF276E17E00365E6C15ACA781AC8A0156D560FA8D6
1BF8E722A18B935F32189527983D8BC7D5E6FE3F2D5632BFD54225FB6248A45B
75891D7495DB1ECC84B012A35A184A02188BE7877052A372B20C9A7ABE9AEAFA
EA960A9D2500C1E40DFC9EAE0CE17D6519C3F7346AB6EE7A503D896E16DF6CEE
66F86ADFA0E09E2BC59EC3A1B2D9632B9A18210E4F7870603F57AFE12804582A
6DC3EC66B1A9FF8CD34B421DC2403E17E4E106FF82AEDAF20D5528D70BEEC0C4
69B2D93300844DB22F44682EB0C7A338D2CD56D4EFD2DEDEFD049AD88D006D5A
972594B5EC52B85D0435FED4057B554A9F899D2D05075C32F051824EBD55ED50
ABCBA3059D19979E5C84513D196C5B2E60A41D3E2B356D883D6D60F556EA02C4
942F1932805F96CC05FEB6398B9278C1FEF80F3ED024AA296EA5FAA75B2717EA
BE3548062E3CEFAAC9AB7D1902F33F1510FC6640EC03C67B3BEC23CD56392F42
C75E92EB7301ABA2CE46042713B9A5A55386807373FC1886CC0D7B1D156C7291
FE4946A4848FEE548FABC153A6899DDD4B5A29530C8E72A0FCC59E6F026E0023
3C409A3ABB1517B30E9B3569A11B7B678FF8FA8BC6577EFE0B390457D274AB97
AB48702F795EBFBFCA4850A588A848D1087E8F9BA9394D8BB50107588B1DBF96
BEDABF684EFE6B81F68C12FA062659BD9AB5C92B47AC5E77FD41D10FBCBF079D
4903E563E9C60C4442FA93AE3DB6F56C6528E1E687973E12C2B1A423382D9114
D1E3C16C7EE8A45D8A054E85AE7776091FCECED6787C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1000
%!FontType1-1.0: SFRM1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1000, tcrm1000, larm1000, lbrm1000, lcrm1000, rxrm1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-189 -321 1456 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462AE6E5
19E5878939A488F2FE1094A76925CD24DAD4573AD3CF34E426708CF06E7EBFFC
BEF5595408106E2189F418D17AD510ED5B6A528E8902AA3A5F0FF52AE3DEAB07
32F06B63E28BB88229E046F4FF8A356BBDDE82DF2A197F2E26CA00D5594725A1
83A89A36487EAAE1AC312C929CDCE50722FA6C596C261E4D78D6C6ABF77F5CCE
0E410ED74287A0F201140F8D9674A7AC585D3CBC72CCB824F9E1CEBD08AEDB3A
A4015CADF471F7ABD9B0F0AF73A8274FD441BC1988A61799856E4770155341D6
516CD0E25BFA59B67AB7E0571DF3F5BA70AB52137D9E6A79EFADBE70CA05AC8D
991D0895C8FFC747FBC0E9A7212BAE6560B9E2B64FFCC58112E64A3B4CF7ECF7
595F51C34AD1342F5678FE1E62EC5A389CF04E82B5F832914B91F921F30A7E32
CA3919F57A2D9DE844CAAAC0DC751C255C9916595E8C9532E7A0A84A0AEFCACD
83EDE059FD06EEE9951473180B517F25F609F347DBA012AE9F004DC3C771777B
BE812787C3C50315D67254A384EB65F260943C6E16B2CDC64E15EEEDC67C5544
8ADE9981A6867405E46222CACCEF79F9DC8674268BBBE1EFEC2187A75FB7FBF8
CB2DB2134848DEA2F9CED443DCF561E7272B38F830871B2A5196A787924EF556
4B7E9093ADD414ACBC10147944D216D351CC744DBC13B0749FD0A129D7C47983
7FEC7FDDECB3FF4166FE295814B8EF751B79196DF6FB2F28CA8CB00807F682E5
1F37B8DBFA6963E77ACF4A16586D58C87B0F882FD7BAD0A5173202958267F567
6D66D0511364EB31556C37BA1973151C35046863FB4F3F5E6434479279EE110A
575DAF0531EC6A4D83FAAAA64995A7B97207724374CF283D0FEE36BBF7582F5B
CED7CEB37EBAFD8206E691F7D0D17C63527AFB2AC537B47C402716FD6C23FE57
22BC8B95E994FF0C6A6469AFD70C020C711DA6F19D4C46B9DBCA6769B6FF2733
21E813E7E86FDD3101BAB642B1553FA2642DFCDE99A053213ED3C70CBDBBF19F
C743F1F168B5A21E570C8DF7C108FEEEE50C825EF2714E974749A7317D535316
2D369F1673DFEFFFA71E41E520792075672344DCEE4F9F1687F0FBBDFC25FBDA
0D8A6A1C3DAD8BDEEE8161AFD70C020C711DA6F19D4C46B9DBCA6F9D79D26E79
9F1D26CDA56B940E651D0D4D017BD65B3ED72939301FFDBAAEC98AC821AFAD33
5BEFBC695F2746A01CF510E684C7D589F29C9B5E0BB1C42C9A96843918976FB4
22225AFE3A3F92B85B2D1EAA81D0F1D4BF85B1FBE305A01C6207D95271423B66
11D3879FD381D567701AF1B0B0749E05027D5493A806A353E3265170C00076E4
86ADADA8AF511EC5FE32E5834EE0CA7341F16665D0EC4DDE1F80C894D3049706
CB5FF8EC37092ED0A93D27A2EE85982E48AAB7AFA36EBB74CE59EEBC8CDC41B5
A08A3098954BBC19648F65AD5241827219F9BF72D4813A30646A85A3E9C558E1
31B17DD5EBE155667B73C135EDF4295FA4DA7A1C9895AA3F6C1F61BD658159C8
88E89E3E48BFA5BE91BD3DC050837B89D74F7872C976386C425054BCA530CF6C
7A33BCABA8689139753CED4E4AD623924858E2D38A7D4BDE1BC5D5EB4F85BE37
AC869A6CFC87E1FCA5CD9D3B850D16B50260C9C30CFA7DD1FF25580BDDDF4106
F5E5BE85533BE7D472D65C01DD80A54683E962767BDEF178B162417A7B7522EC
6B606CF186D582DD972C54BCA767918EC9225192DCF9AF7F4409C06926511480
479F0307DD5A7B8E16D3FA14AE4D7C9AAF0789516E44D9E4187A63CE0397C28F
3414FA7B2C2D61BFCA9492B32DDE38885072B38149BEC1A5CCE0C84A4963D11F
2E56709565C8818A538DA896944A83934003AE6EC6CD98A11CF309661E2BC60C
143604AF24AFFC6126699DF619A02E659CA508BFB7697284F9D1B44FFCD31970
F8CAD34EEB68EA6DB154204ED9DCE3E7E23FB72C2692041C4FF3728CD309F215
414595B073EB8B80508C2EDC1C4DF8C38E89CE919F2A837D1397202EB314ABD4
09CFD87B215EF9299486B7EE9D4CBEF1D42B2D5DF35592C3A28ACB384F4F0C01
CAC17DC73091C42F7AC741CDFE7268453DA56BF31816E435F38EB8C23C5093A6
162863EE9B7A881D2F2352217CB6BA4B3F58880A43FD7A9F5D3E2CB24D42FE33
605E3C8345BCAE8E072279A50EBA843179D2A95808D1CE24CF78652958EB8A30
ADAC715CF070A47C44BAD93D952A6763841D6D5207A8BDB9FF4385997C0EA83D
3AD039FE0720013D660C4BDFC2FCA9D28A6742AF910205C9B62146E86F913D6A
CD406A2E9041682E2C5192F197090EE5235882FFF6C169C9A3E1E6D2F4739971
EDA2684391831CC4E37F45277B62E03769C06DB70A2626B6321ED398C79220B7
B304F5F744EAF5DB260B14B3D5859FBE06922B232B0AC83BFAF49AA95B7C0C0D
3060AF32B145FE7CDB50F0C24D0AF11A161E21A6AB4CAA2CEDB52F9EC740EB57
78E39C741CC32E2D7F209C93817387E1008E89241DEF3224534DFA43673A0E41
90244B84241A7F524982C47DF34CB09E310FD1644CE582EB7FBDC53D90EDC6C9
D0C2AD47B679838CD6DEC2BF89521C1664A09F906D7D4347562C404D0FE57EEF
2870E0A797E0EFBF9FC06108C2D3CA63159A0300C7F03BDC40678E627A5EBA53
AF2DD411BE8E42D4B10E9085C6F770F2704FEDA818B81260A3A1AA4B2AC1083E
33A7800BBDCBDABC57592D173D97119C98ED76194C28DF9541BF4E95E51909FA
21A965428B0FC127B39D9A2488319CABD93BC84CF44FD1B87D580EC68142CFAB
9D75C4F6D6A73FB4C07FA71626373BC973423EA18C82839F55A8A6A0FEF2F923
41A948A8F8DD351882D0FD4A250382DCDB836B55F212F19C2A5C008E3C422AD6
A6011E641B73BD918AB2A143C4142FACF80F1249C3D953D33B6C8CD92A37EB6E
ABD8263983CDBA107F2C8E7A85BA09D427BC7A24441BAEA7F51AB95C11C210BD
B0C8F7D62D2446A2E1F94FC48004C54E1E8D67C8B7DEB084189882A704535916
0B418A2D69ACEF23B5105A0BE7A6FC13C4EEF6006E9D65A26EEB2A08F0000765
FEC6495BAF331EDB36BE642BF599F6719EAC28B40CFB665266BCDFB732F62E14
674EAB94BA871B3E1C03958AA2325E538C9D8D83343E885A9D61BC16E9E38A5A
389180BC218B420A01223748B495A817F99137847A2850BBB111DB5FB5C98BDE
B59F3EFECDEB0D9F00DD71FD26820F3962CAE33276313F87B7DEE1B057C7665B
046A438552C571ADC7C21185EDDFF259C641D160F82C924D3BAE8E7824DDD6BA
02ED8D5E381B0E3ED8525202C1BF505647491E885469725CF356762F0172AF79
F5AEDC98B4111935FAAF7A7DB810D73886997C0EA83D3AD039FE0720013D660B
9477C2C378C1B0A69949A1E14670B7441320FAB899D00348905F3C7CFDC07151
723D41908FC36867A627AC5B6E78F30F09707B9860592C55DC1AAE337DAE8983
15CEE46CCA41707B896D94D9351324E055FEC45769987F068E26B803BC80844C
9EF91A6AFFB8A1019F59C5DACD729608CE8AAF3A48C72C73E78898EAD58C01DF
56EB0E8BC41368F966B704A73CEB72AFD5A3521085B1D5104E767D6E85CF93CF
3937BE25DE46DA396794D9C59AE74D7304D4C2AA941B61D7224240AEC228EB60
50289B099CBFE4DF60BA3216B76950B7E54047266A750FAECED19F8E92B45121
CBA7D378A7B1AAF5F56C7B80ECA9A21F74718AD1FD1859110612CAC388A0C002
7D570B96192C79628BAAE81FB022368600EB75728D604133A44AC91D982CED26
A2E91A6CF66BA5BE3059A076D567F556BF49627D5AE82435113B8D0A9FF47753
1712CDFC6A77AEF465A629F42B02F1C5A129EEDDE9A99B48F5D366082E77405C
B38C7A634DAA07FFA25533CBA45BDEB49D8141816C367ED5831E10281F4DF8FF
006813C8DA871A41C0ACE77BAB719AC79C7E01C8A046181A95386257A69DAF91
917BC0E9B8214992F7AA291A9B95CE14D6AEF6AA4912E8C6290A81C6124C9E3B
3C13A8F4DCA4FCB3B2F24927FD16E57FBD50608A8314368A21E37A31DFDEDC4C
DD45FCBECA16FA5184618E121AC376FA2705C88486C25417C0C81D5A73E52C2C
F1E21A6C94D80957B6F034B4D7243607717EC0E9DB507F1DC32DA7C5CB636C5E
1D017AEAA5EFEA931D89AAE980962317F67595E24FD86E7D564F11A839EC8E5B
8120C7C84E027D50253EC67BFE723E90E176A345586FE53A6685C17437F7B1EB
1FD9E60D37C07684498D9CABA9386D3C81B051C44584AD5A91E195A828CC2CED
6271CCFE028FBFE326935DDC68DE7C1F36A1E693DE59D0541DFAF0AEB6AE1EE6
D08F1E6042DBCDBD1880ECEBA3A6F9965049ACFDF6993996A13A9E0529E345BE
7A44A59B6623F07A3502DD4F60988C29BC96128F689842FE797BA7EE433E7586
DD8500125FE9274A91C1BA17B808701E97DD2F6109643A183DDFFFC28DAEBA43
7B2273D5C097FE972352DE294B83460AA67E843536D98526EFFB7971E9A56678
5CD0403F2CBC985B2DB620CB5E8460B4CD7BDC0EE640F4FEF68B2EB610E5B65F
1B747A93DDF43CEAE998733591F7977C9EA9051E103920420120F10414695EED
42E02CEA52564490D314904FD015B61951C20243DE83A0B74D64F4580971E8F4
2EBED743611100072E13D0FB989ADBE830F455B26684F68B88C471A20CE2D9B4
F1FEA56902F01DBAFA06D8336A7F8C638598DA8F2F8CEA8F237A4B642F747936
BB11E21AB5B13A4DEAA6259C8E1654D1C2DA5E6D5FF70F0BF5813FCF76503D0C
78CE7119296670EEA02CD22E6BAD20BABA944ECF415024E914B8D25843DEBB31
77037AF0B0020ACB81E231E7B988679E859B18B0809E416B170067B51D063FE6
C6D3148452A0AACDF40EF7C7866BAA8C2D8B87C6F187B9386267A4A66901948D
B13F9287B4CF48B7B043325340E340AB4B4503A8E9C2F845BEADFF151E1B6BFB
CF6B62D6CBF50617E019030AC0D98A422438DC4AFED3B30D07D4961B80E8CD32
0B25BC09DCEB84DA9FD024FC4C3A5E78C13FCFF6B29E32CD314A0CB19068AEF9
BE96DA47CE4B68E345A8ABBAF0A9AE768535EC2DD30B9899A552FA4CBAA94D44
FFDA86DD1AA3B98EBAF41AD490512F330DCD272B15F19F8A0469B071F028E601
051F0857C29192867A1094C9A7607AB9B9BB8106A4DAE9485490060EB0651F60
6E678DF2FF576BE5C494D3BA1A85FAA3668E52F131331AFDA08CC184B66BB482
910546E781C7210AB441A416BFD4E9316C509E22D20FD8C11DDA7761B1A0D574
29D6ADDC9BB1C1156CBCDAE0DFD3D287387AC102F97CC8D362AB9D91A7ABCDF1
6EE4705ED92A4AE54C9CBC34921FD978D547A92297D8B4DFAADCD9247310B945
8B6B7A12B47A6392ACFE0BBD623C99C74E1A0AB3D7BEFF3B4F88DEF4E3C63B03
7CDFA5ADB906B42130D480C76F82AF2F157AF42FDB1FE98DCB81320DF07DEA87
EFC6AAE69F73561A8830A5AC9B7E7C18D5BBFEA8CA8375AB7DA7B7FF2FA9C2EB
77D6CEB6F20266F113A068458CCF339D3CC4882932BDEA2B646DBBF5A0001216
B9074EC84251A2EBF37123A6C22CA7331E027FD6D3FD81D4A95C25C8FC1C5403
ADD0349A827E17794C0AB1BBD8EBB0F647ACD2FCEE4B184E4148C46F02C06AB3
23D6080B1F514A65600DBB29116D937B4066DFAB2363C70E2C3171D757DE1531
886F75567E77A8B604F45E03015795FA961174504C0C3E3F02BDB58C471BA96C
C445D7172A15F4335BF3A891FBAA225FD64BFAE67C44795D506C1AE6D2042F57
F548D73EFB29A3C9FAD06D5CB96D262282A4898258C8A8AC53C3E9B70C329BCD
9CA5DF2F8CD8B2C8E3514C568E5D1DC854B10AEB7EAB2007E231575527B179B9
C6ADE75298D261EB80BD4D7AC036C0571DCC990C60FBA08F67D636C12BAF01F1
04EE85705F8015B05CBFA80D815DCA5268A109DDE6B2B61F652CCDADA2F3E1A2
EE1F6FCC07D3ABA2CF401E5D8236A67019DF1E665F6CB1CE9830EA7A9C8E91DB
797F21FAD8EB29845025DE74A798537B1805286596FDE8EB0520FFFABB84BCED
B7E130A8E5DC232593EDF90D8C4E366D19BEA298227AFA967F73BC5D6D0A0093
DB026834F3E9BFFF09F9077349C96608AEEB39FF1D17405A3620270BF01EDE1A
3290EC4CBE0D21D5F5147BE27BFA25D69BCDD3AAA5968A3ECB23D1B03FFDC39D
A3D7071D8E5134A27E8A5A106D86E395ADE502AD664E936D20D0D9A44241610D
53AE6A1B077AA725FBFF87CD4F8B0D9C63DAFFFF856B80B3279DF1E4EB1D9131
5F66AA868C28507D97C848C3D061C82E64F559D6AD28E3484C836E5DF9E7510B
788EC33640801154F287A6FBD95A9C0863EFC3F5AC56F4B051A30B2620337030
06141477E9C16131CF7065F11D04A436EA550775D30B3C92679831A59C0FF5B0
FDD7C26FFEE88874284F72237C1378CF993A73530B77F5FA31B09CE366E03D5D
8E5CF69B1086B58AC76FEBEF8656C4567603A80BAFFF3A40A7241CFF20023155
6BD4E11826EC6D1BF0D3D7F69020B67A6F96D92300731D8BD5AA40B952450083
32E6B0AEEFA3A47CE46057E6E943CE6E928C947F30FBEC1FEA5FD19A0C29A2AA
4A73021655CA4F7C008105C677BAF1DF07C5ABAF234464259D07A0353A00C669
65A64782EA5F9C5DAF9B06D6CD9628C061F491A3E6DECED65A8BB16DA3E011FA
2B757F02EF6276EE55452AC5CC89E9EF45E215528ADEA1C1D320D60CC05C2478
175BF6B5FD497380A0E5647F8B1C906E0B331D256FF9653BCEB7AACFBF26C745
5590FDA7D9F63ECE5EA6C3AD4AD35C0F7A8403B2CB2AB40AE9F9B354D77F0EB8
7DD9A66422C5E472D5998FCA837F3D2C9590222DE1EBDC0011A247582DF33C00
9DA12ADCE4F6CAD515667BC689CB2CBAE3CCE56623CAE0EF9833304CB4345C80
692F535DAA3639B351C8EF330672C9584275E0EDCD8F47DDDB8C1FD5D6A3AA49
17F2669259B2A280439AF75932BBF6A5C4C134717FA338B17B31C12ECE071CB2
5103C6431D29D37B16D2C09E9887BB264607F6FEDC37BB1658FE1B44856CCB3A
973749981546A33828A5FEB5EABEC1B223A217A89F4D2BF10C0FA85DBCCC3809
0EB4A33A4BBBB1A93EEFD889146AC58C446DDF27B3E316B429412FEA42D1A4B1
A09526F8CE866E938834BEFE5FB8046BA34E3CBCA440F97FA94CC6D3197F3679
4D1FC124EA55DBD95553AFEB4DD1EA87BD5B92A62CE6BCF095DA482A4E9D8A29
D87BF206717E2741A0D8264EAA3B6AFC37CEECDE1DFC1F2E553657A2E0B1EF03
7264648B0F43152CDF4BFAEB5FCF00781B5FAA2FA8E3635ADC47BE51F911D017
A3281366B48A340B10042281C8F813550F0F3D47BF0AC5BA7C001F0BB0F9428E
7A631D0701B547001CD83C6BC0FC1D8AD4E0F00272558FB99667260B59F58DDC
2B0BD7BA4BB366357C82CFED2502C765BC46825B83A4B2C25A56E4B7681BD2A4
E6874D9A0C4A787D4E5F23D613AEECFBA6A7980C1BFE78F9DC3CCDCFCA9F576D
FB8C6C467E3E766EA42BF6F76183D6F20EB871B41A506B03CA1C59CC33623644
7471F3CD34554B7A51DDC45A6F093CAC02EF741669117308DB418E6F3743C01C
47CFAFE2F8843674313C4E0BBB2E606151B37DB086DE5EBD43D5F8211C92ED93
4CD6D83EFD62976E62327DA2F814077BACFF5104CE94A693DCD7FCA7EA73E1EB
B31970B3725696CDE1CC45A2A57156568B7F0441914B37BE64662F0C91225BD1
B26157D126CA958770255FB3367A6F59DC8AF87820BF2C07355D78E4D5B50C99
6F1A54AD326C5C8AE1925C5A6241C5B93BCC2935CEDC8DFF584841E420EB974A
671D66EB451B03401C68950C9A100CC8FE9234D92A3FE86B9B91525E753AFE3B
8FFC894446CC14CCB5F539C098D82288ACA9B0683F0CEEDC94D4FA89D994D0DA
ED51E82C6F8DAA724E49D074FB13143651EC66B5436D54BBD418B18F29C44632
E92EB3847EC2351991DF7FE0E98166B20E4586850D1CAD55D9D92BBCAA111E39
9EABAA6C313F168D1CD68195BE7F49C4C74356DADEDC1B8FB3F8FA0273FF0DA2
ABC5EF1970F19A62E87168ACE949639A9448041CA1305CD6BE3C68517AB01E15
ACD70FAFCDF759E1E87614A9035E7B10620593130C72963B10D5C4B19B9AD0AA
9CED24FBE70F055FCAC86DDD4D02B991D7A28B8E731B4AB91F156B5145EAC93E
201D5FE90A001C8D82EE9D933EDA0CB2AAD4FDBEA383D64614739C866BBE09EE
BA78010775EFC8082E7DB9AB15244AB33AB4B5171BE481A96E16FDDB337476B0
08B128F4F06DE528FDF38468D71D1FDF407E5F0DB8C7463857D39B489E5445FF
6FFEEBFC51C876E19CC6483004AE42C76268B2D8C139C1C4482CC65D7E820D14
B9448B0F11EC84215B4AD28C78862017B2A5CF4C7DDBBC34DC8B7CB039169178
DFCCFAF8D44EE62A9BF0C48CE28B1D2D4F3C5570D822240EE6DD1D6A9F037595
432D8E28F6B2D2FA25BA8E3DCA0AE54762476AC7105D63E598228A9F7165A975
6F4557EC65834BA1EC2627156F99A63A0DD51D8A25E8706E301C5C51E041B233
1FC5E7C3ECB6197C239CA811601ED1B237EB7341AC83238AB16221F9B2711285
B001D05C2B4A6A6969ABCF2DE204B8BF1FC7D06D3D693CA3ABDBB1991E4D9DE9
ED5767C311C48DEC2D9DF9E7E2D1F06664B4D7F9A1ECD2F67DF998FACA6B856E
8156DD12BBA280B3FF8EFA7215188A8AF8BB2E6B5748C0D34F13FA6011068066
3343C5E0CA4A16FFE88A0C495838C68FF0151A67428A2B7DFBC649344F7E32CB
E60B39A63B21F2E15C2A8EF37839735DF3305E50D2B278B3D9BE5338BC9A6FDA
2047F1A89B23FF3D84F3F528CDF40DAEC58879BA00DBFE0080A6A493180E0C09
69F6524CC7A5DEEEA32DDEBD84E7E10EB78FDD51EC73D4DDDB308E78F05DBA3C
A29CA837E97F6E2F0658DDDF8DDCFB1F0077272586A66E69571F48D6F21232C3
1DE29972CD389A80897B1C3EB1A0503068A3743A960C99359A00A18F60C0C70D
0AB219063BF8FF36FD0D0C3DAF66D26B9A0BB55121CBA7D378A7B1AAF5F56C7B
80ECAB1ED374B2EF47D9D66A8C39CDEADE6B97AB16BB252C676973A6206D40FD
04169C828CA69AD70A7B8B2CA8C5D7369A8D1D975A3B81D5B006EE1A20C3D3B0
FD14719BD5B35E688158448FCF9118D8AE308ED0033F5C236AF0BA4E3307DD61
3CA806D177075BED8D1CD6799DD16AE7CD2AFE564CEAA6CAF2F940971645E54D
9F9E2E1A1F760498C875E80C3E6F81124F49FA708DCD302D6A3AC104CC4303FF
B4C63838899E5CC22DD7CCD8CDCC855CEC51E5EA8F51CFDDDB8C73B21F8D93A7
614AC29D3AC0054EE9D809F919A8D5D71013CDF61ABDBA268ACB2BD8DD4749FA
FF9462E3AFFAC6A02AF9BD0F66A89977662DFB98E9ED8556C7BC8E796915BFEE
34D1D11AF587911CA802F2D9EFD01C69BE68899BAC6D7B4F223A95EA74A6F9AB
1AF4056C369A06605C3C71C870E2F4D03570FE4972A46BC43301FFC369478293
955220B4DABF379EDA9732F5AB8111BA12D6ED54BBA43B136DD169B45C2B8B46
88D271061170A1A5CF403240C01F4DF93CE793480C57235CEF0B98BC87152005
1B28732C96FF0D996CC2560DE38E84D52025B188E06E96D3F725A77088260709
660920842A145BFBEA0383B804800EC400665C90036DBDD7F75B65B3AF6282C7
07A9718DA883887146B4EB07A77F49F16910D93C0456EF46824BCA649479E9EA
62CE181210AB11B611142D79FB382D2F5E768D98D004310B5232FF2FFA87FBFD
DC952D0E56C971A6BCD0F27FBE67C66F66D42D7BB8E417682EE2532F635933BA
F9FAAB506FD21E8C7DE22E4AF1F3B74073F6273CF745B2C71A10D98C425B9A7D
25560319C629D91ED739C76FA313A28A9AB1E5BFD8AC59ABB9D2709638526B19
E4EC17357DE989F47D448DBA0D9D7D39B03D2D140FBF1018E1A1443CB8897EBB
1FC1C2767B8AAABD8CCEF5FBE8F474D602364E9A5ADC19C9441C10D1A5C342F3
6DB75065EC11F5085B37A6CB71C8AFC386B0BCE862D1B76B20DA7E50B8C35BB8
7DA2B3FFDC0815EC5A73A98FEDC3C77B7EDEFB2EDCA0B6CBF1EC77F1BA80A107
AD291AE065954E4749A8CCC50A0F32987C3D99570D69B0CC233DCEC2AED884DC
7088B6E199F16D40B26F1F09A31CC2BB74C92AC1A16FBEDBA158EDC89F25681F
D2C7D00283822CD3B56E016E19CC4D899762EDA276008130D3C9EC1E85279749
0C824BEB4AD7FFF3640CDF02B146CA120A491C31F98EF3E461095274CC234EDE
48631B956FB5FCCFB1DCBD41811B6463598D8E0C675D596C6FD3C8348D59BC11
68F8121A68DBCFD6A49ACA942B5E93C2E514BCE415B3F6CD9319FCF5394BDA69
5818C0E9D9AEF42E1508FD51080262BC086381EE664A33D718B34A12550E115E
4CE9FF3F5E364D960F714FC31B8B27133CEBAF8F77EF4A391F5D1D68158585CB
5DA4024F399AF2E10D2A6A411E0F9382BEA8DA3C9D1F99045B12944F07E5142D
EBA285A0A1D171A9B3E3D90FC8F92372C3B9A585AFF6B59850B3EB48D702507E
6B04B22D91B7EC696FAA926FD98A1B8DFF2E6B0DB9CFB3E80E8853B4E8384241
7FB91C66ECA1AAD8BC4737A8E8AAC9298CABF7E237E04094B7EE910A1F1B271B
2A877D9DC09411034A7D069ADDA18339E60749C218E063B395DF12F91C29ECD6
8E76AE662B47FA565252349C9FCE970F382EF913C5FBA5CFCC0057DAA489DBAE
8EF68B71960883A6DBD0099123E5C5ECA5F4B1FC8DA0FDEFD09B9A6A9836CE40
90CF5B01FE462675CEEAADFDE26D853862CC9D03F2118A0B36300177F10D9733
807CBA6401C900320A9302325960805A5CD806071201F9544216D392A4051318
283D40E2EFD187C1E9DACA88850C6BD0FE3775F38B868C888DE6664AC316277D
0CE8C58FD7BEC89E5776278138D024757E2EAA6F6567F0980E89CCFAB6135AC2
15894121E8CA4D02A5B9744C4E8E15AAD5489DFB011045A59DB5AFE313BED8B6
64590BB6A4D0230ADC110E13233A54EDA46E5206D47649CBEC5FD59E074247A4
1AEB55EC17EBF96D1733BB8734677237C694CE691C8FBF4E59F66677A88320D1
4AECE05A198E18F0C2CD3FFFCDC5C84A4DC6EEEEB1D21800D722A9A3B86744DE
B530AA0F94A01DA42C53BDE88CC2CC1B23F256B5BA949B5ED945005796D6E902
C586199C37F5A2405BE34E6F6D3229F4BF36A43B6942EA1ACA42EBA1FC619435
B501A9B74D7FE3C08D6384B4295F324F69046DB4C25117BADCB01553F3F95FD2
5857F3A0AF396636955743022BA9CDF2FC7685E125AC91AD787F4AABE2938669
120E3563F750775C0CEBD7ED27129CEC3D1BD9A9C45375DB006772CE07923DDB
253379ACDB11427B1FF3F937E9606AE7995B290C332259D31FFB0CF8D8EA31DD
7E8DA48D84568D2B55EEE6F50ABCAB65D5DF56D7D31FAAA18D1AF32C0D83688D
C104F44409E7A796C965BE407C85D3D11A757195ECAD77DA5757F4802781AD3E
52F9C2EEFC36CC7A26ABD744E01F0739ABE4B5AA63832C060D9D54F36B93E173
D032F0B14DCEA5F60D6081AE7FF0C0064FF0FE0B90294C6F1FB0B2D48778096F
C7AE4D630A9BFE94015566110B87395F84BB45DC7B10A0744ABD76BB8359B3C3
9CFF94968EF45897477F414C09344DC0202727D9E1AA2D9F1ABF98B08167099F
22A8F2AF50D3E55B4B00D61CAAC26771BB25352F97168337708E7F9245B8D1DE
C6C0B29C4DE945BFB978A3045EE283EC948025FC45604CCDC154CC374F20FE05
F5A5EE8472AAEC545F08D2A3984295C63A67093F6E191A6F7346E8FF00313295
1E50777EB2A0D98A0742CC0C91D60564524875447B947AB2AC6F3AA6FC470AB5
2A34BA82F83CE40B3E32BBA007432D0E5F16CC484C7510DCF73DFEC94E00EF85
C03F169A8D941310676CEEB2EC4F37D2FED84DC325525A2F240EEAE5FDC59B99
FFC4C87D544EA51EF2A9BBEC5AB02B2D641A7EA8761F76666056915403F14EFB
A9E8AD4CE85859AE658676D4050E9460C00B4A03D8FF018C39F4DB055A6E98CB
72EF70B3490F7DC39C215434A182918498F6710A4716E17C383837884A94A193
75189688B0CFA983FBF81B2A11452D2003D2E9EE6C582C274D039BB442005B10
DFF2DA03955633BE22E59F3B1BC101F62C24FA3BC408C471AD74BB3C0C8DFA72
15188A8AF8BB2E6B5748C0D348492982E10483AF93D9CB22452D028F4FCD6326
91C8994AAD34177E48CB498F4A7ABF7FA7F2F245A0EDAE271A2212CC9CA7119F
E8734C43218A26BD18422745FDCB6775CB2D4EBE116AB895F807E23688932587
B307FD5A660EFFDD159C9DC5D33FF7B1FEEECED43C9E7B08B9C95AB10DF2350F
E3E8BC962E9656D1120B6C57D0ABDB3A6A99029E5EE035BA0D81412AB77BC8E1
874CF329240B3E84F0D7B8D0DAB12F8782BDE021B4AC21DD9E9D6DA100CCD84F
2A496F8C4DA019134844E4C6FB34FB9EDA381111DCFCC7391DF6D8D0DC2E3218
4A5AE3B770DBE028D8EB50F92781384DD5C0256CAD073EBCBB4383A51FD12E05
BF8FCF306959BA70CDB255498A9975B1382DEF61D05DDE28DFA267308ED71788
8F7F14DDCA962A88CE0421600A3A0BB38D3886AC58745A4CB816E6C4E63F53D2
4088B6708BD8B732A9E9D3AA4B388E5107B682DE5CC1FC54EDCB110D97ABBE2E
2F40DDEA523D0D446EBC550B5FD71A55FCA1A7186E9DB3370FC6A42994334346
BA37CA72BCF190951BA96BFEC80EB1E387F336F317BAA1A0EC59B5C058CDC06E
3053A312FDE9A6A7EC3D670524ED002BE366649A771702CD5D54ABA5531343BC
4AB9E331D0A01ACD5AE225C51FE22F69A067169DA93627B2D44D9DC8441FBAB5
BD7E68C13693EC4D94B9C518F0207EE25755CB9F49B72DCBE46BFFD21188521D
971DF2414B1899B0597C5C086600FD7FBBD0EC61859FD0A3946680DFF2E051FD
53882F0946579EA6DD504A9B6C473AE72BA8FD823AB6D9C24CA4B282C8E4C1F2
EE58E0F069E128E7575263811E5D04188D81755DE0C72567F580998F9E08DF97
6C73C1B8B34BDCC20DFC902AEDC874B4CD3079D114B76216DCBC8FD96AEB8309
58309A4306F38C2677EDA1E6988FD61007E16151970558A40762A536180205F6
835AA84C8BBB4E223BF905F72EAF4E043A642D66A159496D9773D0F79297EC0B
12990194A6BF66361DC5232E423558DC3EA5F4383312A13EE2DFF55E228F3983
7160B80037584879704779E86E18821BA56FEB950170438A6731BA14D6191D51
1982A5D8EBED7726AEF8402C35BC3019B90C3657F848F0BD7A12E39D54C9853C
E6A95CFED9018F85E7BA1AA15886403D3A277056A9E08A25FF4A75F5B6D1E82A
3839DD09671C791CEA67F5A9C6A5973F179C285FBE99B36F3C34E3BFE654351C
E73CB5E8765DE2E1A9FED23D99FAE307BF2B43FDE9BC06A85BDC3879A70FAA73
390665F4ECC6A35ECD1D466873932308A1D3A7949729D5FC36FE292191E55D75
79042ACA3BE2C13D896CBF747E2915796DED6C775C74CD5CA04627DC50A40E90
BF3094539BC7379DB0478A506A5B61C4EB85702B446198377953F4A1EDAF432F
766B7C6A9B3D92B665357E0621B4D4BBE9539523E1DDB68FB2DB9FCD728B291A
0288689D9A1CCE52D55FED693EE75A6113E531B102E1F0B5251D2B9DCADC32F6
64CF8AFC6905A556A601892BE4AF8CBEA07ED92D5669FABED5C979A21051B42B
58BE44EA60065DBEB6CC5282B52E43A718A49050810B9790B087ADD6D28170D6
B470B5FCA6AFA4B308B00F079E154576DF1F2E1CBD0471A8F9569C883103BD3E
38568BFA0BEDE265FE19025157FB5FAF0324192AE0E13B41733608F35728C67D
E8D482B464F5BBB64CC76BF1EA05FE1895D3089A7D28601320D89619CBB7D41E
D979314CB4638D99DA07E4B55CB1B888469DF34ACD6B826CCBBF49BA86D273CE
EB5632AF3BF04F65820FF3278CE9EC0FA1EB238A2554A097E3D5599300A2D03E
BC67DDB2691152EEFA81D7EE8DEA4690D72A65F33BAB9FC6A5F874FEA850B590
9238DEFCA55EA65FAB831211C23514C4160E0FA2D3AF920A6E277B757A8C34F4
68DDEDDD967FC900A9B8E42A612512C0454B7FA5B0E14DF9EEB2E5B71B3AAA46
3E08FF30BDA638B4816B24EA9ED2973ABCD56FFCE79F697C81E3CFB6218125D6
18198BAF49EC79EC1C26D51A90AEB52484EA6792D486FA282F565D6C1694EB20
5A18B73AAB6FBF9FF63E801CE9DD655CDB7D80CB2BF8DCD8AE8C70252E0061F2
684272DF1179752A5093319ED53727636FB2B1B5F9E8CECF95CB960A6BE26CFA
CE2660B2F2E95BC2F4E2E5BD85CB0B0E2909F2760067E0A810BBE4C93211962A
404DE08E56E1C4D434C7E30BF0680C3D41ABA79A41332FCCF7BBDD913AD6BB66
02F18FBF3B49A554D3AD44674B04265D9B5B996377214B9EA61BFBA448212D7C
0FC088FF8E16EB1BED35F788AF0A1A15F41938D86ED082FF0AA99C12224C14A0
54BEF4D150103F087FF6225EDBB5E149E0941C7CF6A8B2ED48E7F75D5C69AC04
865E8388DD7247DDDD92AA3C03CEFB44128FED2269032ADFAC35B87AC9C5B776
EEE976742572A21920BA25DDAA758F75B47C2568CC5FAE992FA97B1F01AEAF71
6570AD54CE37850EA0EFE060312A8D0C198F2418FA7C3B2ED2D1D0656EA930EB
9F9FB68AF0BE13693CCEBD1193000023666D249CEF7910721988BD76B6F9A371
2D4BEA0304BC949890567AE41C604CE01FE6798C29D60C986DC68DD2F1949861
1323BF091A9D9C97538766E816F528624BB3B0C0CC3041D9B09A8AEE9E6A6E00
A9D40817EFC08CC488E30CD1B1AC212C7A4DC35053A7BB8F07D82D7A3F6B7172
18CDD01F0D9FDA8DB442F3F73FB032EE77C6D408229A51B0DA26297A8ABCD9D1
90BE8B0CA7EEC9D4AE44254DE0290DDB8DF6F46431019119B325A86D479828E8
2CCE35BEB231378E963A0577442BC72513B9CC17E6A687D96578A29C19C1A2C4
DB3D0902C458DAAD204FF436710FA7FB540A08229DC1EF89662729103400B584
BFAF41D745D1E5E3EFACFBAE0F457C6E37977EF59AA346B55E7E649304E5A3C0
861CA264C7175F53272DD1C5641E0242F8AE7CB06CE6CE0C9FBD9A5FC96285A1
2ACC45193600A66DB8CC508245C7DEBCEFFA72C6FBEEE0D8C59B2692BC0CD075
11F575553D3CEA41E001A83CA24AC1E61EE8B408F3BC41039A8AD8C0C458D5CD
3A86BAF5C870D59C21555DFD643FEA3EAE1F3A20ED47EB39AB046A40E3E51FDB
EB6D64E651690F2222D7839B5C8679FD1AAF3BDA41B9C0A36C5F2BD4E25ABF77
0E5E40BBA34431B5922F1CC9169D6F8B98ED6415B92A1F5C077D6BA397485442
6C841D780C38B60E84F31851E09A9000C320E5640F3872D7E4E6FC80688A56F2
8F3A62071EE7BE887DE73489151508350BD6CAEEA2AA17B7B1ECC3A743AFA3C0
253CC9F0313C8B9C50D37F7A8C0836A9FE439FA62B69313BF5DE9A58A49E6A0F
8A6155306972FD1B33B87E1ADEA1BFF96713C6ED6694EBE9854D32C7B532331A
5D5FB0B1A9F7C6E543AF99C101269E9EBB57223FDF0C50308A633E4408D4DC30
F91761B09492B541C0B65A7D5906EBCCB965BE0EF3AD0AD10208D393C0322E2B
EDA3D675EC83B8DB3528D8B6032F25F3D65E208C32307B7191FFA4F097E7C771
D527676A3095AD728A13F09CF4702C99089298AE41BD259EB3C80C8FEC8B2CA7
ACCAF342BF22BCB8E259FC0E0F5766BAE77375ADB98A2A5BD93C4866BF879785
21BCD5D605C28EA01F629F1C18367C7E8FC423F02211E88C5B65490E5FD63B42
F01ADD3F0488EDA957CB3EC546621C92EF3FD8369983B31417026F024B780BC3
B1ED1B22760F7F04194A90EA3D0B584A00CB2F869B91EFE05CA8081284DDF648
0FE60048154BAE7D3F8C7FBC8C30DD194D48BAE0A30C4B4927D2555AA76AC8D6
939118151FF27F3512218752C3EDB71B661D49FCFF2FED0DB6E98CA0845308EE
5791C47BA1D9F1466682B5967FD59EDF3A454040EB6063C9FC5C88256E7675A1
AEAD3D4298CE20460FF4EE7AE4AEBC1C2676676CC9A84672C714B681006A61EF
001F12CD630DEF2417CE449603E9C406B14ECCFB68ACA38DDD2F38F8C8AFE22C
784CA1BA6D21CBAE6D11DB7EE8613E58A2C07788D907106BB688C1C073234505
947D15DDF0266E54563DFED42B752AA19C9BDC78E905CF0ACB419FD534D82ACF
994B979A66D36EED300AA682C6D155CE80CF64FB2972C5700CB678B337B2FFCC
4D45E03AB16C001B6580CEED317106D4ECD9A135D3C09DC000CD4AD5CFB65E05
6ACA691A23A46FA6D11663FE3736A817880764EAB0EDC8BF299F86BE324D352F
ACDD50D0801BBA48F558B81490253A9A88A246586E578250EACA7507901A9913
A8BD904604DD9D7C08C7298F0CB8435B492FA0982C08438DD5CED4AF5E972BA6
8BE8F5DA85DE5A37E188908A9E063B5B8B61987C9A649E3DE6700E4CAE1E513A
D045A13C28EB3A61626A2075B99B40FAB239068D3B68D7EAA6C34BF00C0F4868
FEEA81B958BAA9AA1BA833A3EAA532FCB1297A8C344FA1E204069DF67F3D1F8B
084DA2EC15CF4C6D62BDEB4F8154664042BCF7E5BCECC6F3ACFDBFAE80E40DF8
91C32648B5C8EA404AAA222FDA0CB657DFF607CAE07F69DBCE27F364132AA2B8
3CB2C509254C8047B9E2725F256CC1C4EE1C4E008870A9092CF5DC29A487225F
B2340B52DE919A3A03807CF7D7318CE02056E22DA34F7D6C8D7EFAF418E6F31F
6093D4171F539CF1680BD8D30C90C2AFFDFB82A8EFBDDE79C437CDBACE3AA4C1
F8578FC70858BE6308A40E76E9B5CD600D58BFBA895867F569EBD4EAA4054363
64C3F5717BBD3E4607C4F723429ABFF24112D6A383FD52C8360A9A293FBCE1A2
48B8142B10A28A2167EFD45CC1DA89C84F6ED233BE412B4707A28DEFB5404ECB
7330FDECCD88FF907E63682AB6A3570DC4072F57A300A1FE7D68701F997A943A
B7ADB80212A3D406C82E5691E7F1FE2AC1B6F62E37E29943CE3A60DC70A0BF46
5DAFA58DE6B498E59F22FBCFC88CD664034DC7E449EB080A35ACC90DA2AAA24A
20134C33CE2734F309A42D1F3559C81AF34BC8506311F1A72CB24BDC2838EB20
2A23B4DF44AF25081DC8166519CAF68B29AD8384FCB17B396C69EF9B88D9D216
B6E608F4D504D4E56F374ABED17EDACBCADCE53973B1F3115A79130C321CA9A6
A0C2E036940F95DDB7A9E86DFAFDB92AF5B719ED405337F0FF822E75A44B8FC2
B51ADF2E2E4DFADB30A1065A6571869CB9A17499CAC1800D8060A2AA05BCECC2
718EEFA694809DB1B54002451F8BA0BBC2BD77E7B64D4303D1FDE61EA8C10A18
217B88AA47320CEAA1B710194DCBA1509B602E241FA8330A7F5A967FC5FA6502
116271AAA40FC783D86B059D904ED280366D9EA0C4D6C3647C59637D27107161
3FBB8C4CCE76B9439395EE338D5B259AFF4E028422AF7F4C8022621458D184A1
7CD355FE0CE8FAA8247B5CEC9F613D89FE9C787FF39595EE7BB4F2F64873DCEB
3E546C116965DC6BF58C5E056305E5EC21FA15638EA808208F63EEE23E624273
579037A9498C9CF845FF73248713D8FA2575E35EFB8A6F899DCF2CB8C4ACD948
7AFD1A4078D799B0373CDF90694DF1F26FF910BA64740464D068190FDDC5E862
C14DAF089B654A09A50DCF7AD9D7A0071A707C0E81849D11F66C6FBFF883CE01
695E75412A4F21781EEF0FA04FB313A0FE73D9C1FBB90C67A405C74845B20EDB
D1CF42118FED341E5FF2913F6C44F10CD9F2EFEE5B6A31055FFA20A6CEC060A8
322FE2075B5285884FAE90A726998C72B18FDC681F781EA0DB7102416BEDDC3B
7323E872ED2FBCB4872C9D72DCD1B7B541D43A6F90C0330CD060A816A216BB85
D2C219A67A3B74FEAF439E87DDD9B4C546C76993112588CC6BAB54EDF2732DD1
5FB8D4A0A190A71292D0DEB5C6F642B0E9367291B5A7EF4A227930D3E7236904
231D2B530032DDACD2D711C8214452032CDE9DDF3E03FD620EC1581D514DB9FC
B20894FF19F953187A3035216A6A8DCBB78E92250DEEFB9637607EDF67CB143C
B895D4CA3443D5CA2DF3CE7A306F465D6F0475B7CED57D2C9195E464B0AA1564
8799AD0A2D7CF4BB17519EE8E4AD80485CAF312A053F17AB100FD2301A4244C3
7004F5C5B0408B54E6FD306E46FD0EB41A9C409E08882DC0626127BEF282B576
A7B52F5C4395C89AFFC36360BDAFC3F964A065AF0A1C8C10E292ED3E47B8EA6C
0654971DCE0445A049487F915B7408F76221C08BAAB3BBF263A44B593C62FBB2
4612B3CC8129CF070B4762DEB57A8C2EC56341EC1DB11E788820C15C56EB773B
6DFC2D74C3D5EBAA5BB3F7CB85FDF32D98DA685D339A0A89A526AFBC7E1C5F5F
5787E0654A6EFE92CBBB7585E46BD663E56FB90156AFD5A9BC45680CAFE646EC
42D2BAFBFFA22D7F98F114872B8AC0CE090E8D39BC053D213DF0BD156B1A6BAB
E1211C4CCFF8AE97596DA22B00EDC91239E0555CD5A6BDD67574FC661E1AE4B9
4FF70004F23E4448F141FEF0B62F7A79F694B7F18461DAB54982E39B51DD0F4E
0298F9E6404CAE9723A426B28442068A6B6A0877512B8AF09A4F3081C2E321FD
662F20112D49A20DD584B635507A14A8CF439A66B22C4EA5315288433A7D2338
E73542BC2B3C4804C7FAA8909017599F13AB219998B2D29BC2E2CF4CB57FDA21
45DB976B30326D9E542BA59188FFB2193748F87D4C4409C206A940E7BB4EE3B6
317F6BC34D42A9EC73A1752E3E1F66DAF6379B46562CCE124AAFE6DAE54908F7
64C75C3637411B38A5CF2B4CDACDCB1F6860296FFA843778CA83DD81DB696CED
BCA54801EACB7079ECB0BFA7B3173992A787B9191777EB48B6772B68DFF69D12
1261DC4763E2F6E1C1CC7FAFB13ED4FBAE9A0EBA1ADD25CA1E00C0993ECADEF3
674A3610B25ECA2412B59F7BE4EAB0CB7FDC086EFB079DD1DE458063BBC5AB2D
B0FA30C1D15477FBD217457DE656CF5F79F86A3B5E80FD93038510D015DBCC70
31B2FB93735D20AD7D6D64E78F45E50AE69D7D736C51B8C449E6C346732589EE
B03902F356CF93FED1EC1E1F60E3708856D738FF04B1FEFB125F436FBBC8937C
E371A0D8C1D8947E5922F15119483821C48D42CD5E43771D3EA83DF5D5BAB136
07800D8C62CA755BD4DD5A830E8981DDE439A159A624F509AA00801F93A28879
434D9F18D1346F9E1BE664083103451F81C50099B6386A581F0E35999A7FD804
7CEEFECFE3B038975652EFA768DFD25BC68C18F0A009370FF59E96CCFCE1E543
3ACA2AF4A4C5B95646674C9BDCE3F5DD98FDD2B7F988F101A45826096846E436
D1458103E8DC8A403D4E39A58A090171A1FEB20E1469BE23C8B5204E4422E491
24F4455BE71948D8431DB105EEA80FF03A710091B759AC146FFD5C6D0D26698A
55D8E9A64FB550CD8A2F3ADB8BE264D49D25564CC98C58900FE7F3DEA7D1AB7D
81B7266C0A77155580D64C14A2C50E77C0B9178D0E036925462071D4251F31B6
9A42C8C85E6584A8002B5BEDF94E37A8FDB5EE0F46566AF871BEF3C69D3224
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A00DE74E4990135B9FCF930B9549CFAA482EEA3C612BF66FF5E4C2F6A0
304CC43B7F56F6DF973313CA7F2D88D302245F7E76FA135E6117720C4A8B1DA1
D96939FEC52F91FBD8A43CE01A409F0F69AC3680957CA87A11C698B9776B6AAC
AD3BD33DE9ECAC8C5F45C1543307B5F7DB4843FDA77BDD20AC8BFEA0C50552DC
B5A315EE27CFD8827E06B8BFCEDCB21F577C2F98765A250D47007DE10F612115
F1B7F5BD1FB5B5C7559C7223C22EB80C462D64503B8401A14DDD81FF191F0356
40EF885679B521B76117B2792AE1CCFDFFDA1ED8F34242D4167552D4AAFA137E
9F7AC12E0CBF6D5FA8903BFA43F47098276538E94290D04E744F97B9AFAA138F
6ED0F8A363A75940940BCC2559C9FB1A2B5A78470FF6714ED29F5AB1D3D809BB
F5433C3456594E0E763F09C4AFA698F87D8329A754C766642BDE082D84318EF8
C69E46AF9937B76AD069B7A94A2EBA1C3DAAA9B441F5418A96174CD8E512F168
38FB818435EA45F5D12E235B7DA19BF89D1010D80439FDE2068615A07BAFB584
AE787A4BF35F7E9FB22225301877C43DD1CCDCD59AE88C932FBC5A9A807647F5
499483B36D867C96AB8B2E4A79D4C7B3B18E45A508435AD4AC4B714A019FC268
1CC2FE6D244C74E04CD650334BEAD3870305C2E64D90F3AE6FB837E5B9D0373E
7583F005CA78115EE6BADFE86406C01200A41BA703B37E6651ADEFCFF686657B
C41FCD1267391E12D7309D4577369160CA47D16346DA18509508FAD6CC4BE741
2B1440363DDFCC96C929F555875CE8F81AD4AB1F6C1BF62C35848304E0BD2B64
E5DF16334B1EAAE1496E69E9EB591A0C3AAE949CC55519F96B1B3D8D4DEC2282
132B3F58CF223AE904DDDB29A23B7B34747864BD3DB598248913E75D41B3029C
853C71B35A28FFB385051B0C8AB745B189FC6CAABA249CD1248F911CBA38E9E3
3FDBABF9C626C99F724461C6EA55984565CCA8CB5233501520DD2D2A674B8354
7C8DC2BF2D633DD92D6C91D6EDDB968DA3C45563FA2D2B21240AC2D30AA7FDF2
9CE9CBE79211C8F91816FD3E182A4694BED8738648ABC6D6DCFDC873525DD6A8
0AC00CD1922C301EDD96786DE4E11D29949DB4C1EDC06358F3FF444250709EAD
2B2763D9AD0A65FD9EF0CEFDD4B7B6CF3B1B55231ECFE4E80966BBE5BCD683A8
487BF1E5B348AFE83AD34C61EEA243957B646F3CD1E8D55FF37F42DE93678E01
2B6E53A69085B0E63B945F6F548355CE7CE3E4D66FDA6BD49694B7A2A7614B3A
053654020BEA852CAF6897483550CDF2AEBA62BDE801C43668041DD42C81BDE1
D31D7D1D513D969F79DCF1E4F46B98DAC923BA35A30A3665A1DA536B8FD603EE
D230F6520C8B9197EE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 28 /tau put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC894009AAE9A490E3B99E03E117A041A381B8DACFFF20F6E5F293B58B
0FAA86F132B8B59D102722B3E98E12F11EBC101AAE666271C93B6F7CF1AFE94B
5826703D754B09055EBE0A53E46EF9829C7181974A374E6AD658B17D89EB88D1
A80EF734BE6F686CCA917AA3AEF80A216B5E13C3626F2BE0093D2826CE4B3C25
90E3189335FC4F3BDAA0F15652CF8B32364DEE4C7FE174CA2219BF865BE7DB62
490D6C0BE2B1D2B889C0E1DAE9FC29B43AAA9C6A111C603B0ACF2AC6A7223A8A
3F13D96291D22B09F4D89777
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748073
CFFFB25D7C1188A40488A92FD2EA87A8A7DEEE9650149D167E131EBC361E6C92
2A9F532E6F7F85C21F704014374BDDEFB609E1EF72E87A7EA5AFDA938D6D0D86
F3813395B3523469EACBCE3AE0A271812228B8CF856DBF900704EB607E7A2698
08931B771ED1250E3866E88FC69A1214C724F830BDE997294721645F61FAB360
7C3B3F9EAA0BEA3074AD5A6EC578767BBE4F591737316A4F657DBDF2BDCB627D
C99B501F212C04DDCF148251E92337D102BDF46C4F598030F2E7121F6A610D64
0FC7E512A28BF6CA72CCEFB6270BE052F658087D5C67D702AEBF0B842B5B970C
C74AE8A08E28A3804934FFA3EF4A1695F578ED2A59D9EE46F33362634F975882
7B199FD078B14DAF0BFD6BD22B450926B69A090620505014FF932536CFEB7A1D
C6A7028A0ADDC43FA3076B2674E5A540B44DFFFCBF4181A86F0A4BD25C3921CD
2BA8360EFAB28614E343A4E9F8E511A3BE81417657DD2CD6783587B4DD60A9A3
E8FB1E85399BC5C251127B69C42697D8F40DE08234A7E36E96718669B1A78B7F
DC69C8BB5287F3D6EDAE7FAEE2F2A8043E9FE3DE20883AC911EB876DFB2E0C25
D8F805854E9147FE4001F1AD9BF7CB10080ABCF49DCAABA733F5985D8C87F648
4564372CC0E8DB1233ACF08D07C65F7177880587E359987313CF63EB9D3FFB26
35DD328BF8654E275440954271BCFA1AD9C73159AD6E68834E360B2E79C2752E
E1912426725A24ED006BDF5D6CE5AB4B33C724DB295EEB26F5E8DEE5B94BBF57
E976F21E87CF81405E816E296961D014627A537DFD9FCCE9470EDE21EF2BC98F
123E7D5EEEBBEF933766E3104B42792276E63BB928ED1CBBC6F5B9C32709F8FD
BDBD3EE782FA4FD49BE91395B290E712D52AFE53AECEC34E04717B87CAB6E46B
58686C8984A9BDD1DF3D9B95D34D66C279EE72E75EE44123FE1CD53846D377C4
B456779B914212E5CDCD937E40268DCB704A3B67740C9E3C2CC6E209ABE10DA3
B8F6F29D5766A482FDBFF248C0CC2C48F57E2E39E7AC729A06BC61C9997A1165
6C9EAED18B14F7C82465584E51EF9B79515FBEC893E422D4CDD23688F762757C
0FD23FFC5B86ECE49BEFE44719DC90D25B71C47A172339C61540B66090C3BC0E
BEC1EEFC57A8D71DC4B065208DD080EF2BE3CFDA357B67296B1BA24004B49936
7F9BFC51FA658C5D33EA1BAAE4AA60AAA99E4BA2EA2EB41D8C726413A1E42728
B458E05C389B2102D4F0F6063F518F4B3DAB019A4EEC3F455F8414F171FB64FE
95897FBEF48A1B122190FAD568373F9ED05AD04CC89027424F46C7B60B26E429
EEF27CB7BABD70314CE676E0681D2874A83C6197F9CD4976C1B5A53C281024E8
A6DA2B8F3FF6EA1FCA26D085B01DE0C280DDEAA649282074DFF0DE6585E5F1FD
7E876E744631E1089C770A0B56FFF2D9C43FF3E45F2EBF289E2457A3263C8905
B072F4CE5C89BEE7A792C6F1ED8796C43CDC7418ED1670BFDEFACAD0065F2693
9397F3A95D00F652B9610DD28D78E95C9C4375DA56CF82E97E8EBC912C08585E
1971325BF6F347400C9E57AD01C2DC6901C7A8626891881C4CB873FE3F09DFD6
5ED2B809288288F55B17581296567A79FBAC4AA439B97FD101F851FE199B9DA1
65EFF75330535CED6EB90E7C44F7E337B2010F8761FD84AE042C43D69E6A3026
7DBFE46592BB04903129D86C5EE37A1649CCC10C2DC42544ED16BF7A1E616392
A371A7209C437E858F3EBEDFEFFCBCCC73B2717B7753EFC26BA17D7909E4A963
7E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFBX1440
%!FontType1-1.0: SFBX1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1440, tcbx1440, labx1440, lbbx1440, lcbx1440, rxbx1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-218 -316 1652 915}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA16EADB32842B6D00C76EFC613FE56C
378A7118B0589B3EE5425457AE310AFB3829876138A59F58D965843B709A0F4F
D1AD54875BBADFC803A755669491D9E98262991B9634084E8E2BE46EF805B219
D18DE35ADE9A8DBAB7AB761864BFB6A27E5B421C32CEE4569624D9308A32B426
FCFA5CEB883444393CD7A58F9CD522BA73E17492DDABB7E00B2F6BE47F585EB7
FDDBFF33F1B5E5465287717D1580105BF3929C09EC621CEE9606EC49D7051A00
11935EE728A2FD47BFCCF00C93EE54910F77C1CB8622B9CA129D466746BFE1B0
594A9F0C785F6CA67161EA1480AD4EC6781B9CAE9536F5D3AC6D447F16821F77
AE2705279CF3DF4E1E9AED81A0CBEFBD61808E2D59AD970264A5B66D1F399DA2
55BA0AAC8EF1A1E16FD8240D577F5E00E0040EEBCC193F074FEC48DF30882551
E23D64EF84283F9640AC5F60EB1F26CDB79078AB0C0D97D1D6297D092380D4B6
6A2099F06A513A78A3C3B82A6DBD985A0DCED7150B19FA42991A3D408FF95978
15D309AACEA8C5C0AE812F50330CCBF47B4759C550D49173127DECF05D783DB0
978A366ABD3CA7D9BBB6652459A5E19F9630CE75C2BC7BDFBFE0EA3D8098CBB1
98CBE02F196C0A0C5E976DECE72778358CF8D0A79A8B5629A6322716CBFBDEE4
934E8782E716185235712845BBD03896BAABBD20256DCA63EC65837DCB8FCDB2
F7D9510BB613A61AC18E9BBC5F38A28D161353E9B1AF632B91931ACD4009C8F4
9E83ADF4A7CAEC0973D8E1E4C126654996814BF676CEEAADFDE26D82BDF7B410
843B011395D00B096DC3D60FC106735EB42BAD5C2BDE7172C018B7321E63A82A
AD27D18847CD91476517A40DEE96603CB5EF8D5CF03997EDCE29D0A9F6BE0C3D
9636F498DE4FA27632AC5B407B53F2787DF1D113F94B000D43063E2E16F431DF
3C6A7F5ED1F9FFC68F7FB8E6B627DF2E049D234AD8989A6B011753E4DBD6F4A6
1C6840DD45D01D566944AFE0AF536893B02849B46C2EE9A510A1B50B928EF40F
0DD40E215B8BBD40BB58CA2BEBD1777A11A604291E17DE65574A969021F0278F
3C22A105CE53D3DB4CA5848233A91D8856B291A7FF97F1B6024C548364EE1195
44CC5F4AF1E2367E46F058310D3B1A08671344A0D9C0254286D5C66899FB2EA6
BFB56EAF9A0B2DEBEF4034C031E0EDB2890D3E5945EF265D6DD27E4523CFCFD4
6E3EBBC2DF3943D11F3A188AC3B95B42B22848D182C8DA6CA3CA9A0EC9433AE4
A9080A7026E83223783D603659896901BEC8A125C54E03BA14937712A4E0DC4D
34675FBF8A4163D000A15642FD37D1338403D80EC239ACEDFE77E2BD4BA97185
1B152DC603F1534FB37C2F4282AF779897C3701122973255580D1839C8F771BE
90DC55515FFEFDF1E30B033E1ABE773CBC3661D002AB19585E03636FFB1955A3
5FFF59DC31336087F5159EDD4BD9828C28C5F16969A59D638F40A8A287159CF7
C8E5D8603795121827DD00C71191783059A4A9B9E5B204745C76D00205DE4649
A7A00A35324AFA8E7B0414EC999104056F3408F248973B6DEA4771EBC36F740E
18FCFA29F15AB776E8000CDE2F234B174D8B17FF27457D09F349C31F4C3BDCD9
EB78E05283C4498EB6B53BB8522D1C366FD4B613CD94A42895E4D8BC58DD3D51
A3493E9D165F3ECC15546693D9372E35F37315E6CF63B4FD224F4DD35D907DAE
068C755A7D1DCA5D48C9C466F6BDFD75AB0D39324BC14C95C4838D94157DF999
DD22E92290E6AC7243F07C85E0CE7774D56D14A7135D63DB186C9EABC234EC1C
90BD38CF875512A503C07967C68B956EEAF9E206625F7AC20D4CABDE0D614BC9
F16FE18104A7373F8820279A39E03DC0F2A4C65A27AFD8D18CC2BCFBB1AB7776
D85E4213C7D27CEDBAC9BD9FA833A2F9E4F0C5316B02FA720537B2D078A04914
32D70D1417541EA6139091304AE3CAB3BDDF12362C5E81BF78DA789AE24C1F8C
3544E0C4724D95B3F43EC47C991EA721964E9EBEFCA6F34D79C33719B9025276
D747A7468715CDC60F6EF7CB94706CE2536EB7AAFB312BEB7AF06E643EBF56A7
2088658E5AE6F63445CBEECB3D93A60D7418D0F1758078BF655B00625D18F8A4
B9CF0330C5E6A0EECBC134F48EBFD7AE5F7D3926CA6A8DD12C7DA53B2A5BA2DF
004E1C9EE005F24BF94F48BEEA0E9538A6DAF6921C5F3881436FF0EDF7693A0C
797731BBC7A2FD4637BA61AB3C46BD22E4EA8EBECCE7C7A014A22BA5AA2424D1
C7C0B46FAD51A5871398FE31DC936BE47BE7DCEFBEA1576C0730EDB15F6F232E
9C8F4A9B31248F03AA07329268F4453164A8A8DA43F3A7148BCD13A91E54ABBE
389EA863F330FE0B68B6DC10555D21EC72DE470B6199D5C77D0EDB1DF48D8E40
7F413F2F04EFA42029A4E4D84599E025F8010984FEAFE71810095C85461F0E26
0E4872E323457502743C5305D7D01844E7A88DE9C218A925B3247EE13CC02D18
CC78F0E5C6CDF3ED799819B4786D1B2FB46096A7B43CCC37D57268BA44259F70
2BC5D3CBDC9B319CB02D912D007543E7834FD4A5833CFF2ACB26A3DDA7E5B6D2
B7A0F60EAE33EBE378C0EA28694A11EAFAC9BD0312AECD3559A846990DF6F2FD
C77EE6E5274D2E530967829B3566B4525A029B70F4F099A2D1D7F775BB02422D
B0748134B6F6FA919BC7CBCD9F9983EC2F0116DA051E92348EA60512975B1B1D
F14DEF91BA3BA7BC75768F94BA236C2EFD3722D899201C1E703D35EDF9B5D346
66DCF2F45A6D2A20638125C91B3ED136B5F052F0306C60DEFA44F616DF2BFCBB
6140C6EDFC405085FFF050660F516E86720C265DF0045885A91DD6902315A998
E1548722D8471502E4E237722DBA58C97A2F5621EC6DA8FCB73FFEA7EAB05760
CCCADADD0CC427DE64A9853F0BE3B3E707CE073EE8631AD0DF0246CB9BDA71D8
6AE3131FC9786647D584035A523CA104E264A51770A7434178516DE898847F11
D14276A392AEB452ADB5D7FEFB9C0393FD09BDB65203AC151FC7EF0EE9DF6132
D3C10E3E3E999ADA042B4D5758925A0E7589A1910D15EE5CBCA7E3423B5DBE3A
FF14C2DC44F86D3899BCE5274F718632B9157AFEB1BEFCFB76FD32513EC40DD1
8B0BF45E99D272B05B8D5CC705E91644DB1EA96A22D60D332092488BA836CE40
1105AAF98F570C68316CF9BE9B548A1D0CE72227D5122D137D086858B74B0B9F
F755905EC9C439EBF9EA7E0EDB33951AAB8A19C1C03F5F794EDA2BB78E3E1A16
626EBE12124FDFD4C36F3016A66EF8130717C6B0E1C9F7328D9BEB3B257A0B0F
659F4EC8A6C20556D78242D98B9328395D87BECCBEEE85C378819BE5BCD1A1EB
74E767773F2E32BF5153AD6577AEFF50837B89D74F7872C976386C425231AC2B
8A64AFC7CDFCE15C725DF295DAA85EC736770FDF7F1358213B1B4DB2B2F16DEB
8E17D616F0F3B2E2D9AAA08EADD2C9152F81AC5AFA01DA84C0E0258366D4EBC8
68C2693C9A5DB33E1DB68E44DB7D7018B78B784B2DEBCF0EA68487B1F498304C
6EAEF04502501452D205CC7A0B42733EE2CD484E3086FAA0609C95FF30CEB3DD
66C24C5340C5C84F788724AB4F8E511D0E4B9C2EDEB167B6D04B6F0324CEF9A6
A551C2DCEF71262C9499C3D533A1F381C5C6F8D48F2D1C7AFDC0E8E96E1BCBAD
C806EADEB96170BC42EC69127F401161E37EA450E93EC6C6403DFF0AC040E46B
C71092971962D004710A83360FAB475302F6D555E6B5FE1945FBDC98BCE5F9BC
811ECFB42A49B5887AD4D12DDD7B90C227F374356AE341EF6E5AAA15FF93F953
BE284C4C920E0FD64145F006BF7BE9B239DB56C999937CEC419D331D717C541C
D4DEDE33DCFB854580C4E2F368DD836DE55A6DF41DAA838EAD58552A4E9644F4
CD162D22F4F0FFEAAD16CF75E9C06B9D593022C5BE06FA75C5FA64DA805A859D
2D5137F330162DF7325A9498EA3B622322C457EC6685BB5F8FDC46F8C48F4DDA
1A1A2774E6819F68133C18EAEFA24E7BD24DE5DF820F1C4993636C03E483A80D
47A482693085432B5CF4EDAFEF5C81AF3DF3C8C65321DD0ADD7ADCED301204E3
5E4750FB3E774173D2177B26A5B10AA17501D61827E6C4280377C63A1FB904D6
DE0A4112CB06F622E8D4903ED1D74FC27BA16562A7202BEF1FB6302D4DEEEFEC
BF8FB030C00192BE2C496CB4EFE7F119AFB4E31B4E6C689BB54227FD7BC1FB58
7D0FC2CE22C34CF790551D1C46AFE2BF649E636ABE466E454D0283F75C864A8B
586C367D2D1DD78D1B7A61C739AA118EDA902C66A1019319E3096FD8989FC5C0
93A821591D821A55634B99CD57715540308E63E0B51D40B74A84403CBB0D9E99
55638DE8B7B2551639DCA89F516CFC27CC18C1C11B96F07B786E92070292F9EA
CAA9DB8D45F1E9CEEA41EB958A3F267721D6D2D9BA1B570EC5B7EF5DDDEC750F
2C235D47F459F299DC7B31FEF7202E3C076475AC946C9E0ED1045EA4A285DE69
89BD2AE8EA6BF831DB6A5684BE064884E525CA3D66A9AC72E524ACA65CE48003
81200CC97A0D090E5F37B5BBAB329517BD66D9AC5B01B2B01B289D953CEDE6D9
9892C5455639BDC87A6DB0C15641C2C93B622123907B4E9050E513A9FAFE2DA3
6196DC83D1DBEC62F3B1DCFC01BDDB016ADC9E9E466F0258ADBA095A1C3BAF25
E1DCCACD0752B04CDD6E6D89DD6214F6DAC9E03D72DD68DEFD049E025FDF37A2
92E60D07D7D0A3D66EBF753DB70B2A2134A7F1095E43D7539DD88E1861775182
A02A3BE10649EF6C74CEA7D775CDE5878D7C349F6A296DAE87D1C44A580F7A51
0AB0FE18B2F8F9245A74F4E39998D69F8AEA936CCBEF4183749AFCB1DBBAC85A
8C373E00DA7F4B100C6B2140743993FD1C2C03E9D5A5056D778888DC511966A4
FD7DDA84F1DB93DD6C37FFAC135DFA4B651FBE6D0BD114581921663D3845F28C
88BB102545A41129B5EFA4F5C59E4FBB5779A961763DB019BDEA41F32B1C7DED
1A175583790C245396EC83A61C715C77764725226B79D2B9171470D2497612D3
82FB91E2E37FBF1F1E65FF2067BA679F0E255E2BEBD1895D65A9226E25B5EC0B
1550052C33033446386E811285642534A58D7FC580C052DCC6C4F9081FF94311
332AAE28B23DFCCFF9B1C705C18D993A8701DEC9254C93CD40477F32573BC70C
FF88D2DAB89BBF6CD2C9BA57D81C9F625DF20CE988491CA69B87CF2CCFA3B394
366A43938D178311559EAC37DA1CADABBBEF72842C8A882CF268A59BF776D381
F7CB84087024ED123A69EDDA48A63862399C265011A5EE53295494C3C1006602
8CFACCA0CD98EB6581A50B6A672B32280455D7CCC87ECAADE11CA795321CFCB6
F3176B8003D24BBFA7E2D95FA1D83886BBEB6BD4FEAC5861C134080D23859E73
88FFDAD128AF83001E8A3C6E1D1301EDE8F3738DCA60ADFA539202BDDD3CA406
53D35213E3F29CD7B63E41AFE5DA440F8F4DF34962C7154C219881ED6CCA71B4
02F789C9F21F48CC7B155976DE96C45622B48BEC713A3D1DAF6E554B3B93C0AA
FA7B4956151DD2B3CBC2A482BE556600A300B8CF4ACD3DB58C030D558567A043
93E462A675AD5B452603BE89E0881584045E4AA5814897382D39C4AC19482CA6
8151B2A144319FBA9047EAC6E9C72C65E6F1E3C7CCD144507CFCBF8C6BB4F30B
4D7F94F4B4DD1AAB6C22FC9BC6BEF927062C125BB08B9A0906330212957B2F48
90C59B0AD3A5156D364E315E7A1F7BC58DB569B44E4D9F3F26C231610AB97943
AA1701BA63E0B1937ADDAA6406ED2DDC507FF713ACAAE06FF9882F2D19862612
DCF6EED1968B1B5580ECEC39C023DD8E36C09EE3A882D4BBA1DFD8A1373B617E
06110E9130819D2B39AFA579F91F534B15A834358E78AB4F18684E8807449B0E
D3852DB08089F310D5A5422F4965610F41824C215705C661301728B3BB5FC07A
1B70FBEAED00D0B50F39CF6B65288C973DFF2C16E9F72E32DDE3E09D2FE20FEE
EF35A0012360EC5FF4431507F5C2E7376B7BF06321F4026AADC6D4D2EB118A6B
C86894E6FE4C3581F7F1AD020DCBBA56F4C85AE352E16B99FB510447671296EB
596CDE93AA9011418E1D967FAF84E781AC9679B557795DF834956C7787AC8022
3FBED4CF2B0DD20812D5156D12DE4CCE8D16FC14B3547425E7AAEDFB19660633
21F5AEC8728A5DFA08D11A842E751568F5FE3550F5DC4A4776D464A72D3548C5
EA91431758C0A49C285C168DF1F6355DBCCFF4DC74326140172594A8DAF57749
A925E0B642DD23361422543FFCF173033D885B728A4482EF4BB9665C6BE6BA41
20BA817AB49AF22EB181BECE6EB1AE24186EBBB899F1F37F71930C558AAAC440
BD7E5EAA1D903FB2EA670BA7EAC1355C7A8D2EB1B53941ADCC68DD87D99A05DB
2F046C66FB961F688B86032B8214A2A47DFF9A7F01AF160394A46126302277F7
0BE7A54E790A8A3FDBF8F1AC201B5326F375B663D94D7A378CF26E8435C009AE
F7187295EBD56063FDCC47019E592FDA71018123551C2754F028076CF4C4A6CC
D970F4E42668993ADB0DA182DC7C205EE8BABCC4D3B59376AC64AE71ED4545B0
7C52EDBBC017889F07411C31D0F209FAD8DC3D2C2FAD975C89DEAB698713943E
2688FD5325563C83BC69D6272A06B996C5E600D56B45FF9A2DB58AEB30B5BBD8
541D72B9E0A4FD56753BC9B1D39A97CB6F6AD8C9245091DCD797FC40EDF842D4
5EB51F2BB650646F5762B611BBE6BA06A6EB5592F50CBE13B4F1153E4E1481F0
AB17909E57392327D1AEE28ED948BEA12041F7030D2A06C44FD267F5E2E6B990
4BA52EE91D736A70CC3AC65ED5D5F2ECA92F53611145CEAEE80B1BD550174251
691E4207D5936E75D5EE119A661DDA657E173A4BD95F159BAF2503A367185007
843A5E0713DA04D41802D11CD481B810BD1AE9ECA2E6CC0DA85CB0C1C43A4195
6A3D3D6C518F6D29B4BDB422028061F5D309369B7B57A42A708D1915DCAC06E1
FAEC06D3469E715E26AE66082B43864A50D37AB6422DBB8D45174D5852CA2476
69F6392AD03BCD9CCFEF19336B13B81B363A7D885A9D369A03891A8B57D8DB83
92057BC23823BD70728FBBC14BB74758837ECB82DE000F578267137866C865F4
E8A0F9E54476B4CA350E9E9CB057A5DEB2A5CEF8D20EDED866D4FFE126BC50BB
E9FA74AA1592B2C3EB3FE52560B917F882EAA6250715B471F275FC0E78C74692
1E271D7325CA6B611F54314D89160570375556076EE6076E5212A2A2F1B60EED
FDC6CB8AB486471C3624FEB31005B8469BF86FDBC9BC4015422C6DA9D1EB5496
889FAF06F8D889AF6148B60BCC727F96C0364C69DFC0AA6D07D1BA23B4C55EFB
EBA5AF7C041B52A0FAED2A6CB461A9D43E9A7032B94E346BF811FEC16BFCF698
B77B184833342D0455A8BBED700E8131D312A1EE480B27EA9F8F5B89C3D39C5A
CF3D4695282876EA17BE70AC6C1FADE16D67206C7D148B267890AA04689D319A
E8C4AF100F1877728F26A6C3A8A7C171FDB020040175C45F07AAB29320B06FB1
AE9705D803EC618F46871CEA2F617D7AA53F09817FAF84983CE9C3CCD3A5A6EE
68BE184143A92178834CC93E67DAF5A2346F9A9129A645176E14135487F4B408
95345FAEA6B669ACE727C3BED25D638B4023F2CB37BE4BB58A45B8254494C866
3C6823FBD4D1517A9A36ACE7B2E2E4969BC3EEE7488A9BF555A38A4FBCC99D5B
279FF0079B760BBBCAA56A6D192A347B6196B06037037E793A476F0ADE432ABC
8F6A01329B7851BAF866E2C2F7F36492D265A4207DF3561811C56D78B9884CAA
CB562DF00114EBBD583D2BAE64057FFCE317F53A07026E7CF8FE7488F9FFBF71
C893C92249FEAD7E691A200EFFF5469250FF6C1483C4520C5220D29BB99B3564
DABBFB489A5D5A107A4BE3E971FBC2B126973109E5F84F9138BC24D1268D14CB
AB5564C89DE944C25FE2E97BB45239E6711402EB039853AF473644D538258356
B01D37BBA025067980736F1E647F99018C117DF0B2BD415687124E6B1EB46F83
75C52682564A0B49C1EBD4BEC7AB7E59E35004D88ED74DC91DA2DBEAC55E2020
FAD0CEA4924DCCD155655633F02A295D7FF4006B528CC250D3B0432DF191F734
CD987E942A0D293BD7CBD846886EF1FCCD9D394C96B37CEE6C6E682930180D8F
700686C94DF87D954FF40A24FA21A2EDC0D22D26FBE34743B3DE5124EA15EDCB
CCDF3EF721E1B33DFA52C00E7E9D8209061B2554CB6D28CA946C1CAA6B8D1CAF
DD020D7B2197A39A53D62B21CDD85553D0BB8F00C312FE571AF5CED016146512
2E9BD66526CBA209B10F6E6F0B69FBCAD18682119E8EEFA75E7B89A3C9E43DA4
DDB5252D1DDF35FB1CAE496DCC75D509D55F1710BD60B0A8C79EA200616C052D
8C3C93C0F5C9580B3E2E711BB78A296B7DCE10C7173120E3049E16BFD6F46323
1A835770286A922E2757402F957A85082417215F116E539EA544B12F9375437A
32CCC5F6CB39328ED3223A6D26B84F9C47866031BE662CE741EC1BF41ACD72D8
3DB06BFEE44785B812D8B5BD126D2F0B0CBB1541C7CFF1D59BCCD4357C7643F9
5465EA98A93F94B64458508E6BEC94FD87729A9183A1607E7C413077408FEA52
31FC9E429FA7D0E5D7B310F54F82A1A3D214AE275BAEA4614C3AA51976290C34
C7B6B747685424B92917793A90FDE9DF67FFC990278420B80E8E8B721781A112
CE6675C83AF124906C1A1FBDD41C3E5180AF2DEDAD43518F2F93D96015C1FFD6
58DC96CB6C94149A3F1F73D5B23DFCA0C17CFC605B82B2D44AC5AB06A3751988
427B8502562161091B4EB20014A622150686742A06722096264722C4B617D102
03E7013043C6E54C407656EE331DD406DBFB54EF400467FAFAE29DB8D4E2E270
08CE1D6544668A511FEE990DA3A11224FED7BC881F7364E73FB4D364E1D14C3A
28497A81F868B7972CF270BBBC3F1B4162F631BCC6F890EF8B690D8D465CBCFD
4C333E2A91F00AD68C53CE64B62648553A7A28D609FB35495ED5A49C49FCD5B1
F03444A2D6531053282AE880CA1A0D2EE8C08C8A4F7A708A91B995030B1BF1C1
685FF5374BFD88728D95737188974BFEBF70AD9543A3ADBF9262DA574B7188F8
60A231FF14211B6E5AB19733BEB62F8D1691C523B6B445208E20025EBC73DC6E
CD4B3CBE21C54C87637B7175B9F288208BA01EB2D2192FBDE6EB1E0EA25D2867
874B85BA95E122E70802C43F5F549BC9FF036B9C37138121C4DB2F973E21025A
8F0420FD56C9E3D03F67B2EFE6358BBC5E5AD1C2AE645AD70F07883261095DE8
A983F2FB30C2C9CD23CFE9A01A477E2B0625D9A6EAB9405BBCC3692385DC7109
0280B0BA2916F8A6805A0970572627F63A21707DD967B3D3312638879F4A10EB
F89944E4EFFC2FB54B3E821877E4363E3D67162B98B0EE9BA9A30D2BBB00340F
E05C921096AA94493E7280D32632B2B0B608259CC88563199A78B0B510D667DC
85D022C9DDBF49940DC87B069F3B43AA13EF3D39323977970C3B22B22C5C6050
F61800C9F578302026FA323F073FB310D790A66BA0C12104F2031D0A51BB4443
6DB06B233457657C0E6ED90F98285AFDF36D368AB252A90256D81DD961C54282
A59F17B6ABB31C1F708BABA1C0C345473F80CDA52DCCE609E4E94C3F9327245F
4C460EC33D5A2EC5ED25EC385D5B226920C0B6E421E5B70ABF66CC0A584F6BCC
0F662D30889C632D5C15592D9AF30A4F755032B476D8526C88F04B17B5785482
A577F821C524114991DB61CD6B9851361DC744F48F94000FDB5AA24437978F5F
BF5CA18BAA745FD9676B935B433167DD4D47E1891480AB667E31C85732908291
B1EEE859A2E5B7D7E3E09D2FE20FEEEF35A0012360EC5FF507524304168A6009
4B8DD6181DD539CB00D0CEF1285B19EF7177396D3F67820481181E87FB9EEC06
78BB130A1CC4D8725C47D148DC463E5F69B2132E235E63005CD57098D65F3BA9
869B76BFDBB5D6035DCE5B14F0D282DD165974A8C447AFEB06E4A4AAE9DE7E48
291139D7416C049A4A61DF84FCD8AC2B83DF3F0FCB211643BACD24713CA18F34
E8B4C1C42FC495BEBAA495745652ECFA0FC17D4A08724F976D689AD1966D7C9F
A16C4142637F9A65AFB4F3783C94E3986C1F01DBF37974B4489B96769806E717
8C9A6EA3E2E6F3DF2E339944C1A81F988A6DFAF898FA1324D3CD61570ECB195B
87CA96E2E00C8325BE353083077C67B980DD72D4849AB5B717E5AAC597C3D514
037CAF2D9B1753B51FCD9AE210BF2E941E093A534D94483A58F98EC30A70A343
23D56D124F73FF91CFE520596846F52DA6CF3898D3DE82CADE349141E4BC20D6
122DF30DA0D4706EC9DBE3AFDEB3C34A51779C4F59D1047EBE0D2FBCD07A3F7F
610A57748B42B3DE731DCB114ECB13BF1DF7515CA570A1BEF3DDF1175E3273A3
216C8D481E89B0FAB607ABD3BACC79739D07181FC39871EC8653EFB4B9C8B9A0
EA2FAD585DA756D73E4D9A8A395AF413C98357760C31F80BE718E661E6286953
C83430B3EC4967EA1E6B9DC0E8AD3C4EE0034376989BEFFF3B9A7F573A621694
8D67EA6A388BF535FADB80CB26FCE9EBC0A4EBF72DD1D55E03150A34E227E052
E0F2966C76AB5051C8ADC17DE809C66A71C436D10D890EF4714C6B4237A5C893
10DCFF7AADC801637A838D254F43C08B7EC7B79464F66CE61D11C6C8D13FA5FF
F9F1BB34341B12F8E56F00673FA8F26C8A5902F5B49352F3B53341CDC8188F2C
A2F6EA9B66A842E1215286E75BD6CC5E11B3C984863DFC3B57802E694B71B195
0912004697DA8ED586320141BA36D683ADB2951887985FFA1B7A279D43F1DCC9
10B58CADB5695994BE6A1762074169263D43A02C16F67E46C2EC172858409D44
2D2BF27C2D49F005CD4403ABC39F8ABC8D9194DE7C9CE10CF560A68CE5BBE9EC
90D4EB50FF848D28E81242F2BAB2DC490CD3CC8989DC7B0106222BC7E4447566
9445A71FC409298B49DF1F338B4F57D32072924E4113632F125938C5AB9CA320
BD30EA9C76D10F521652643CB242CC43E683494C5EE74F40D475B48A28EAE9BF
BBF2A42C2ACD8A06F2994F37B3BE9D2BE3EA57460159C7BA143BDC926853197F
7BF6792C4576D24A193B4192900FBDA869DC79D8039DA68E8E537444EB069A27
678799F8DE2997DEEBEE1E09D4EC28F2ECB2674EC311B9A2CDDD2F4032E1A05E
9F445A56FB5838C01C595EE7FE0A326BEDED7D3A435C530ADF039B402213DF9B
B2E67AD9DED2E393368D5B739EFE36171714D0123B4C944AA861F1B04A02C6EE
7568626D4ACB75683C6E83954E6F38BE2FD18657468D70540AFF6D3AA27FF6B3
F60B6188526477262FDF02735CB83A90D681246D5BD0A10A01BF547EB07770F6
0CD66DB734E98990A753D6D316246ABA2CFFC6423C5CF357B1722B726784FBD2
E6F85418C68FC464E7387747DCA89122D00D180968AD15C9CD025F535EAB6B05
A74F5E0EA477924D5DB46857610BA02897083FA96A6984E73C21F2CED5C43034
2CDF7EEBCDF11BFE38A7AF80EAE01E6073F677839CADC4D8588F0A756250CC1B
4C8D3ED348BEA2160148FC3009AEB568646D73139CF18C511E554444D7299E56
6AECBD1AE56BC635055D671420BBB25F188BC8B836379761BD8EA30C1C1C4154
232150053C97626D6A6B4AC0B5F1DD9809395AA7859E159C3065E4988377A5E7
8AB435FF369DE439119194010DB7DA78ACEA700030D5D656CB94A2A24CB89FEA
081BB1F324605C5AF7EBC195AB879700F41F3591168B49FDB2684FF6E5F9C9C7
1FF006C71A5CC03BE2C797486DA8909AB9247BBD8752A46D29C0ED729137C518
52728F28B72B2B1C71DCEC9FD56FDFFBE7EF237AF51F2C7823617169DDE51DA9
15441A8EF1D0611808D6B41886CF1B3CAB77C3F1B981FB2470782B5F384BE7EF
1272DEB404026A9CDE6E0F487587E20FAA9F6BBB093288B921FD56794F20DBBA
2FD429256C5B1ADEE5473942F62862FB98F472414D34523E76DC683279689429
15EA00436C24530B685AB331279E51CE85FEFFFA4525450D2BB9B9529C02D9D8
04FAA1D2B931799EA5732E7EFD2F6C2E6DA14E05E3DDD3F27AE0CC738C8B7792
8417F922F0440F1A5DF13160EAA258ED8F8B8D8527A4636F2F34751915954F80
BF04921CA3A13C7D673267D49C9E13A39CD6B9E8FDE99D70F336F538711774FD
641BBE51B7768E184EB4A5F38B9E218146507030A6989B08098CF1D0422BCC48
133FD05A2700E44CAC011E6613EA41A0AF6C383D71FE63DEF7A23FD4C8BC2EF5
08C77979FA2491D014A8B8EE2DE100ACE2BBCE587AD476B8D2628419C6A3AD10
C77FC1857387B55A98EA3AD9C4F115A523D3A5542948BFBFCE0C32340B066644
3F9BC075C03EC401AC4E51A3E95E4786532C068F3FD7916A075DB3F776268FB3
8BD0A53308FB3648C34BFFDBB0E9FA9D26E405F52EFA1E0E051C59CF68DE6B66
B19690814A9B1D5B96BB3B9DD9CEE61D9CC1543ED861E7454DD8761FBFC94044
57F583E91B79EFE22674A97BFE7939D10BF76945478A3DE18835DC14CB930B71
8DB706ADE53AA064ECC84C73B6FE7B0336D2E76AE6945DE49D149F4886D08431
9DA0DCFDB137A7162403A706365884814229FCF3A4EA4D006BA5836A703A8EB7
23FF1A705288C9C470B2A1D4306A9E18810EF14CB7A744B6EFDC3DE0D7604F98
120AB2EEC26ACEF918B8FAAA92C3F9C7F311B5ABBDAB4AFCBC454DA35B40E2F7
26944D3E6A59E2552A1D60361FF394CCC7D90397BC13BC5E7438507F79EBBD09
E29886CA7B32552FE3AD8C4ED7C4FC46BC7C6C26B15D3C4F23B64F44DDFCAA3E
9F792DB8FD7934D93E2E0D69E0412A80150B03F416119F865ADA9F800483B0C8
69921C1E0C4F2450A394E1831E8A6496049170CB9FB6872A2D3DE409D4636726
98378C933DE725A15E7611B865EAB13EEA3FE4FDEF4EE5F6A7036640851C2B88
C8D97763CF26F0A75A7A878D2A7B2EA7A9D9920801D1CDCFBB31FCABDFA4C2EE
DC586D821E323A66308A47B6723A42850E982D1C777374A6A6DAF02FC8D6B651
5D5C709B965EA111EA32A86A858532F5E47CA3F61E3C8710CB8BEEAF5E104187
A3ECE907401BD296AD4A08907A6019778A41F74459C3CFAA6F323F087807DE7D
294701F5AF35B7CCA59F0170C814DFA3BAA315B7A4FDFD705224CCF06C0A4235
657059E82B63CFCB6CE69214873733C50B6DF4DD1FF69E308D7CC0705021DB27
1A4E4BDA585F05F4F6A4B172567AC7C3482C9BCFB5AB8438C55324AF2C500EA4
1C23E8BD6720C331D00A2F59B132408029AD0E92E2389DDA4AE9EF1E6FE13B20
5E6704BE1522FD6F0B94404DDC0164360E5F4BDCAEE67E11584C5D75AE385885
FEC5FB53E8DE73384A4F2798B2EB8F382FF20483AF8665850D7082CDA8D8BD50
915FB7F586D8B990D8A2E12999FF5981BA7B318FE786A3368F276D06DA125E0A
182CA3338B74A68ADDA0462684F9B24E51B51EB31D348B9F58E4D10C8B6975BE
7864285E3436CFDB4EC95892BBA3086CD279D2BB1AAA843441F61DBC602DE012
8594DDC6726C5A404D14F28B011CAA48F763BE3592AFBE465E1DF5C862746CBB
4C40EC1C641BEC69FC4E73B153E87F88EF24CEE80B11E97B26A823A442379232
9434B79813AEDEEB60A0F26771BDD74DA9577AC7D258ED487711BEBB7E87AA1D
28BA8BA1B62927C6A825F2D013F348805F6F06420F23FCAA2656B708F81C594D
85A81828B36D66517BE188D2BDFEFF0D67F884C9D1760E310665E589D230E6F0
8177A698B7B3F05FE343648E9B198941CEA17AB8FD7DD7608F5110A944298BC1
60575A59AFD663EBD5708A1101C666D45D6C1F2260744EB8D839E8B4986F96AD
EC8DE26FFD7B48ACB6C40DC64672AF88B8B46F473EBD9663F3D537774E464DBE
9576B8747B2C537F6563EA7B6E812F989AEB69C4BF5E47A71DBA0C52674367CE
13FCE4502FF6CA2E0EBFC9F33BFF3A780BE11B0245DB27F28ABA40D87D3CC15A
8DE055D0A680330C9E4ECBDD17982C9151922D02C1545A0B42AA5093D4AB54AC
3DE9F230299B6497718343FEC7736A2EF278147DBBE6C1982011D3B56B538C0A
47ED4B1C9A86F48535BBD575B8B5973E97DFEA38293698C8761CCE965CCCACD6
FA50B7A8CCD7978814F0F0044B7BACD52ECBC1840F91409719F58C2F8E709A4A
CC1AAAB5CD4844BDA8C51FD06AF6AF8CB7CF53CC8A4D534B9F03188F4EB827A0
3DAF52F8507D4B7E701EBB6A13F7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1200
%!FontType1-1.0: SFRM1200 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1200, tcrm1200, larm1200, lbrm1200, lcrm1200, rxrm1200.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1200 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-185 -320 1420 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF049F26DBA77FA20B6513D
285BE588908C3BAD6A1BF20F213E587F1372774EF31D66B237AD60712D60BCFA
83574CC5F88A6B4676356ABC2DCCBA498F4272476923789659CA8836F2FDA94D
38271FA2CA8B77D7099705602FEB41085F6674B7AA0DC588C9ABCCBD9115601F
CDFBCD7A8E3CFC8B1E718E576254F5F05FAB25DC253CB561EC3604749243AED5
76898EC99BDB1760B0CA75CEAE3FE6FFF1700F64F585BE9267ACBD5F155F3122
732792E17022F23B1F46FEFB0696E5C2B78DE0479F09B6512035B9C488042B62
98525003ACCAB6C8F36BBDDBF6E82F5CFCCB418706BBEC1D4E42086E70847405
3ADD1383ADD34574F2C6C64907B0561F107A259A649BB525F0B74CC3B1F42412
C4F81A7ACDC6A3F37DE7FC06DEF21B9821DD39D75432AE3881E431569A012092
38FCECF1BE90B0B199DC4D56EE18658B2818B69FB6836486BA302CE7F6EB18CD
7AC5AC6648097F65C8AB851E9BD1696B9703230711F68FD82E1DF92936A4B1A2
CCE51645573EB0E762D68A417AB6C0A2EC8756FC9BFE5972DFC4C794E948A970
918BBB1BD7B31F9B1B323EB2AF8D41A153CB1B1511F43560825DB6ECE30C16E4
902BFD1EFF59F06984F36F284553AB3F2C7901B37ECE058F5E477EC9C629847E
1C7A3628DB7C47C099A0DF53F05ABEF94A760232985AEDEEB7AA05C95273179F
8A1AEA30BE626653D22F7725C28498D776493AF6DEBC59D44A2F6F26E5DA1A77
7B9EB9D897130FB3F6017F80AF21E4FDB73CD96834152BA948E1EC4765B253A6
565F51A1ED2AC8374CF4DB767E7F3FAF13F0A1198110F554CB6735D3C2DABCF4
0C0A431D263F22D091D0F560ABF5968868126430A293C6E8A6A87593E580B110
E15A84AE30E4846980EC5C1FB6D4037D7E1DE8CF57B6A60DD4DDF422075F85BB
0B1411164E99A03A3591915372454A70C8CC75EEE08AF87D35032DFBFD61A4E9
F968D1F514A69D62B30B89F47FCD45A41B423664A7862A1246B6D7C5E2B352E3
D5428D2B6677D38729C5752DF835EAA366A11F6C7564C80EB1E0A3EE9990ED0F
520EB2AC073E63DD9C935504D14BAB14A4305B3D64638B6D952333CFB7CC93CA
D84B6DE80B35AC82623BE64BB6C1DF9165E00D29054A5911CEBE09A2054EB39A
7894F49184B672F4AA1143A2633647BCF502A77F12506C02F1A78AE9061F1497
CABDF651CF5ECC83877724A90D67D660CD4C54EFB79F9A6C1DC8EBDB66E8D709
D4C0A81E7C7EDB6CF1E266B753AF6BD100261A6CDA280902D3F0D15EF4042F54
5586901E870F2A99727E9B64147EC20330C3E54FE01AEA9875DFAEC86A0B6F39
D89E035185C3A6B25CBE093FA5C7BDCF99E5C68A9EBBABB3D61A6AB4F30B4D7F
94F4B4DD1AAB6C22FC9A18BF46B81CB362B87BB87E9552402C35490285FB83C5
EA4825225DCC23DF406DC5CE8E67FFB64DAFA43E89D6C65BA6C0F41AA44EECFB
DB8B9ACF11B6ADE903B6EB177A00E2B22593F7EDADA3A7DD72A3BE1D488E5BEA
BB9327D8B0187CC87BFD35F4591D3F63B87490338692E1E8CBC869CA13C68761
6276CF2A654946B67B1885F915E2D53E923D1A7B9D373539E8AD0C47731B05B1
7E627B68C4C1C9FBEDD4234643720D3A7EE90502081339CDBD455004D38302E0
FA91517F04289EEB213EA283590D0EEA039CA3BA5694C0DB35F68EDDE43F0CC9
DE58D2EFEF8E3D81853BFAA0BFB73296E70ABAEB606ADCCEFE9AC3EC7736215C
B144B249E1FCF4A66590502254335D9505C9A962FF3A7D45FF770DB07AB439DA
BBF81F0F47330560107A6101A5C76F54C285DDAD4E7817C6B93392DF83CF924E
00DCD4DD8BEF1136AFB87E24A20883FF87DD69789556A974B8807C5F8030CA58
5301124D8A96D5B23FFD181D66140874153114B81A52D69164014ABE126D1E47
6752720C0CEDC0AAE2EAE314CF25CA05C3D569CE8871B49AAF2F371CE632A913
4E4735863644E0B7B8CCDD82F1709F81DBA6440AD57B94A928E1F15D948C7EA4
105A252E3AFCEB539773BDCC8FE919D55E1351579EC5C3EBD311A8EE9A9373EF
934E4C61DED60F0FB051231ACAE4E12B03013D7B9BFE305B9AA54B0AEC8BDADA
C3FBFD3A4ABFA43D98F2991894B0E1EA7FCEA4843CB86FC4DABEE41F24ADD548
82C163617B77D65D423C565647491E885469725CF356762F01753FE97CA9643D
7EEE4365D5C807298D61C1250921C4F14BDBF39D08F3896967A5C9BF25113779
7C1909EAD87BF0D60C43F1AE79FFB1A23620EF2C324D5E6F6D00CBB22BE70E0B
AF849544750046F6031B872CEA4F6843BC35E05C73313978F2D74A52F2D52095
25947CFBD1D90A82EEFAF5750631A17DB096B594B6C033ADC43EB9328B5366C0
A8B7DAA7048C0028AFD0E17D3A435C530ADF039B402213DF9BB13372632469D8
568F819DF9554C1930B7B3C6FAC84650AD5454E5C0DBDF10DAF451A8D99640A3
00550839FB6356827BBB65B73F31051792CDE85D8598F0825CDC92D8957797F6
0CA60789EF683AD4C7D307304177D48E8515FD26575A917C9E7333337E070509
2783D66F0F50B55270EC8C75BBE78CB32E0133765517039417C35C57DE3B0D45
97863BDB6F0216EC699AB82DA5AE17C56E64998CBEA5DA56916984CAD87625ED
98355974A608CB758F2FB28EE42A76F11607C84F944D3FE51263A8DBA84E93A7
BF7BB6DF9EA825E6DD1B38F09E0010533BC14E56C291413C50141070B380466E
377DE82A00329C607B7DB839267F83EC08B4819411F01130BCD93B9C2448D878
FA41518DBFB8817CEBBB0FA2A3A4A0341C5BC4571A31096F341A0800454E7455
74255A02CD28BA9E87AC9AFC2A7EBD517C7E93896335DCACBC34A1743D5A1564
B5EBFE988742ED8B0A251EAF8FC3754387F5237044496B3FC3D430A28CDAD9E7
4EB97606906EC0CF858FD8ABEBE66AEE30F62253BC1178890D6AB614FCA9FF17
924B6F0B4432A66990C1D701A498C911031A22BBC60D8D893ECA20F660AECFC1
74B5E419A5779E7E9A79D38141A4D34CE51645DBBB7C726B5C20BE1D5A364A21
361D9B6A7B9CFDC36B946446052A40AEDEE2FAD548E3AEE8B3FC81D6FFA0A37F
3407A02B06A2A3339854CAEDC5440F281F9B75C6BE3F8948E5A8CB3F4A75E17B
FA9563DD08C137E45A5A679000AD3F556DB2D3EC30C2E710CA128E8B9C060E48
6A72E422BA7BC619CD202D499070ACC0CE8ED9357229E58E8388BBF04AFE158F
EFB01BC9D5DAC2DE1A980B02E56CECC8F1F65A358A6D9B700D894DA78FD0AA95
96C1268E645AAAEC5692F3A9206A85A4ADBD8C93E822FB322869936078AF2252
858B3183913A0BB0660FD8836DD2E0C3327CFFEE26673BBC2C5502E960074098
EE208170447AEFC43ACB5569CEDF46D479F1361AF8C49EE51DD153D03D65DABF
DA2A44FAD2EF1016D652A58E1D271FF6EE621B77F5441CD9AFEE797F31CF6C2D
709DDC52E527C49A2843B1F40FC33D0F1A05C2437133F753DEF24BDEECA9FD01
DFE44D65B758F97102E7A86D610A4B7B3EDF4F9D3C175F633645BCB35871C931
4D59DA9E625DA7395222C1E9BB70B005836CBE4227D96FF00DF7716B8B14AA1F
ABFFED13FC6652F9082D979BF4D846922C4683804E388C98F2BC6BA89DA2FF2E
98B2A22E6F40D0F7E435E4AB844D83D12EB45C39C551E53DB065BD8CEEDB908D
61DC7424A5461320067CB0789CB14C82E7EFA02DCE2D37710B70F0361CE951AF
FDF4C04A1EFFA9FBC7935837113A363C387D55650E78400F4C45F4EFFBE43DFB
BBDDB4E3D6D9170F363918FB10C82BFEC6CFA8CD74B34B93D1931E5FCB41F254
2DDAC0E9456D4AA23E399629F084B3E5824DD9EF586021779CA07475972A7B60
645B1535CF943BF2862E7DA32DD1AB9FA58208E092CBDCB2E42C04E3ED3E6A33
45316A2EBC2106C9A4C737E5A4BA649BD0EF852EB0AF79A5EB6A574B199F1773
D02D36C09D3484710193D79B9B3EACAA1456951632B40E85F393B0CD06FC306E
65B890BE05070F67D839C7BA77F888E53B9AFF03701E4A1945E305952357899B
311D5021E640F33D69D02627465E8326ACE6F0EE598A5D79A5BDEE7B07BA3E87
D05609F98B80860AABA6921E161C6C6D4FC06E57BCE9D9AE159AA59C2FF42B77
43FC27B43A9CFE756EFAE0900E12C339FCEBDCBE9300AA28279DA8602C91496E
B3EEC816430F8B44004E105F7D1FBD0A60B14F481665CDC62F4AE6888F635636
90FB763DB09DF2B07BBE67E397FC2A7EBD517C7E93896335DCACBC3C32964975
51B7324751F5E3B2AAFD32A729D1734301DCC4ECB8228A7D9FC213A1475ED7C7
5978263612A2B969E2120540E9B650E20DD78A189EBD2A1990FD2BB1C155658B
B79D3FF159171D6532306F07A1188ACC084D5E2836C37C6F591B11725547E880
21B3BEA53BCBAE7450A0E486FBFF4A5199B53F278437C43D7E2AAFF3887EB839
F7A2A9E0DD6EB5EA622C5BEEC735AFD8BF715E80C511A96F064244637BBBBA65
94469B724EBFBD5F449C3B2F07027ED594D5FF033724D4D9EFD3BF41EED24401
A9458D10A5C0052237C6351B52D109D3A493CA9307301C2ECBD26AB364535467
4E8D1E3CEE6C21EA9667D6B02309230CD3D27AFAB14DE187F45F8C75DDF3742B
6FF2695DDA75E791EF3D8B4489F084A0A1C31B8CFDA9568B3B836A9477F6D147
4831DABAF873C5D6DBF2F7E039F5B0DCCE57E1D7BBD15535E200142A969283EE
75607631CAAB9AD5C6995D1971CD164A00901B7C75ED7CA325F98155AD174D38
A746B3286F3EA1D67C96F492A3755FE79334D07D65FE355B1BA190E9598324D4
264B30F3A03F597602AE501A231D325357A24634E75EC2676122F9ADD82472F4
1110CB02E02FB33648DC7DE0B00405EED3798EDA35F2E7C81F4B455984FB0216
9213214E89E0209DD873557C08C564985D464F639D0B81E85E7AFEE08C99FDF1
EB77AEDEFEDAB18C6800D32086FCE519E27F26A8144C7D576228C102B51935C1
1E6A1B3FFF2E10DA7F6F6E80F5360573AC236E17EE5F7F1A518EADDF9D8A1C8F
B1108673D867B3930FC9BE78B784D786FC209C014B7E2F1B6809B55EA360648B
7B4C01658E4E2822748AEAE48E2D6E752348C545B345B17C9E77BF875D7087C1
2FC6CB4050BFC255644B6AA755A5367DB884D5015928243B9E13FE68AEE2F5C1
0C10A144EE909743EB7746AAC3E9E93C8DF81947C8D2FD6B15B6ADC4529EF672
21876312E3B633E947302946316432A9C52A86F39355479C01500B01C7229F68
E7C55F697AE4AB8F9BD3F364DBE539F7BC5ED468E6CDB3089611AA932E55B0EA
4A0495CB2CF6F647E0A7EE9BC7B7B45778DC84A513F352B2484B2BB3A9F2389C
26E590F80B927A12716D38ED5CA52D6FF10DCDD39DB33173FF835914FF0482F4
8D86E13709D75DDA67480BEA1F545F5959E806B7DDCED2CC26324BACBEF8D0ED
348181B8A842FF8B0BA42807334F42EA60FBFD10B89D0E8AE7041F52C6FCFA64
D6CFB1D9703F1A17E3776FE26688D3A4AF6F94555F9610FA63248A467785F345
1297BEC0B7B03808FFE6EC885C0B9D3C86AC30B21F3090AFF572C7CCFDD71A37
921E6A8A38F39D3B2FB467D74C35A99620B27508D3CC7041E3062B67193F4965
A00712528976DA15412A161D64154D62E52F4B02A5C1A6048FE72F1C35C614E8
EF883AF97D367F69DBF734BB2A148A7B61C78BF7FB2277C6E81ED035F7969DDA
F35765327871EA80F02CEDA213E925728EB3D1369EC18B8B1BF27FD0BA060D3E
3FF5EAF38E35BDEFE3E244247E1F7276515015C511250DFFAEFF60809202734E
D86FFE50F7406524570EA79340CFF5DDB768507DA2CF9AB31CFF42FE6B4F00B4
4AC8BE64E4B919C5A575977FEDD0B1D1B89089EDD9D9E9C4C2F81B812A11DD51
20003EEB6A54C48062E65752300EFDB996858AE9B81C81D94101F851C9ADF7D0
CD1C6C5650027C399BCF9B1CCED2DC1EFB27931D52D022D2AF881C608322E2F1
C8DE42D0C0DF0B44B96396F92CAB0A4930567A877DB9FB7B18039707275C7B2D
D301B647DA52C80B89D0E0251C397DE74657E3F58DB7AC65BD5B8339011DBB61
B5F320965C5833867CFA739E65121B53C83E7B9A1A5E93702BF3826D5712D175
CCF9A789028D97F4F7D30CEDEE24E262B087FB0031D90BB7149E3C385D96A76F
CB6F8A806E061403C4ACB7DAD37B57B9D7F9B92860C21F0C4FEA515F629C9A8F
9326A2D989A86EACFA14221F9ACC5C474E3A51F1FD15B89234A997054D54BEB0
0D5F64484C414BE3368980755318BB1AECA0053CFC1235AF90051CDB190E4D00
40FFF70435C6DE67B8A5E1C114B6FC7CDCB05C7A0C332FB91C70591A71A951CC
34EED0406AB81B6A6F803474FA564202DE1BE4788A2E35A3973F350FBFD52A17
7BE84F2C5061FA927A69F6A4973668749143D43EE23F12315665CF631D705A9B
7A591230B56C94DC1783A8D9487AFDB79F3F5783DB2AA4FCACC8DE9CDC3C861F
663350128178A0F799A66101D740462B21BB06A88DC601CE3DA156C806C815E3
DBBADC3D3C24FC9806591084BED3F82E41AA559382E3A39F91D15855705CE225
B83D27A8918B4DA11DBBF343AF52C66D1327FF21FE901B3E17A24453CA546C83
963DB12AC04CF58ED84FB32709CC538DB2D3F82E41AA559382E3A39F91D15855
71088091059589398323EDB1EF54E133B6DF46430EC56A8C17BDCDA17F711169
3802518E1F3E3A25A9CBA3A0F8E5789F7B233FA7705F34F80EAD8A2BD4C29C79
E4F150DF66DEB7A3AF751CC15ACF3E0F23129000327C2092232623355EFED73A
F0A20E27F578F3A3F6E2178D61B6228B16640E4A8594A1702F6F3D52DA94FF37
C018A5211FAE935F18C710C2CDDE6A14700276649D850B6E23AD0A136470CE35
EFB6C124DC09FC9C27F6CD85560D1A731400CEEA260E50B4D1E4650CFC122B77
18D07DB30A93DDDC1EA9AE9660D3465059E7002AFC5AC62E5002D7CC41EEA18B
EFA9519370DFA82577AB923333891496CECA8C3ACE05DE85878654392450EBF5
4B9DC8441FBAB5BD7E68C13693EC4D92D2D33DC9298BF525779471C771ACF32E
6207F1D0D76FD6B5946579F0110AB4DCFB32E891C4797601B3B3D420CCEEB0FA
4D0BB8CFC08D05A32D1DA61A2D6C657518624A1CBF85DAB9EF379F7525591FE3
CA232E5EC3A95199084885C14341D8A12A491E774EB948D28D1DF98ED24161F8
2CEC0550084F40A4A161FD347082724CB5A62A4BD7C5BD44875A55897D2B532E
906D7FADF57D33E98FFF6D8B1053474E7BE21AD9383E09BECC1731700FC34FB6
670259FA6A218720C44A3BC393291FF022C62806730BE7A6FC13C4EDCF1C3FDB
4BC86873D179D88A0A94D2B63DF5CB351BE00F3685CA11D23B413805A02B2701
FE46253F1C58B4498D025DCE099BF4D8AF0916FC6BB84952274B94BEAF0EB7F6
1772338C083C728998BD1AC0D43F1AA653A237DDC1FA62A818A0423C40DF4E03
CF604FF7DAD557479E6FE5E9DD147DA54DB76A17466BF5692B5FA291DCD6D06C
DD3378331B86077B661662FF2163F242E2782FED4D6C76201C4BB0531D4F5306
89167B7DCE2516D380B8F938F2C8E60B6162FDB3B1963A9B05FB073A407C9EF6
D513E132472DDC7BAFC5E508E692B3E5C8C505EF874F28F29A45C95A24DD663D
7CA52551DD10E2B4D77154B67E516CABCDF5A6914FD502AEF1F6F53B839803D7
3D02D85863468D175D44E71807D35A8BB16DA3E011FA2B757F02EF6276E28FCD
D9F6B54BF1CC6B9FB9A5C5F4347030843DD8467139DFFA34C959CBFB2869B4CC
380B1BEA33070791A9CB5904A2D372030412C2AD833EC1C574E79475F889B9CE
9F35493A1B4F76D10B138C09D4D34B30CA2D6B37572F5CD259B75400B09FFCC8
DDD98DB99CA1C54D3B05D60B0EB6EA44A0C27A8483109B33B185AF2472E5C865
FAADFA4BF11B743CCF6AF25C1047871E270F4981DA77BE6DA75EB8A93867EDAB
C048370EAB4E1A29F597157BB0FB68345A5FBA715467566EFFDA01F6CADFE62C
391F52BBEBC870F8159BC0DD744F393CA13D56C501F630BA5060DB4162EE184A
D04DE7A33D11323133199750DFAE3058A6A578FFE769BDE940DC77868621EB03
235FB9C69EE955D8FB17FDB11F8C0150170A486455EFCEBDCDD341E13F8472FC
0CE8CE250FAD72B8A85B7F11B8834650E77F722C72A8B3658327026CCE185EAE
AF8A8A15901A2BD2F718B80798D95D2F9B88DE2367D7E9AACA5547EBA2564942
BB5BFE4A93CE8B815F2EFBD20E109AFAEF6A88500BB3ADFAA753C5F7FB11A6EF
B0DCABC3CB148E5134A27E8A5A106D86E395ADE5035D54C7EF66401D74E6DADE
419CA77C367D38E0548F709EB5BA672657CFED3C707D5D2899E8F0A1612129DC
CA8E43A6890CE8520592055A9B44EF7FCCA20E96281BF8389D5F02565768547B
24308251BC1F119BA6B54DD89D48A70867880942785089856E54B4C3A2707F44
DAF771A4F8C642FE5E99634AC87E483570E2A362AA134C1D4308FB33E6F53478
763986D70FDE72E44C3EA00010424476A8EE73246ED62575CDCE914272A8F459
F167FD308C95A41879CC539C09DC52E04A4B500FE3367FB78108208D4D86AE19
E243B7328DD7CEFAB5F7338B1B05F2E629B76A421FC62515D2FFA0BFD6627944
96BF3801E02DCD4925E1B19C6FF6A18AA6AEA3BA8D8A4112B173A27C54911A28
9A4953B52A6FA4802510D3F3DA39C5F3F82BF14931B9F3D2BB60453CB6087615
36F52AB3DA276A7B59F65F0F7B058F89CEDC63E876A35D634DE722A106547891
80DCCBC5FF6EB74EE24C0F3BB9F29486E9B810FCD519ADA58001316608C3545E
72EA037D0B465D5064A6D9ABAAA04FADE52C1D112372F5F50B62E4E6CAEBD9E3
4C683CB22A4A4E517F6503AD5A0A3F22926BF875A86EC88920A0229625A274E5
F79BC18A2A75766809B720DE733E2AD685BE014B62759399EAEF8B4BB1CBB268
FE6620E7F6A13E116159AE831E4152EC9B7AE5A16BAE50167B1DC5AA95B6DAF0
79B86DB21561E71C9D086CE3A51D07185666E6E25517E160636A69B15D8DF89A
2E78784DD12B29C99CF0549313722B2F6C2CC9A30178964B4A673EE6824D52F8
49F64A60A02199C581A6247BEC5884127EECAF008B07C68F9783FF987C5558A6
DCD6B263E3573D2EA6BB6C62141A81C5D397035ABF7BA970CEF72792979F188F
76F0F2299767CD3698C847FE83C74429B91C5831F822FF716DF41C29980E8B33
43550BE7B3C7F55F7D52B2D405F95A71BBCE369CC66B827E1E19F16040140166
1BDE8FD6C9967E6C649739C564DCF43C3510A450D4D81D46E1000B6D4E839F61
A831D340D8A00E3D757E8DBF6B5EC8766DCAEF19A3B7FD1313D6EBB93374DA71
D32384616393B2378622A7A5D1984B5A69A2B2DAE2722FCD1C1B1B5518CC35F7
A6B1EBE66039838630F35F0AF5D89448F4C6E052517CEB71717BC4E232465908
ED237B4E9729CD57409C1F7CA10CB644878227C5757DB075231895BFEA46C6CD
3518B580BA7064293494B4E845E3316E2573D90680FF7D503948C1D8E6F4109F
121687BF556D87F52B113BC0E8D6E3E12DF15E9CC37A88D33DC8A837B4704406
1BB3BA5CBF6265FFB626B8D927DF2F39D0DA3EAE1CDEBED0CB5BABB7EB802435
E6AD93A096258B227A40CDF36185ADDA495F942769B93F0E36F89DE7FDDB91B9
474A8A26496D574C1887F22B461FC4A1230F1C4E6088DBCB1CD87EF5BDD741BB
054CAFBC7BB770F3BD474562458ACD995611CDF3631E7EFAB41BD233860D04D0
DDDB48BEF35932F1071A79C9C70903B9C0FFB7B11C5D40C076D0181CF1ED3A0D
5A8FB1DE02CD4FD01AFC9DBA381D130F98015678567C0ED428D80FB22206D970
5E4C48FAA6E383F97CFCFA8D575AA766C4DF5340662A0454F37FFB6C8C8FFD22
988D440372852A9694E4FCE0FDC24E8DA275FD4F4F72FC9D234416AA3695CA48
4F3D198B275E1D83AA053C88A17B2E392E8330F91062E41C5E7B370A4CACDCDD
E033EDAF188610CA464E9CD27119027EAA18285B266FF717BA9FE9B5340FAB85
706BCE44379C031C3F37EA3A631E2D5D914E9FF192F2621DEFC6E14F7E69BAC8
D308A8891C708C2172701E6EFA6C690590695009B0C56965A533E6707C7F527F
F6858109FE8F9E63D897BA0934A49A96E79B19EF02C15D0AB273EAE0E4C163A6
861837562EC68A3DF988B864B822E4BC09B498E393EE5B7F4D5357992F6D8C8B
9E1951DA8E84CE72681FAF5EE685C5F8A29A38CA94D3F728929BE8371D9A963D
EEE6ED9CB67549175718FE22328FC3356C5A1D63F9CD6C540D08D499BB2BC9FE
41E797FDC1C3CE373C12AA0AB340A8F616A1BD6B4FCB130C613681864EE737F7
1099D3064637F8C73A8ADE0A753CCB9D64BD34040AF068B4E9B55520B129C561
2B04ADA368E75CCC7DE86D73052F7BBF3C3CF5443F03CF7C7A4C62DEDD066DA1
C061356DED2876CA7F7DFE313436903F3F1B405F2610AC9DDA957EB658638D67
1327682733F62F3327589A7E0691CDB7C01A6B95E34DB3D837A2ECF2A65D9FE1
3CE03B4544962EADD3781195A1B1A39E53B8E89C2967D350F75F28F0675312EA
6776C651F35FCF210876171868C5ED5B3E36D120389AF363A8D67761C0F2A1DD
706C806A8034AE956E0ED388303457FDC09D3D661010682EC3969670D92FE494
406B1DCFFBF7F7AC43B45BF2782C2D30CC143276CFEA035C6CF50175BF951D56
CDCDD2A757C1BF26A96D24CC7CDD5B3D625DFE4E516A7309EBBA858BE69DAF05
32ECC75482E0C519B9AAF9846B82FF1F02D2F0A66265CAD60E568CCB44B05607
566A02C12A14E2A2D119B369C5544D3EBF05C343C19C499952D1309B80306F4A
61A4F8E667A80166D955421652CB1620C06E7D94F74AA464E100E1EEBC3FE047
80589579481B79CE028D54B2702C6FEEC4002EB9EE799BFF15D65907F639C8E7
A011AF17BB14422C329AE0BA44A7AE06E9E15A5D5BF99DB07EFAA0A98BCD21E9
9041133CC627AF9293570B3DB7EE8C0E4DC7EB1C5E333D0EED1BFCC3D1813784
EC2BFE11241E5E5A63B5EC2A72CEB48AE7EEE08DE1F0B07D1807C680AAA60714
8A575CA7B9633FD0003A930F6C782E3298C0CD1394019BDBDAC7482826B8F71E
C51A777EF1417DAA354A38AF954250242494FFCF3EB02CBF2D7BDDEFC66E2C13
4858D32AF74B25237B70F75B85D5012A0BDE436726C96DC8E95A6A7ED0958906
0FF35326BD8683B30601CD211E940090B78B9ABC7684724C63E8D3ADA4135AE2
0CD38AFFA0B3071E8660CD601CDFFE211CE9D8E110833F2E36C2977B0F2DFABA
00C4A9D139FF222E949E21E435D9438B1A1493C6809DCEBB020E97F4565C1F79
222FC39649B5AE3EE8F25CC476CE5E71F1025EA32E245FB41A163ACF2F27752E
5EB67EDF6DD029942C0B8F56A07C3423C3DF864C1A50DA4BD3445D650FD2487C
25A56183C605038A8FA0AEE394CE83436E9E4DBBE463EE135D9D9C902B17B51A
AC0CB747E77749C922BEB97E01433C934CDBCC446E09E592AF9FC47E74D289DC
285EA30F1DFF3F0051FEA4082EB3348AFEBA93505EB62B923DBFE4D3BC277810
686137AB4F58CD36366C22465F9A65E4C9E9432B3DB333A000F4CF2A9899A31B
1CDCF98BB6DFCA0130D597230C1D9DC6C44E5D5495FED4BB91E92153BF024EB2
197FDE4374A80E3B3A615072BD27935CF8146C2F1F47AC8CD12D58CA52599A65
795A2C560781C92EE14B5FE74F47DD433DEA4AA229840D4C62C19E602D5F3EF4
7D81FC3743A898C666D89289FA3ED9806EF71FE00DB9005DC58973248CAB6875
E54296706AB51991A5E9488531D696EE446013ECC61B3D952227964E78295355
E2C3474649B388CEC21C76608177CD51634BA2189A79ACBC7FCDE62C1296D929
E3E3E52224C3729B2C1DB0D0F91735E8930680CCB9745907EE11754075A8A966
A7858330EF34E782E54A99129ECD573BEE2718A61159FE3154E7D8CF52B808A4
55033975C5EAFB93DE3F51E82A2601FFB05D90A5A823129903F1AF01CC616013
8ED1EC4E762B7F6031132DA7025DE303AFFA52F14D1A604F7E9946B442CE098A
62BF4E3AB5672CC627C779AC480A374B21799ED7532B8F115B94FFCF3EB466ED
13C095F7B73AD863852F6EC3B1A67C068D737650D73C050BFABA8C25ECCF81E9
684307CE573648AE81EA4128D244818A9E92605D5AF3CE465430054DA4B30354
78BB8D3E3212F6B35E750A0311A0D89DF6A1D99976AA4668EE62FCA6F439D937
ED8FCDFB3DCDCD9224FFED2804B3EFC25B60E4173F1E3CC92AEF10A8FFF85C88
F1EB028759943BE5A3CEC0073601E0BB3EE4F7F6CB96D932D7CD313666C011B1
740898746A333E0F0FA39E774B9835D4F8691B029ED37E232870FCCCF721CEE7
1E15061F26283F54AD9A6393D9372E35F37315E6CF63B4FD224F4676169E6045
97DCD773D3085E5DB40B26A5B688BCB0EEBC694D3C26129CB619B501B491392E
F68B506B4741C84569F2A13CE51AE16BD967AFC5489A136238E27654D2E85D90
A280E13E08C181610679E7E5A36EB26C0F02C9986116DD0BFC419F724349DB4E
5F8D1B64DE0DFCA4282B943DF8971CCC30E8B3DA44A705E4B6AB0B7A1530C9B4
8983C3CC87C23A2C6C313C0A6B57B6311BD327C05F5AD041A7782CBFAEE9DCBF
776CB6B257CC995ACD0D5A4970C229FF0F5AA3FF15B37C38A0DC7551BDEB6830
166E3EDBD8912D9578E4B4B4363F54D5ED559EC5332659E0A4BEEADA21AF2D1D
E036E7D3B64EAFDF44067D932943122AF7CADABDB3E560EAD19951C71C9950E4
CF4955C052A14CD46C8ABDF4522AACD539FA9858BEAE6D2AA63E53FF00826CA1
DE7B12DFADDC3BD4F6E1D499A9D623794CB0FB5AF6CE8479BB16F20B9394099C
861EE241BF1C719FE1B8F73F8B0208BF0FD70D457E39794B432275A8C2F2A46A
44829A8F67A344652218B9B935809D37CDA6ECDDE72E8F444F4E98B10C9D4159
2C4949DA9A76F39D59C2E10FB83BE1898A63EB84704173E40B0B14398479817E
6F94FE49D4D9A8B7780C590B4935E08CC7E5C3BFAB6BB230C31E0E9FB1529FA8
B273B14C343468F96741A86BBE34AB3E74B225E27DB79F1B97528120B39322FE
AFEE11332866DB38F0A024C53AC490DCA8BB60BAF69F1C0E1701F34D3D7B646D
C8D8D48DD2A4F76DC6C72398B79879C08F702BAF7ECFD9A9CF7B6ECD7E57DE62
F5CCC6ED6D40B28DBB6C7C7220E3743BB4CD3913BA6C19A46CB1C29B795D9BB8
C20ADC739A6BF0DB0E18048B169653D5257C07C0AFD468D354376D21CE9667F9
4251BE15EE266C971E26401EEB24373D1A87657F359C24626406D3AA25AC2C61
53CD5BF0056124C0D35EE15BB6A98F1D5D8C8E22E20FE965A1D763874F02A5F1
DF1F63E55A9B08E8D02E655CB22191D350B063A7CA86330E2BE8462FA19CE35B
EF857BC7E546A12A4C290BD52AC7A7EC796A5C8250A04E9129658A0402AC956D
A7F5AD63D65728F4EB7FD8C6C5CAF40FFE511CC2D04914E7AAF8D4EDB80784FF
3C02D4B0C7607CF7A91A98E2ED4737C22D0A8BCF69C08C2AAE2B7C543265B1BF
55F5D73439DA05BE043E496712C38E7841685DDA9461C1D12EC1F58E11CF256F
641CE97488320F54BA7F190F6441C302D6195322A2E3893E80E8C399195081A2
00DF288C29964AB621A19D42D1A34762F524B2C827EF384A5C2AF59AE606237F
E5AFB4CA197B6DF3EEC8DCBE1D3B845237CCB3A7332924623AAE5B20F4EE8952
10357D690F5B40159D03B7379CFE6892F593929237348EEEE6FBEAF828526842
5A725A2ED7ED7BCD00050C9BDF8BAB7E8597871DCEC892FF0200D58CF10DC05A
CF569B08395DAD50632D1F7D43381136C687A3EF37BF8BEC2BF35D4B51FA9115
D9374893E1463DFF7359262D1C9280495EBC448577512410FC52F35E88C2B6E0
CE47F750C6E039A60A904DF6DCFB33EA76754FD799853D116C6E0C5FBC32C862
5B675679BFF6B2E57F5ADD29066F6169F71470328C06206BD1D6C3BAF7BE7439
8F674B50FB3FBD65F1E91C371CA9355CFE17170367DB606F1BA05B49087046A1
B06E9C352C8B41062F2D9BABA0EA1EA79569B527864DD5CB92D6ADF2C21DCBAC
3C6E85F809080D50D67726C8BF5989BDDE927F8364DB3612103D466D46737FE7
FBAF28A0283D8F3A4F362822F7CCBE044486C771D659381D1752286604112BDB
79358D3C3B7250575D45613BEC6D021ECC8BDF2DAAB359413734584078AFC681
5B7DB18063DF7B0E8C78FF3AA9AEB4CF95FB3AA65C614649A4BC5046805D13FC
6A3E76F86A1A47E73CE7B271FD3261E797AD323834CAB5A7436CDB5E38AE6149
92256E8702C201ECD594297920721437842D212F2E5B93E5AAA42EA4DB57FABC
5754F08E826F571E3F40B9CAAEA9B0B03F65CEAF8BB03584E43FCF0B5153E11B
4E6D03ECF4842BF8C7D870D7B1F5810054C06F4255AE2BE45528BC2A724C2014
1B3E11DECA51995B1481C9330C7C08ED9125A5C55BC0AB088D21A45C77A63E8D
7D489BC67CAD8CAAD18254A17D054156D7DE83938EC1025766C016C49F07C977
1AF34E054EA8FBA5D932CD94EA74AEB325CB1DFD79A350D9A81EB6FE246528B4
729865A689DE4DBA0AC848858DEF0068143F0D028FD7503F1AD01BD510DD9652
7FE0FCCECD88F9B22462F9CD31B7E63B276738CCC91156B8478A506AFE424FE8
1ED5CBAC015454254506054C45F2CB6B51FEE436E8849C31BBF903785C527C27
D010A6143C7446271C17C267E7EB75070EA911980C6BBEB4DEFF2A62E28E8536
3492DDD6A3C100D9A88E65577F93BE54D36C91EDAB045D464D885AA38BBAA387
12B361618D7E38B1656B1660D8F641A4F02FB9A564C4489A21A0D99CACFCF94D
B04B28CC29F147A600FC97AFE628C83E5F67931F710071862A979511C00B0C1C
01EE3816FD4C79615353004E0566CE7EA31AADA26B041F842B78CB59B9BB68AA
AEB6D02861F439B3083695CFF3E7B915F263982F6190FC672B451230DB9B32D3
D6EB6EED9D8A375BC3E681E064A286F4078AB74EDBEC0EAEF065D63C3DEBE274
078BD7CFD7CFB45B11FEFEFA1DE94D1D980B7145147616E0B9887656250CDF47
5A11C9DAF8BB958EFB512F4768F203C7468FB70CE4712F8004D36253E0DE1AD0
82B469EA1B24B76B9E3A7C5653FF81E2A7A26240FDBB332909B35F5E794C2996
2150F79B46797DD0F308F3CDF000878205E1EB724473981125C01909E2F8B9D1
CA9A4E72AC23BB74542C35796B249E70FB29D187172AB73DC334E8399530360C
F5DF6C8DBEB272F38B0D703525D1FC40F5D22D7D2613FB74375891397F10A0E9
9372C414E942AF5E8BD4AC086B614118E00D4AE52108E838958A56FCEC560547
A4F1AAE7EC34592DBC4A01A4A1C2480329EE1222ECDAA4711C0A2715FE405FEC
F07C21B4931F39B205275DAB2225AFE67EEACAC100CDC91A85CBA93B305752A5
1BF2C3CA9B07C95B8D2F1EF0FA435190F5486904B63A5EF08CB7F509583F5C39
6B3CE52B5FD0B5DA9C46D0561AE094DCCF37403D6CCC87E7C0CBCA290D139E47
00755087A31132487163C83996FAB2A129EFA8E49C23705E20AF63975B00230D
A05479FFAFD9581A98C691117DEE66A88A2E7DB59648200986EF94B5F39080FF
805A50C4D4F987D426BE883CFC0B782DBD232B4E2BC664FCBB2499BBD2B22134
44BEEA07605374B620644952A2EB5CA3797449EFE1942883015F854812192A0D
46FE4D788762BEE38B99F13CE8985A4BE3F58D5325548181E44116E473B4BB93
310E6261E8F92C068CF36126782DA90DAD06337AEBC6426909574E3EA642122D
5F5045B18E07D49D4852AA34F3984AEDE1C9F07436B1711C7E1E0B1F99EF678D
6B8E80DE6539242AF7A0984573D0E9BAA84718300EF612F3FDBFEFE7B9409A81
9C8ACF78818154BB6CD67C9F5622D8C80A1C5B7D9D6A641BD527F4FC9F6F6243
448F5A5EC1991E31C59CE2BC25A20FEB45E7768DD27E3E8EF6B613FB22F74B22
82E382063BBA981015924094C74FD050C8F895C1422CDE90C9F6ED7074C5AAAA
7742D5E911EE066ADBCEA5426E5AD44B1997BC5B4E93B6E739999D8939A4EF44
05A7EAC52647653FB458BB94831644C049E7B163FF4D79F77FBF087BEC5568D3
927D666C1214B851CFAB96F1A957EFEA1817F8F93404E35DB7E9257DB75D6C6B
9B35B6135D7130DFC8DE862C88A397525F6FA433317C1532C91A55CCF582BAE7
7679C3A768EA129608291654D43D67907E561B8847DFA7A5399C07AD32EC2528
614037062EDA52B1E5C79AA80486AB26977FF8E85F765F200777749D55B842B2
53BCAEB98BA7028D15498CC1109465832DA78B8BAA8446677415A85568D1B3E8
F8AF123F3327AA257972B89B95C962B696837B34A2553BECEA3B577B012F6F46
AB127BE32A09FE8AC4CE4C40EC63BAA3894E2D19D5969BF95585671341F2785F
7EBC8F7746E20AC56433953D9F362817BDB444234F50079075F7D33AFB65AA5F
E3989BAC3E9765EE9952A5ACE2D4011A4A1C2E81E2E5A5C112087C57A5DB0D96
1D5E2DC3D0CD7F97D20DCAA9BFBA41D69B1E7ABAA8753C185F412DD2BDFAC689
66E992F5D01092A22BE0A25EEE8D6D543FB0A77A5AC52AD85F1D57C85F33DEC5
B88278BB682086616061A3AC5898F630D143E29D49EA3A8F5D6DC3A2D71D0ECF
FDBF67FA3B9FF18F667C77BCC43E9197DF0811345926249F57054AD38434A454
E5E8ADABF4DF10ECAAD44410A93B10C931A6E65CC95E25B6833D2412D8446F02
AA01708BC47AA1A13FB28789FF5E7800F3286F5D68D6F186CF09C9B2F7C10C73
3F7E3CBB55EE35D71C9871F55964068C66049658ADA0E504379D771B5FA16EBD
06410DCC16ADC4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1728
%!FontType1-1.0: SFRM1728 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1728, tcrm1728, larm1728, lbrm1728, lcrm1728, rxrm1728.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1728 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-174 -318 1347 949}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA4DC69A02016AD2E6C71441AF87012AB28D4F0F6
05A1B80B954FBE39F81BCEE3BB01BA5C5E565B5AA6FC97C7B6B67E84357BA44C
2937AA743FB277BB74912DA3E25E67CB130405792F93CE2E46116C19329DE8BA
EE04B792CB05588004C5CE06F43DA6B4B7A32927F2C6F890A67FF20BB1365D06
3253F39A8AE19D733468E9F5471E11AC6CCD6414D32B064FC8EBD4AF9566E2A6
EEDC38EC94CBA2D168CF68A2446460BEE734A3DBA42E9E603A42A39D56C31B65
CB46AFB15FB6173722CBB1A11340FD4D60C9C1E5FE87804590AFD4CFC5BE2708
DDBCEADB09C259533E430B4969688B9ECFF89E492D13C71C38F5CA9ADD1FF1EA
5616C0A52C7FC2599A22FA881C576B2EEBC0E178815E97DB82FC6C2CEEB0019C
4294AB22B62F31451ED2310FF7D31077065FA4DA0C578E84DC5B45EBE5910053
4705EA0BCD13654FDD9853F9B32E4256CE9281C2A01C858D43FCD28C34BAD1DD
A9438AC1802E3A2F18A13FE940B948290D3423E7E8BB8914B605290D931A5921
2BC316BA868C0A90877010683689700681E32A9F65839CD7E737EAB2B87C9A48
BC2DCD592E530EAD50C8F49FBDDB3E4720A71674E5FC179BC0D407B00919537E
67FB521FF5A4B32317C44EDC5EEB3159FB0E6EDC040841978A5D3210CCB067E4
75A43DF2B7106A8423E4C5FF6A84003A1BE40D879F6805380C89A7A0FD2DA384
B329C74A98351F8B9220CC285996BE5D96BA679E7E673E405F50224B637DBE75
627575F750101AC80E355A8A64AD4BE9FB767FECA90CCFC12980C2ED8C232AE7
812378FCE434163479FB95713E191379AD62E816A2CA0FC200886C93F399D8E7
3ECEE5C370A97A78A6DFDC87274692B7105649C253934138591372BAD90CEC89
926B614ED01565E2CAFA4372E014A669B5EEAC9D16C2D43E99D94227767293A9
F2CA64A5FA797068AB8EE8F3DB72667AA8DEE63EE5D56C3DF27BB14C4E93D0D1
262054F1343532E74B5C69138850D48616F293B715F3C1C75BF59B802FFF174F
4542587C63986A42B54453897489BD392E8E6F9BA6D267FB65BD962A7A9F0CEE
FC0E41E5B4E80F6AAB41B7D68C5084966C420281CC6EA1599773352351F8BB58
7E2687D774A0BBEBDC86146300E4A14A784DE5277A027A91E51C94C88251B2C8
04E97C560D014F170423BDFE29C61D7F52ADA839528F7AFC05F321024EB09CFA
4ED80A3328983B3E2586E701721B3901E1D7D5770F0A026F224332A04A76801D
1C783A8F2BEB9139E03DC0F2A4C65A27AFD8D18CC2BBCE8D00B3DC62E6AC2F06
BAEF03EE07C23866FF68BA5D5F4B0310A153EB711DC6E78925B0B431DE6884B0
141FF7FA87471BEA2C1BEE87B1B787568C99860C48F42C846625715FD9F7C696
B1640F391992EE2B47BA9BD7FAFE4A66A342E00623E979D2A4253A5BF8901F82
903B8BE25A7046ABD26007C8AF42FA63D25DDFFB5467EAA94F1A515BD7A9B892
3061CD16B6ACC38006097A804B97915EA840C5D661E4178E83FB9D37641FFF4E
DCDFCAE93B9AD7DF8E740CB8961D86FFA6F1748B19BA903DBAA71F511865C301
7176934072863EFEF65FF699D87AF66DC05C449D8DE544198444E417AFE89580
D6E9EF0C8683AB85AC932C8D17BE4E159D11328DF9A2E72EF20252A869B5F73F
6F21273615D281905CE549052C3BD503061CFDBC3211D3822209DDAC5E768B05
2C70474F1D9BB15496A4B55F95151805F2EFFA0034DE19E05E832DB6EE7224E6
6D6241D713E51980C496FA1530E11A4284864F6706CC6D44C9C78D3010317437
4DD0F557B692A0E8AF90F7661C5EB820B3FC38B4E1AEAE21820BBB37E2ED884C
AFD5F7C1819320B766793F249827D7B0C790C3A5FB67502C05B884A151C05113
E4DE2CCEF48277419D5B9D42F0AFB220FE1A5F81FE1ABDBA26588082039A41DB
1D1A15F42F80B4D4151C6D51FB2891C651232DF5BD046E1E2D29331D9968FC0D
479F6231A51EA218C8811C7A73FE4972A46DBDB6328A6D4829780FD70C215B9E
38F877C05CF6426686954CA7D278E676961117FEFF5772DFA677FA57BBBA0E10
BB4EA6871593A7B74FF1D0E54A37BFA5635B41C5659B3F3B3D7C63DD439F069E
1460F1AB98E428E8C7594AF07C4B1328C68D2D7FCF47AF0C37908D14E339FA60
C75AAA03B5E47F691C2A8699E0D111D9EACE7A4524D2ADC19254075422B20B5E
39606FBA9FC17A9DFABD5B1657FD6F3A111ECF2D6EBA722B7693BE034322C052
85167ADE14D5021FF1F7A2B6AFEC021C3EDF3EF4275673599B1BBDF3D2600F36
C668F21774FFC12FB17422B911491BA13543F7E6A24D8BD63637CDCE05C4B0C7
F6B190260E530F4F7D2BFD2064A45E3F43EDA42091698D554F4734A354911091
A94D2AD09A48086B40676990E4B52975AE8F0ACD3FF4396E823E40A4D153C58F
0D64885456358B9B0228CABDC0471ED87CB8EA8C242D45A0A3905AE977EF13BA
060168D2AA662E20F4C6AFC1072A1A22806D1AFD21C3D30B09DFF732DFBB3E8B
72914F0282025CBF03F3AD98CD7ACB9E6D12165593DBBA2B34349870A5E69641
9DD5566BF66C89130424C89BD0A034352C69C1214D0EBA1B16ACAE93A0C123C0
DBCB117C8A2B42557EF6A560CB40138AD0CDCBFB2683102821B9517794A198A7
0F1E83997C5C3CA85D1A8E81402B32E799C0951ED83CA057BA85C2649725BD34
57E248E1602136800DC2E34A8A09EA19A5AF9C0D07C58C45F2BC56B035C835C8
AE3109763D624FEC30D6C1DCDEE8E4E2D28F3B873772A542D25120FF314949EF
DC43A28D9B53B7CF6CBDF5629CAA794F95E2A174FEE7E8540E35D7100685DEE4
A0DBADB82856D6DD4C5C487A00CD257285B2C3549AD3277AF603E70605C648D6
87D94D467E63D5997933482274E278581CC7A844F8C6D7DC69CF55536EA2B458
CF664B9F2E4AF3D5C3BB741AE73DD883224F450994D23BCD7422B724600C7CC1
E42CAD8B6FD102AE6DBADF2F9A511FA87361EC25C282B6A0A49B5EDFA8FF27EE
3B27B2E237DBCFC504C34C369BA3DF75DEF6159361BB0B9BD43D4B8D7191A76E
5C3A3A27258296D054112AB99ACD7E875CEDD3BD22FC1D2CDF044CD8B0B266C8
C8A7CEB7B1B80D8DA4F78DEC07D5975B8CAF55F813A88CD2D6069B43721932EE
D26DB3906A4CE19E504733BFBB69DD3098564FE1780763BD089B0D57068B43EF
2DEC54639E56A18260ED02752519751C717DAFFF9FC5DE31E4E520360DCB5829
CB45EB3ECA8E612471C2DE17840410D6E0CE786342874FDFFF481C293E7DC27A
15348F53736894DB7812A6D71D08B987C5C58316C88BEEF9EB19596FBCC85854
98FBE13A062F050B780C960912F2C5D2EAEEC38AE9FE7ED7F00B1B172FCBC4EF
C5023BDF524E252129D50CD1415A0ECE0514405834ABC7308074735EE6E7AB65
672ED471DFA741DAC94750B607CF300BFD2A83B0EBD3A791CED6A7D376AE13F8
CFF48112F034EBE295E6B2B40C7843C77FF4B58EF85794BAAEE4BF03E66F3D87
52F322B9EA6F5EF64C3EA2E5F47D870C0C90BC6397D4C61B8E06FF466CA310BE
C375D9A081EFFD65FBF098209A70A220DE65717CAEFA0A82F8B05C2305E73225
83134461EB3CE33B960FE1B9AAD6B2638845279D79C08D09EF4454C3A8B22A85
7F7FBF66B7975E5B9D93437EC3F62EB032B061AB58683A39FAF0AFA050BC0E1A
B8CBA5D919BD56C6F78E343374A117F305E3191948D03668F2A196F19688BB6F
B56AAAB765CC2AD57E24764D92D4FCF6767219EAC6E10AC5CFD56DBFDBA0A9E6
CF8B200FB6A5BCD1D7FA7DC2333ACD3382E7A3654A11A996090AAE9F653AFF07
3087C2E4F721B55FBD8E43A845A80DB8255D9D8DD8C81D960E5723A96091CB41
D505E2DF4995E836833B9534EE4F2DFA7E168840254EDDDF4833B5B48F8A92F3
78FB9659B32314533E363ABCCAF25D9965CF6C945216D5005757C970C2004270
B5FFF4CA995B552D1DB0833E7F24F4EBF2D95DDD2092608D2A7E81AA54E3093E
DE6068C67A6BDDD7C983AB5B84AFB1ED342AF40098496AFCC52DE4AFE82FDD3A
DDEC125FC8E450DEC44F7C43F158E7D42E1401A8BF70A3C01BEA03C1ADBC7775
4FE919CBEFA5C9999CD46F001846E41606DD510D2C7D0BE9DD100DBC7E3A4278
FFC5AAE08B40C5E867BF2D9C069A73216540DA463702AC37E9F373789502818C
8B6C191BC641A5FF25FEB234CF7AA0AC8409532C515EFF90DA827BF8D40206BB
DA15586DAB0F3D90947C94C9D4473FCB39173022680DE45D51E4F77D6F54DCBA
E59BC1CBA36F7B648143DABB63C31D869339CE00344753C23C6303AC847DEE0F
651FB8EE239D0DA342BBDDBE46A7FCB37F78C3B0CA87738776104AF45BFF928E
0A767E0943F278EAA606E71495CF77CCD097059204CB2C5B04D1312714CE0388
1325876BF20B1D1DEEEA20769DAA8DD669C3630465995F1C803B9E195C66844C
2E93DBD608B2996BAFE6390034503C71BC5343F6ED7DE6C25BE453BD9A751F61
37DFEA833004F4689476B95143A7A94FD736C55A275D939BD09C743531E275C5
69901E1F10DF7F33A68B06CBDBDDB1611A44C7C56BF3B19308C7344EC8AA738E
89EE3D67BEAA85DEDE5F44EE9D9E2212C0890B99274322BC4E616E14D4D40BE8
2EDDCA28A4AB685FDDD6D3428690834FC231BB39EE084A1A79E136897788B2B2
38DB7E2BC21B3F12A88DD8305E833A81740029BD76D448CE2D8DB1CF6EE4E014
6BBECF17E6550769AE4BE7C0541599DD68E0DAE5956FDA55C71C9950167000EA
6EFBBCE12817A8A7EDBE6EF03154B8B1D64A694F1331B141F1A72844D7E3F34A
B7B39A19492923FEDB2BFE77310709DAC7DF51FD697E94AABCCD0B2D0D264ECA
DA594526FBA26021B4BA0AE04A9CCD6FDB0FC6323BD29DC4CAA823AD123D9AF1
9B0F9A55B876E6A12533F97174731B0D985ABABAF4856D1319C3784E906E3170
9F58977A6EF660824E290A945831889E14A85193BD9AD3168225CBD20F2915AF
B1BD9BFCF14236A4113C3313CC1DBB87042F678387CE849DFCCB120DD85CD394
1EECDB36183486CC9D63D99B1C2BB8D58DCA79C74713ED37BF37536A07A7DC28
71810A92E211DDDA1145031D37C2CFB46A86BF72E15E5B9143947896F60E6AA9
DC2161517ED8B89A85D9889A9D144AE9630C4F792E7BD7665A9E916225861275
A7E33DA0671CBE7B7007B508041609C6339042F32A0049126A66D83798B33929
9E81AFFC6D632D58439892A77146805768F0570F59266719A1DF9053753D44CA
1453E7FF6B27E5C562ADFF3910623BA00473F048EEFDB3FD4C41CC94E485395A
9345687DF91DDE798AD51B78A1A11EA1C3FA0CFC7B7205B8B36A0F3C3A9304A2
D66F80014EA3861089AC8F1622266F4359133B5092141C6E34DA6FE918E70B44
CF7012A4230CC908BAE9397F2A5132DBF9E99D2D40064A16BDCE8459A9754CAD
9B42076901D493CC58D8DA984DEAA74C0DF363EAA168F565A5CDF7A8C16AFC88
E7BF719AA4BE18AD7D62C9811CC547DBF44B6AAE724B43DE2F14A5B209788C9B
F4E38DCE898C5743D433646853162010FD16FF24FEEC1DB7E0A7DBC126999129
5B712A9A9258B465A3606E89BAEDCD9E573A2B023352069E80E226AFAECA8360
2B05915CA5FE986AE792AAEB87BC773D2549D6D74DAB538C2809D735AF12D1EC
D718BE4E606081A106519867F7E9BFDEBCF58DAD1BD8C209AAB55A37A42B541B
C32837297611F3015452EE3198D683C61DB7D323E4F705FEB2ADA203EF3DFCE1
A6B1FC96A2EDBD3DF6919BF7DE78B0D3263C0DE6916573DC22FB6D9E7A10EC56
645119995F085D950BE2E3A6FF12D4D04CAEB23C5A7CFEDC8FED89069B72F3C2
64E797125DF935E5584F44FEF6EA01CB26040427AEDF68DD98BBA84C7510B64A
13292289F9E78DE07E9C53FF6896A68FB5BA2D7514CCCB673F839CF8C96D5117
F514AFDF204A91E1274937A0AAAB87DCC412581BCF84DD78A65C109D56319C62
81AD62EA903ED017D6EC72FCB353A46F5342563C1BB386BA7D02FC2DB457DA80
1372453F4B61D9EB5A77D4E5124E3160143DC384AAF67E3CCD05186B02D2552D
C026E11ECBAFDF07D4C116A62EA8395B03E9BB66C8A394B0709B879305FD53EE
FCB67D7D5CB1034F753BA4E2B99A1FA292487813FFBC47DB80208E392BD64D40
64DE8C8C92202C50007C851355DC1D8EC857A8C3684A687ED7333988D8DCC0E8
AD6F2307E182CDECAB1305DF0D254A643F5DF670FA95AA16B7CFAE23B8C863F9
21409B4083D926A2DA14B4533643CD590C79BED27410B327490B2AE2FD582BF9
31348224657701332B164D974C161354A4851417679E5F62292FB1A87F7DE941
0A2F2832AC59F57F918228F0745F3F1AC0494E8C78D6D3E5EBCE9F78845CA020
4B440648C38216A6816E6F2E4A69E37C78B11346571BD83B0C983C34819B195E
232BB1658892D36134B54F946C80E0D9DA87F819F7EFDA9A91CC138B78BEC9DA
D41745AE76706DB31621401688A75F933BAAD798DC7F9FBB50BED32CBA53B48A
E0CA6FE8A9B3535350C1AD3EBD24C975486B2DB96C911E9425963487E15E5B1F
F712A8B463F94B51E27D423BB064C6F14E5FDDBF1680CEADA2F3FD6A5F4C34BD
60D2EB86CDB980FE04EB1594158FDD499BE1790E32F9389F30E793E0A9396CEC
8F5EAF7C1BDC2DA670C61311C81B5CDFB9D756AFA14AFB4FF75FF5286EE97780
A41017CF9D3B19B2B07386548B5D870909C5C87C3DBCF11F5182A8B94F4E456E
B4FB107938279484AA05BB802C4C0EBE088A4396F0829DC7B3A52D3C95FC379D
ABDC0CC388143B211D1DAE663F3B247D4BBFFE28A3F95579425F296DEA6F047D
5910CCE616D078542E6DF100ADCD91F3A561749BF7A2BD1D723F3F447B8FE5DA
4F79525A49B42F2E7857281E7C0ED9C543E87AEAECE686ABDDBC747F7D66F407
7946BC909743A0F49FC2C3D96B5FE5A106149D0E1D9109FC5F4FD3BBEB554CCC
B2B00B7EC240285A4C3F0B6F2271ABB1B4B5FA4E09C6F6C9B1CC8080FE974C95
4CDAC370045116DB259612C0EB3CED36968DED1932391ADBC452B546A8B952CD
CEF53AA5EA2561C4B5F83BA5350ED46029F5F1DC7C40D938693CAA35E1B775C6
22A99FF77E8286332325D129E28B1AAED7A8847F462DF2BE8160DD23B038A0C6
8B58E0473008F56ECD7B3253E4281AB44A724358DCBD2D90170043452788C328
D048BF1FD47C8D35DB825B354FF4AE6D9FA912B807BB39FD46A4F36C2A4DCB69
067E1E257C4F4F0AECB5864B07F98F3421CF1BA5A25EB665A40321C36B5B2312
DCAE06E1182424A79B724298A5A2C33BC8D808640C120A5FE96A0DAD3E3B26A1
72756CE650FD810C89DC5B25C7055369FA08CA39CC1E932C2C18A2E67C68E555
B8E0B0D332574014DFFDDC35DAACAC53AF1CF2AD97A076E3FA84CE3D7D6EFF89
806653418C0024A2455870EE642AA97204BD1DC113A1FB9C5695EF8B36258249
F633C93DA46808A0DB102B61F81E8BE5FCE3C233BA515D2819F61138C48845BA
B4682564E3FD561243E8BC58E5127977CB1AF5F8BACB45D9ABBF158FA0D823E8
9BF093B82C331ED80AF49BBC148DF29B0DFEE7AA232CBD9F80C03AEC242EC7B9
8C744760AB68EAFE6AD75FD9ED674B20A0A84ECC068AB593045590A5438C4BD6
8F6CD73072D1778D93421F7E288A1C0C624D369325A984E37ED147D7F4655D7E
EF660ACB91E42D2B5CC818AA44664E4555BF5C932079EB38FF6E5EA5498F9E1D
DB41D2D378478F256754BB55A900A3235B62E761FCC72579F842D3D18DA3AC3F
D10532DF12738BAD8FEC87E01C7A18E2CBA54BCA174716F4CD8435D3BEEC9A54
053265F8A43A725EDCAD2B03A9681A73062CF214A5C959B2B13BD57A2EF9F467
596A648B94830A7906CD9D2E11D91FF4BB05D47CB51B444981C351BF998BA260
EE32012AAD6AC4E78A4B7153C85B69CF5161161011ADD288F2051514437F38A4
BF6A54311ED4535555FFA621EDA59176FEE4394110977E61C8E7D8AD6036EA9E
BAAF1529CE95A57031FDBB9A33C5CF3CFB09436AA2BFBA2A5E2E84A64C7FDFFC
3805E979EF1A07CCD60A6277F696FD4BE7C62825B6026099A25119124D2F335E
E5A0A601B23ADB96A3979553F9D8F52C56F1DE0CB3C2F06B68F2BEB1F0F95C79
383C096A0234AC5EFA116E56C9C368459D6FD7353BFB055ED8EFB57A3D84A956
F6626E93FFD7AD1B6F1BEA00D65917A4D87AC06F315DE58B42727E145DEADFC3
9F8D6D74CD7530D46B75D4D604B7B9649DF3ED4E36219B56DE3A4384D6EB783C
1782B6B7EB12CD56575B7A656055097957A190664157CEB5489ABA8897EDBDE5
8E0F935AFCED2466F9154E96454D7FADFC9B3BF76B5F7FD1C83087D4D5F5414A
6E7AAD943F738688EEC38183D0D12AFABBC62DB8B4A807832949985755A1E6CD
8BD06E9D16CEFFCEE85AB1E8218ACBDB5887F7C9399CA34B38E1A218CD53C053
1466B3FA517D1A5A9B4C79ABC367135807F241A285D0505CCE5824A1DABA0783
DFE2162B65FC97FCF3C73382BCB3DC637900A93DF479CC1615B14AE199FC2879
6E4E0A43A89FB0160755E9F5EC8A1A52C1FADAA1E861F137807FF0F3B3415980
4A301B9CC2B53AD4FAD849B0C7B8E771CD8919788E93DCD41B6C132E44D75C0F
7F3A1A84FCD93159B9A3D05F86784BBA7B4BD7018291346F88B6D0ADBEFDCCDF
3E410389EEFF2B29C5BF451487DFA3A68B4A753A76DC3E574E0089251FF7553A
7A81A24FB319F40B48B736D006AF653330F48345697684BB796AEBB93BC99633
34781FA95D538880EBA458C9299F78B5C1A118B39A77DBBF158293A6344E26DE
E52553A2B58180201047047DDC8012F6E0C88BFED879E3C634067B98FED215EA
D2835133ED068D2007E71220E01059DE54C523438052B8CB7B4DA120B14F7900
ACCF993709826117A5F864DEA899DA6361C2DFD270D4AE5A3AC684694CB973B6
17D7CE9B5835B07ECFA8A81320E20488DF5C2D5872239DD704E06B393A3816C5
DE659734F46841BE225190B3C98C19D00A812CB9775134669DE728AC92E778CB
5D20E58E4A85B2EF310DF1FCD144B4FAD6207499764E142FAD1FB9F1739F7F14
84C8C0A667EC2718A349CD257DE4831A9486C33931F922F6CF6C3A37A0101DB2
5985C3A6B2530C5322533D3DD9301A01E560E07D26FF83CAC2BBF86E555560B7
0513420BA33066670F1D1FFF9EC80D2C2139EDE33CBA60E9338D2ACE14F38835
BD5F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (rapport.dvi)
@start /Fa 130[44 1[44 1[44 3[44 44 44 44 1[44 44 44
44 44 1[44 44 44 1[44 44 44 44 1[44 37[44 14[44 1[44
44 44 40[{ T1Encoding ReEncodeFont }25 83.022 /SFTT1000
rf /Fb 134[44 3[44 44 44 44 1[44 44 44 44 44 1[44 44
44 1[44 44 44 44 44 44 8[44 4[44 44 4[44 3[44 2[44 44
10[44 10[44 1[44 44 1[44 42[{ T1Encoding ReEncodeFont }31
83.022 /SFIT1000 rf /Fc 136[60 2[32 33 33 1[46 42 46
69 23 2[23 1[42 1[37 1[37 1[42 12[60 22[65 7[42 42 42
42 42 42 48[{ T1Encoding ReEncodeFont }22 83.022 /SFRM1000
rf /Fd 202[33 33 33 33 33 49[{}5 58.1154 /CMR7 rf /Fe
227[36 28[{}1 83.022 /CMMI10 rf /Ff 199[46 1[46 1[46
1[46 46 46 48[{ TeXBase1Encoding ReEncodeFont }6 83.022
/NimbusSanL-Regu rf /Fg 171[91 73 98 7[68 3[83 2[95 14[66
66 66 66 49[{ T1Encoding ReEncodeFont }10 119.552 /SFBX1440
rf /Fh 140[38 38 4[81 3[27 4[54 2[49 13[54 72 5[61 76
1[35 7[73 11[49 2[49 49 49 48[{ T1Encoding ReEncodeFont }16
99.6264 /SFRM1200 rf /Fi 139[52 1[52 2[67 75 112 7[60
75 60 1[67 12[97 4[105 10[103 9[37 3[67 54[{ T1Encoding ReEncodeFont }
14 143.462 /SFRM1728 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 TeXcolorgray 0
TeXcolorgray 1249 432 a Fi(TD)45 b(6:)h(Ordonnancemen)l(t)1647
672 y Fh(LAKSIR)33 b(Rida)1668 855 y(15)f(mars)h(2020)0
1213 y Fg(1)131 b(F)l(CFS)125 3714 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 17.08206 T 15 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 17.08206
0.0 17.08206   /Lineto /lineto load def 0  setlinejoin false Line 
gsave 0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore grestore grestore 0.0 17.08206 T } repeat
end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  17.08206 0.0 T 21 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 290.39505 0.0
17.08206   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 17.08206 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 17.08206 375.80544 290.39505 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714
a
tx@Dict begin { 17.08206 17.08206 } PutCoor PutBegin  end
 125 3714 a 102 3806 a Ff(0)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125
3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 51.24619 17.08206 } PutCoor PutBegin  end
 125 3714 a 102 3806 a Ff(2)125
3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 85.41031 17.08206 } PutCoor PutBegin  end
 125
3714 a 102 3806 a Ff(4)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 119.57443 17.08206 } PutCoor PutBegin  end
 125 3714 a 102 3806 a Ff(6)125
3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 153.73856 17.08206 } PutCoor PutBegin  end
 125
3714 a 102 3806 a Ff(8)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 187.90268 17.08206 } PutCoor PutBegin  end
 125 3714 a 79 3806 a Ff(10)125
3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 222.0668 17.08206 } PutCoor PutBegin  end
 125
3714 a 79 3806 a Ff(12)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 256.23093 17.08206 } PutCoor PutBegin  end
 125 3714 a 79 3806 a Ff(14)125
3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 290.39505 17.08206 } PutCoor PutBegin  end
 125
3714 a 79 3806 a Ff(16)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 324.55917 17.08206 } PutCoor PutBegin  end
 125 3714 a 79 3806 a Ff(18)125
3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 358.7233 17.08206 } PutCoor PutBegin  end
 125
3714 a 79 3806 a Ff(20)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { -17.08206 273.31299 } PutCoor PutBegin  end
 125 3714 a 102 3783 a Fe(\034)138
3795 y Fd(1)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714
a 125 3714 a
tx@Dict begin { -17.08206 222.0668 } PutCoor PutBegin  end
 125 3714 a 102 3783 a Fe(\034)138 3795 y
Fd(2)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125
3714 a
tx@Dict begin { -17.08206 170.82062 } PutCoor PutBegin  end
 125 3714 a 102 3783 a Fe(\034)138 3795 y Fd(3)125
3714 y
tx@Dict begin  PutEnd  end
 125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { -17.08206 119.57443 } PutCoor PutBegin  end
 125
3714 a 102 3783 a Fe(\034)138 3795 y Fd(4)125 3714 y
tx@Dict begin  PutEnd  end

125 3714 a 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { -17.08206 68.32825 } PutCoor PutBegin  end
 125 3714
a 102 3783 a Fe(\034)138 3795 y Fd(5)125 3714 y
tx@Dict begin  PutEnd  end
 125 3714
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 34.16412 17.08206 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 85.41031 17.08206 85.41031   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 136.6565 17.08206 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 187.90268 17.08206 187.90268   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 239.14886 17.08206 239.14886   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 17.08206 273.31299 17.08206 239.14886   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 51.24619 222.0668 51.24619 187.90268   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 85.41031 170.82062 85.41031 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 119.57443 119.57443 119.57443 85.41031   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 153.73856 68.32825 153.73856 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.08206 239.14886 51.24619 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714
a
tx@Dict begin { 34.16412 239.14886 } PutCoor PutBegin  end
 125 3714 a 125 3714 a
tx@Dict begin  PutEnd  end
 125 3714 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 51.24619 239.14886 68.32825 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 59.78722 239.14886 } PutCoor PutBegin  end
 125 3714
a 125 3714 a
tx@Dict begin  PutEnd  end
 125 3714 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 68.32825 187.90268 85.41031 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 76.86928 187.90268 } PutCoor PutBegin  end
 125 3714 a 125 3714
a
tx@Dict begin  PutEnd  end
 125 3714 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 85.41031 187.90268 170.82062 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 128.11546 187.90268 } PutCoor PutBegin  end
 125 3714 a 125 3714 a
tx@Dict begin  PutEnd  end
 125
3714 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.82062 136.6565 239.14886 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 204.98474 136.6565 } PutCoor PutBegin  end
 125 3714 a 125 3714 a
tx@Dict begin  PutEnd  end
 125 3714
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 239.14886 34.16412 256.23093 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
3714 a 125 3714 a
tx@Dict begin { 247.6899 34.16412 } PutCoor PutBegin  end
 125 3714 a 125 3714 a
tx@Dict begin  PutEnd  end
 125 3714 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 256.23093 85.41031 273.31299 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714
a
tx@Dict begin { 264.77196 85.41031 } PutCoor PutBegin  end
 125 3714 a 125 3714 a
tx@Dict begin  PutEnd  end
 125 3714 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 273.31299 34.16412 290.39505 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 281.85402 34.16412 } PutCoor PutBegin  end
 125 3714
a 125 3714 a
tx@Dict begin  PutEnd  end
 125 3714 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 290.39505 85.41031 307.47711 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 298.93608 85.41031 } PutCoor PutBegin  end
 125 3714 a 125 3714
a
tx@Dict begin  PutEnd  end
 125 3714 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 307.47711 85.41031 324.55917 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 316.01814 85.41031 } PutCoor PutBegin  end
 125 3714 a 125 3714 a
tx@Dict begin  PutEnd  end
 125
3714 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 324.55917 85.41031 341.64124 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3714
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3714 a 125 3714 a
tx@Dict begin { 333.1002 85.41031 } PutCoor PutBegin  end
 125 3714 a 125 3714 a
tx@Dict begin  PutEnd  end
 125 3714
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 341.64124 85.41031 358.7233 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3714 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
3714 a 125 3714 a
tx@Dict begin { 350.18227 85.41031 } PutCoor PutBegin  end
 125 3714 a 125 3714 a
tx@Dict begin  PutEnd  end
 125 3714 a 0
3913 a Fc(T)-7 b(otal)27 b(completion)g(time)h(=)g(0)0
4013 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(0)0 4112
y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(0)p 76 4391
4 100 v 96 4391 V 0 4362 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 61 w(f)e(c)g(f)g(s)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 13 w(-)j(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray
76 4491 V 96 4491 V 0 4461 a Fc(2)p 0 TeXcolorgray 90
w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(f)g(c)g(f)g(s)p 0 TeXcolorgray 9 w(\()p 0 TeXcolorgray
11 w(t)g(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 15 w(,)p 0 TeXcolorgray
64 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 15 w(,)p 0 0.4 0
TeXcolorrgb 64 w(i)h(n)g(t)p 0 TeXcolorgray 61 w(*)p
0 TeXcolorgray 63 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
10 w(\))61 b({)p 76 4591 V 96 4591 V 0 4561 a Fc(3)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
298 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(F)h(I)g(X)g(M)g(E)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 10 w(:)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
64 w(R)g(a)g(n)g(d)g(o)g(m)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 67 w(s)g(c)g(h)g(e)g
(d)g(u)g(l)g(e)g(r)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
15 w(,)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 65 w(r)h(e)g(p)g(l)g(a)g(c)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(b)e(y)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(a)i(p)g(p)g(r)g(o)g(p)g(r)g
(i)g(a)g(t)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(c)f(o)g(d)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 63 w(*)f(/)p 0 TeXcolorgray 76 4690 V 96
4690 V 0 4660 a Fc(4)p 0 0.4 0 TeXcolorrgb 299 w Fa(r)h(e)g(t)g(u)g(r)g
(n)p 0 TeXcolorgray 0 TeXcolorgray 68 w(r)h(a)g(n)g(d)g(o)g(m)g(s)g(c)g
(h)g(e)g(d)g(u)g(l)g(e)g(r)p 0 TeXcolorgray 8 w(\()p
0 TeXcolorgray 10 w(p)e(r)g(o)g(c)g(s)p 0 TeXcolorgray
16 w(,)p 0 TeXcolorgray 62 w(r)g(e)g(a)g(d)g(y)p 0 TeXcolorgray
16 w(,)p 0 TeXcolorgray 63 w(d)h(e)g(l)g(t)g(a)p 0 TeXcolorgray
11 w(\))i(;)p 76 4790 V 96 4790 V 0 4760 a Fc(5)87 b
Fa(})p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1929
5400 a Fc(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 83 a Fg(2)131 b(RR)125 2584 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 17.08206 T 15 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 17.08206
0.0 17.08206   /Lineto /lineto load def 0  setlinejoin false Line 
gsave 0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore grestore grestore 0.0 17.08206 T } repeat
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  17.08206 0.0 T 21 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 290.39505 0.0
17.08206   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 17.08206 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 17.08206 375.80544 290.39505 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 17.08206 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(0)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 51.24619 17.08206 } PutCoor PutBegin  end
 125 2584
a 102 2677 a Ff(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 85.41031 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(4)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 119.57443 17.08206 } PutCoor PutBegin  end
 125 2584
a 102 2677 a Ff(6)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 153.73856 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(8)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 187.90268 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(10)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 222.0668 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(12)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 256.23093 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(14)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 290.39505 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(16)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 324.55917 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(18)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 358.7233 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(20)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 273.31299 } PutCoor PutBegin  end
 125 2584
a 102 2653 a Fe(\034)138 2665 y Fd(1)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 222.0668 } PutCoor PutBegin  end
 125 2584 a 102 2653
a Fe(\034)138 2665 y Fd(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 170.82062 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138
2665 y Fd(3)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584
a 125 2584 a
tx@Dict begin { -17.08206 119.57443 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y
Fd(4)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { -17.08206 68.32825 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y Fd(5)125
2584 y
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 34.16412 17.08206 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 85.41031 17.08206 85.41031   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 136.6565 17.08206 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 187.90268 17.08206 187.90268   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 239.14886 17.08206 239.14886   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 17.08206 273.31299 17.08206 239.14886   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 51.24619 222.0668 51.24619 187.90268   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 85.41031 170.82062 85.41031 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 119.57443 119.57443 119.57443 85.41031   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 153.73856 68.32825 153.73856 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.08206 239.14886 34.16412 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 25.6231 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 34.16412 239.14886 68.32825 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 51.24619 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 68.32825 187.90268 136.6565 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 102.49237 187.90268 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 136.6565 85.41031 153.73856 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 145.19753 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 153.73856 34.16412 187.90268 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 170.82062 34.16412 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 187.90268 187.90268 222.0668 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 204.98474 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 222.0668 136.6565 273.31299 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 247.6899 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 273.31299 85.41031 341.64124 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 307.47711 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 341.64124 136.6565 358.7233 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 350.18227 136.6565 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a 0 2784 a Fc(T)-7 b(otal)27 b(completion)g(time)
h(=)g(0)0 2883 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(0)0
2983 y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(0)p
76 3262 4 100 v 96 3262 V 0 3232 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 59 w(r)t(r)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
12 w(-)h(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray 76
3362 V 96 3362 V 0 3332 a Fc(2)p 0 TeXcolorgray 90 w
Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(r)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray 12
w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 16 w(,)p 0 TeXcolorgray
63 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 16 w(,)p 0 0.4 0
TeXcolorrgb 63 w(i)h(n)g(t)p 0 TeXcolorgray 61 w(*)p
0 TeXcolorgray 63 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
11 w(\))61 b({)p 76 3461 V 96 3461 V 0 3431 a Fc(3)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
298 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(F)h(I)g(X)g(M)g(E)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 10 w(:)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
64 w(R)g(a)g(n)g(d)g(o)g(m)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 67 w(s)g(c)g(h)g(e)g
(d)g(u)g(l)g(e)g(r)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
15 w(,)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 65 w(r)h(e)g(p)g(l)g(a)g(c)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(b)e(y)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(a)i(p)g(p)g(r)g(o)g(p)g(r)g
(i)g(a)g(t)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(c)f(o)g(d)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 63 w(*)f(/)p 0 TeXcolorgray 76 3561 V 96
3561 V 0 3531 a Fc(4)p 0 0.4 0 TeXcolorrgb 299 w Fa(r)h(e)g(t)g(u)g(r)g
(n)p 0 TeXcolorgray 0 TeXcolorgray 68 w(r)h(a)g(n)g(d)g(o)g(m)g(s)g(c)g
(h)g(e)g(d)g(u)g(l)g(e)g(r)p 0 TeXcolorgray 8 w(\()p
0 TeXcolorgray 10 w(p)e(r)g(o)g(c)g(s)p 0 TeXcolorgray
16 w(,)p 0 TeXcolorgray 62 w(r)g(e)g(a)g(d)g(y)p 0 TeXcolorgray
16 w(,)p 0 TeXcolorgray 63 w(d)h(e)g(l)g(t)g(a)p 0 TeXcolorgray
11 w(\))i(;)p 76 3660 V 96 3660 V 0 3631 a Fc(5)87 b
Fa(})p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1929
5400 a Fc(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 83 a Fg(3)131 b(SJF)125 2584 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 17.08206 T 15 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 17.08206
0.0 17.08206   /Lineto /lineto load def 0  setlinejoin false Line 
gsave 0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore grestore grestore 0.0 17.08206 T } repeat
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  17.08206 0.0 T 21 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 290.39505 0.0
17.08206   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 17.08206 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 17.08206 375.80544 290.39505 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 17.08206 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(0)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 51.24619 17.08206 } PutCoor PutBegin  end
 125 2584
a 102 2677 a Ff(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 85.41031 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(4)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 119.57443 17.08206 } PutCoor PutBegin  end
 125 2584
a 102 2677 a Ff(6)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 153.73856 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(8)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 187.90268 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(10)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 222.0668 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(12)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 256.23093 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(14)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 290.39505 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(16)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 324.55917 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(18)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 358.7233 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(20)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 273.31299 } PutCoor PutBegin  end
 125 2584
a 102 2653 a Fe(\034)138 2665 y Fd(1)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 222.0668 } PutCoor PutBegin  end
 125 2584 a 102 2653
a Fe(\034)138 2665 y Fd(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 170.82062 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138
2665 y Fd(3)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584
a 125 2584 a
tx@Dict begin { -17.08206 119.57443 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y
Fd(4)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { -17.08206 68.32825 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y Fd(5)125
2584 y
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 34.16412 17.08206 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 85.41031 17.08206 85.41031   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 136.6565 17.08206 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 187.90268 17.08206 187.90268   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 239.14886 17.08206 239.14886   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 17.08206 273.31299 17.08206 239.14886   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 51.24619 222.0668 51.24619 187.90268   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 85.41031 170.82062 85.41031 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 119.57443 119.57443 119.57443 85.41031   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 153.73856 68.32825 153.73856 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.08206 239.14886 51.24619 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 34.16412 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 51.24619 239.14886 68.32825 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 59.78722 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 68.32825 187.90268 102.49237 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 85.41031 187.90268 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 102.49237 136.6565 170.82062 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 136.6565 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.82062 187.90268 204.98474 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 187.90268 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 204.98474 34.16412 239.14886 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 222.0668 34.16412 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 239.14886 85.41031 256.23093 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 247.6899 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 256.23093 85.41031 290.39505 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 273.31299 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 290.39505 85.41031 307.47711 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 298.93608 85.41031 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 307.47711 85.41031 324.55917 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 316.01814 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 324.55917 187.90268 341.64124 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 333.1002 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 341.64124 187.90268 358.7233 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 350.18227 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a 0 2784 a Fc(T)-7 b(otal)27 b(completion)g(time)h(=)g(0)0
2883 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(0)0 2983
y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(0)p 76 3262
4 100 v 96 3262 V 0 3232 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(s)d(j)g(f)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 14 w(-)k(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray
76 3362 V 96 3362 V 0 3332 a Fc(2)p 0 TeXcolorgray 90
w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(s)g(j)g(f)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray
11 w(t)g(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 16 w(,)p 0 TeXcolorgray
63 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 64 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 15 w(,)p 0 0.4 0
TeXcolorrgb 64 w(i)h(n)g(t)p 0 TeXcolorgray 60 w(*)p
0 TeXcolorgray 64 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
10 w(\))61 b({)p 76 3461 V 96 3461 V 0 3431 a Fc(3)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
298 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(F)h(I)g(X)g(M)g(E)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 10 w(:)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
64 w(R)g(a)g(n)g(d)g(o)g(m)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 67 w(s)g(c)g(h)g(e)g
(d)g(u)g(l)g(e)g(r)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
15 w(,)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 65 w(r)h(e)g(p)g(l)g(a)g(c)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(b)e(y)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(a)i(p)g(p)g(r)g(o)g(p)g(r)g
(i)g(a)g(t)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(c)f(o)g(d)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 63 w(*)f(/)p 0 TeXcolorgray 76 3561 V 96
3561 V 0 3531 a Fc(4)p 0 0.4 0 TeXcolorrgb 299 w Fa(r)h(e)g(t)g(u)g(r)g
(n)p 0 TeXcolorgray 0 TeXcolorgray 68 w(r)h(a)g(n)g(d)g(o)g(m)g(s)g(c)g
(h)g(e)g(d)g(u)g(l)g(e)g(r)p 0 TeXcolorgray 8 w(\()p
0 TeXcolorgray 10 w(p)e(r)g(o)g(c)g(s)p 0 TeXcolorgray
16 w(,)p 0 TeXcolorgray 62 w(r)g(e)g(a)g(d)g(y)p 0 TeXcolorgray
16 w(,)p 0 TeXcolorgray 63 w(d)h(e)g(l)g(t)g(a)p 0 TeXcolorgray
11 w(\))i(;)p 76 3660 V 96 3660 V 0 3631 a Fc(5)87 b
Fa(})p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1929
5400 a Fc(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 83 a Fg(4)131 b(SR)-11 b(TF)125 2584 y
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 17.08206 T 15 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 17.08206
0.0 17.08206   /Lineto /lineto load def 0  setlinejoin false Line 
gsave 0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore grestore grestore 0.0 17.08206 T } repeat
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  17.08206 0.0 T 21 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 290.39505 0.0
17.08206   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 17.08206 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 17.08206 375.80544 290.39505 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 17.08206 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677
a Ff(0)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { 51.24619 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 85.41031 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677
a Ff(4)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { 119.57443 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(6)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 153.73856 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677
a Ff(8)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { 187.90268 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(10)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 222.0668 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677
a Ff(12)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { 256.23093 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(14)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 290.39505 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677
a Ff(16)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { 324.55917 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(18)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 358.7233 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677
a Ff(20)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { -17.08206 273.31299 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y Fd(1)125
2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 222.0668 } PutCoor PutBegin  end
 125
2584 a 102 2653 a Fe(\034)138 2665 y Fd(2)125 2584 y
tx@Dict begin  PutEnd  end

125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 170.82062 } PutCoor PutBegin  end
 125 2584
a 102 2653 a Fe(\034)138 2665 y Fd(3)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 119.57443 } PutCoor PutBegin  end
 125 2584 a 102 2653
a Fe(\034)138 2665 y Fd(4)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 68.32825 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138
2665 y Fd(5)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 34.16412 17.08206 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 85.41031 17.08206 85.41031   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 136.6565 17.08206 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 187.90268 17.08206 187.90268   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 239.14886 17.08206 239.14886   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 17.08206 273.31299 17.08206 239.14886   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 51.24619 222.0668 51.24619 187.90268   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 85.41031 170.82062 85.41031 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 119.57443 119.57443 119.57443 85.41031   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 153.73856 68.32825 153.73856 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.08206 239.14886 34.16412 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 25.6231 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 34.16412 239.14886 51.24619 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 42.70515 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 51.24619 239.14886 68.32825 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 59.78722 239.14886 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 68.32825 187.90268 102.49237 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 85.41031 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 102.49237 187.90268 136.6565 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 119.57443 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 136.6565 187.90268 170.82062 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 153.73856 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.82062 34.16412 204.98474 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 187.90268 34.16412 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 204.98474 85.41031 239.14886 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 222.0668 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 239.14886 136.6565 307.47711 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 273.31299 136.6565 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 307.47711 85.41031 324.55917 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 316.01814 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 324.55917 85.41031 341.64124 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 333.1002 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 341.64124 85.41031 358.7233 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 350.18227 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a 0 2784 a Fc(T)k(otal)27 b(completion)g(time)h(=)g(0)0
2883 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(0)0 2983
y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(0)p 76 3262
4 100 v 96 3262 V 0 3232 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 61 w(s)e(r)g(t)g(f)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 13 w(-)j(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray
76 3362 V 96 3362 V 0 3332 a Fc(2)p 0 TeXcolorgray 90
w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(s)g(r)g(t)g(f)p 0 TeXcolorgray 9 w(\()p 0 TeXcolorgray
11 w(t)g(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 15 w(,)p 0 TeXcolorgray
64 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 15 w(,)p 0 0.4 0
TeXcolorrgb 64 w(i)h(n)g(t)p 0 TeXcolorgray 61 w(*)p
0 TeXcolorgray 63 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
10 w(\))61 b({)p 76 3461 V 96 3461 V 0 3431 a Fc(3)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
298 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 64 w(F)h(I)g(X)g(M)g(E)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 10 w(:)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
64 w(R)g(a)g(n)g(d)g(o)g(m)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 67 w(s)g(c)g(h)g(e)g
(d)g(u)g(l)g(e)g(r)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
15 w(,)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 65 w(r)h(e)g(p)g(l)g(a)g(c)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(b)e(y)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(a)i(p)g(p)g(r)g(o)g(p)g(r)g
(i)g(a)g(t)g(e)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(c)f(o)g(d)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 63 w(*)f(/)p 0 TeXcolorgray 76 3561 V 96
3561 V 0 3531 a Fc(4)p 0 0.4 0 TeXcolorrgb 299 w Fa(r)h(e)g(t)g(u)g(r)g
(n)p 0 TeXcolorgray 0 TeXcolorgray 68 w(r)h(a)g(n)g(d)g(o)g(m)g(s)g(c)g
(h)g(e)g(d)g(u)g(l)g(e)g(r)p 0 TeXcolorgray 8 w(\()p
0 TeXcolorgray 10 w(p)e(r)g(o)g(c)g(s)p 0 TeXcolorgray
16 w(,)p 0 TeXcolorgray 62 w(r)g(e)g(a)g(d)g(y)p 0 TeXcolorgray
16 w(,)p 0 TeXcolorgray 63 w(d)h(e)g(l)g(t)g(a)p 0 TeXcolorgray
11 w(\))i(;)p 76 3660 V 96 3660 V 0 3631 a Fc(5)87 b
Fa(})p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1929
5400 a Fc(4)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
